languageName: "繁體中文(台灣)"
languageContribute: "幫助翻譯Rancher"

##############################
# Really generic things used in multiple places (use sparingly)
##############################
generic:
  actions: 操作
  active: Active
  activate: 啟動
  add: 新增
  advanced: 高級
  all: 全部
  any: 任何
  application: 應用程式
  as: 以
  back: 返回
  cancel: 取消
  closeModal: 關閉
  cluster: 叢集
  collapse: 摺疊
  collapseAll: 摺疊全部
  comingSoon: 即將推出
  command: 命令
  confirm: 確認
  containers: 容器
  created: 創建時間
  createdDate: "創建時間: {date}"
  custom: 自定義
  customize: 定製
  default: 默認
  description: 描述
  details: 詳情
  disable: 禁用
  disabled: 禁用
  displayName: 顯示名稱
  dockerId: '容器ID:'
  domainName: 域名
  done: 完成
  download: 下載
  edit: 編輯
  emptyString: ""
  enable: 啟用
  enabled: 啟用
  entrypoint: 入口
  environment: 環境
  expand: 展開
  expandAll: 全部展開
  experimental: "(實驗)"
  from: 來自
  false: 'False'
  generic: '常規'
  gigabyte: 'GB'
  group: 'Group'
  hardware: 硬件
  healthy: 健康
  help: 幫助
  hostname: 主機名
  hours: 小時
  hpa: HPA
  id: 用戶ID
  image: 鏡像
  import: 匯入
  internal: 內部
  ipAddress: Pod IP
  istioRule: 流量規則
  key: 鍵
  limit: 限制
  limits: 限制
  loading: "下載中..."
  loggingOut: "註銷..."
  member: 成員
  mbps: Mbps
  mibibyte: 'MiB'
  minutes: 分鐘
  milliseconds: '毫秒'
  missing: "*%缺少%*"
  moreActions: 更多操作
  na: 'n/a'
  name: 名稱
  namespace: 命名空間
  namespaces: 命名空間
  never: 從不
  no: "否"
  noRating: 無評價
  node: 主機
  none: 無
  completedOf: "{completed} of {total}"
  owner: 所有者
  paste: 貼上
  pod: pod
  podRestarts: Pod重啟次數
  port: 埠
  ports: 埠
  prefix: 前綴
  project: 專案
  persistentVolume: persistent volume(PV)
  persistentVolumeClaim: persistent volume claim(PVC)
  random: 隨機
  remove: 移除
  restarts: 重啟次數
  role: 角色
  save: 保存
  saved: 已保存
  saving: 保存中
  scope: 範圍
  search: 搜索
  searchOrCustomInput: 搜索或輸入自定義值
  searching: '正在搜索...'
  seconds: 秒
  select: 選擇
  service: 服務
  services: 服務
  size: 大小
  state: 狀態
  tags: 標籤
  test: 測試
  testing: 測試
  to: 至
  total: 合計
  true: 'True'
  type: 類型
  unknown: 未知
  unknownUser: 無法獲取用戶資訊
  upload: 上傳
  url: URL
  user: 用戶
  uuid: UUID
  value: 值
  version: 版本
  yes: "是"
  isRequired: 必須填寫
  readOnly: 唯讀
  readWrite: 讀寫
  writeOnly: 唯寫
  full: 完整
  linux: Linux
  windows: Windows
  host: 主機
  istioHostPlaceholder: 選擇或輸入主機
  cpu: CPU
  memory: 記憶體
  noData: 沒有數據
  authorize: 認證 & 同步程式庫
  branch: 分支
  commit: 構建提交
  repository: 程式庫
  registry: 鏡像庫
  imageName: 鏡像名稱
  loginIn: 登入
  logout: 退出用戶{user}
  pipeline: 項目
  is: 是
  push: 提交到程式庫
  noBranch: 該程式庫中沒有任何分支。
  github: GitHub
  gitlab: GitLab
  bitbucket: Bitbucket
  required: '{key}為必填項。 '
  run: Run

realmNames:
  all: 全部
  usWest: 美國西部
  usEast: 美國東部
  asia: 亞洲
  euWest: 歐洲西部
  euEast: 歐洲東部

##############################
# Routes
##############################
accountsPage:
  detail:
    header: 用戶資訊
    table:
      headers:
        permission: 權限
        role: 角色
        clusterName: 叢集
        projectName: 專案
        active: 啟動
        created: 已授權
        group: 使用者群組
      global:
        title: 全域權限
        description: 訪問管理影響整個安裝的事情
        admin: 此用戶是管理員並擁有所有權限
        noRoles: 此用戶沒有全域角色
      cluster:
        title: 叢集角色
        description: 授予此用戶的單個叢集的角色
        noRoles: 此用戶沒有專案角色
      project:
        title: 專案角色
        description: 授予此用戶的單個專案的角色
        noRoles: 此用戶沒有專案角色
      roles:
        title: 角色
  index:
    header: 用戶
    localLink: 新增用戶
    groupLink: 分配全域角色
    table:
      id: '用戶ID'
      kind: 類型
      username: 本地用戶名
      identity: 標識
      noData: 目前還沒有用戶
      noMatch: 沒有用戶匹配當前搜索
      noName: 無
  groups:
    header: 使用者群組
    table:
      groupName: 群組名稱
      globalRole: 全局角色名稱
      noData: 没有定義群組。
      noMatch: 没有群組匹配當前搜索
      noName: None
  new:
    header: 新增用戶
    errors:
      usernameReq: 必須填寫用戶名
      usernameInExists: 用戶名已存在，請選擇一個新的用戶名
      pwReq: 密碼必須設置
      role: 新用戶需要具備角色。從列表中選擇一個角色
    form:
      username:
        labelText: 用戶名
        placeholder: '例如: jsmith'
      password:
        labelText: 密碼
      name:
        labelText: 顯示名稱
        placeholder: '例如: John Smith'
      type:
        labelText: 帳號類型
      description:
        labelText: 描述
        placeholder: '例如: 這是John Smith的帳號'
  editGroup:
    header: 編輯群組
  newGroup:
    header: 將全局角色分配給群組
    warning: 為群組分配全局角色只能與支持群組的外部auth提供程序一起工作。本地授權不支持群組。
    errors:
      group: 需要指定群組。
      role: 需要指定角色
    form:
      group:
        labelText: 選擇要添加的群組
  modal:
    password: 修改密码

appDetailPage:
  header: "App: {appName}"
  endpoints:
    title: 端點
    detail: '此應用的公共端點'
    endpoint: Endpoint
    protocol: 協定
    noData: 此應用未創建公開終端
    noMatch: 沒有滿足當前搜索的公共終端
  answers:
    title: 應答
    detail: 自定義應用應答
    variable: 變數
  notes:
    title: 注釋
    detail: '關於如何使用此應用的說明'
  workloads:
    title: 工作負載
    detail: 此應用創建的工作負載
    nodata: 此應用未創建工作負載
  ingress:
    title: Ingress規則
    detail: 此應用創建的入口規則
    nodata: 此應用未創建入口規則
  services:
    title: 服務
    detail: 此應用創建的服務
    nodata: 此應用未創建服務
  volumes:
    title: volumes
    detail: 此應用創建的 persistent volume 聲明(Pvc)
    nodata: 此應用未創建 persistent volume 聲明
  configMaps:
    title: 設定映射
    detail: 與此應用關聯的設定映射
    nodata: 此應用程式沒有設定映射
  secrets:
    title: 密文
    detail: 此應用相關的密文(Secrets)
    nodata: 此應用未使用密文

alertPage:
  na: 未配置
  items: 項目
  addSelectorLabel: 添加選擇器
  create: 創建
  save: 保存
  cluster: 叢集
  project: 項目
  alertGroups: 警告組
  newOrEdit:
    showAdvanced: 顯示高級選項
    initialWait: 等待時間
    interval: 時間間隔
    initialWaitHelpText: 在觸發警告到發送通知需要等待多長時間
    failed: 掃描失敗
    run: 掃描完成
    repeatIntervalHelpText: 當警告處於活動狀態時，重複發送通知的時間間隔
    whenA: 當
    whenAn: 當
    happens: 發生
    sendA: 發送
    to: 到
    alert: 警告
    is: 是
    lessThan: 少於
    and: 和
    critical: 危險
    addRecipient: 添加接收者
    info: 訊息
    normal: 正常
    warning: 警告
    notReady: 未就緒
    unhealthy: 不健康
    cpuUsage: CPU預留超過
    memUsage: 記憶體預留超過
    podPlaceholder: 選擇Pod
    notRunning: 未運行
    notScheduled: 未調度
    restarted: 重啟
    restartedTimes: 次在最近的
    minutes: 分鐘
    available: 可用
    createOne: 創建一條
    noNotifierHelpText: 沒有定義通知規則
    workloadTypePlaceholder: 選擇工作負載類型
    resourcePlaceholder: 選擇資源
    notifierPlaceholder: 選擇通知
    nodePlaceholder: 選擇主機
    systemServicePlaceholder: 選擇系統服務
    nodeRequired: 需要選擇主機
    nodeSelectorRequired: 需要主機選擇器
    recipient:
      helpText: 默認情況下使用通知程序中設置的值,您可以用另一個值覆蓋它。
    expression:
      label: 表達式
      noData: 圖表無數據
      error: 獲取圖表數據失敗
      placeholder: 輸入表達式
    removeAlert: 刪除警告規則
    alertRule: 警告規則
    groupWaitSeconds:
      label: 警告組等待時長
      helpText: 警告觸發後發送的等待時長
    groupIntervalSeconds:
      label: 警告組間隔時長
      helpText: 添加觸發報警的規則進組後,發送警告的間隔
    repeatIntervalSeconds:
      label: 重複間隔
      helpText: 警告發送後再次發送的間隔
    monitoringDisabled: 表達式類型不可用,點擊
    enableMonitoring: 啟用監控
    for: 持續
    moreTarget: 更多的規則類型
    inherited:
      label: 組繼承
      enabled: 啟用 - 從組繼承高級選項
  resourceKinds:
    # backend use capitalized name
    Pod: Pod
    Node: Node
    Deployment: Deployment
    DaemonSet: DaemonSet
    StatefulSet: StatefulSet
  targetTypes:
    pod: Pod
    node: Node
    deployment: Deployment
    daemonset: Daemonset
    statefulset: Statefulset
    workload: Workload
    event: Event
    systemService: System Service
    nodeSelector: Node Selector
    workloadSelector: Workload Selector
    metric: Metric
    cisScan: CIS 掃描
    undefined: None
  index:
    addAlertGroup: 添加警告組
    addAlert: 添加警告規則
    noAlerts: 當前沒有配置警告規則。
    table:
      noMatch: 沒有警告與當前搜索匹配。
      noData: 沒有配置警告規則
      noGroup: 未分配警告組
      condition: 條件
      target: 目標
      recipients: 接收者
      displayCondition:
        failure: 失敗
        notScheduled: 未調度
        notRunning: 未運行
        available: '{percent}%可用'
        restarted: 在{interval}分鐘內重啟{times}次
        notready: 未就緒
        unhealthy: 不健康
        happens: 發生
        notReady: 未就緒
        cpuUsage: 'CPU使用超過{percent}%'
        memUsage: '記憶體使用超過{percent}%'
        expression: 表達式
  new:
    addHeader: 添加警告組
    editHeader: 編輯警告組
    addRuleHeader: 添加警告規則
    editRuleHeader: 編輯警告規則
  comparison:
    equal: 等於
    not-equal: 不等於
    greater-than: 大於
    less-than: 小於
    greater-or-equal: 大於或等於
    less-or-equal: 小於或等於
    has-value: 不為空

rolesPage:
  title: 角色
  headers:
    global: 全域
    cluster: 叢集
    project: 項目
  index:
    localLink: 新增角色
    warning: "不存在在用戶首次登入時可能產生意外後果的默認角色。請將其中一個角色設置為新用戶默認值。"
    table:
      builtin: 內置
      created: 創建時間
      enabled: 已啟用
      name: 名稱
      id: Id
      noData: 目前還沒有角色
      noMatch: 沒有與當前搜索匹配的角色
      subjectKind: 類型
      template: 模板
      global: 新用戶默認角色
      cluster: 新叢集默認角色
      project: 新專案默認角色
      showDefaults: 僅顯示默認角色
    errors:
      inherited: "角色{displayName}被: {roleNames}繼承"
  resources:
    title: 授權資源
    detail: 對Kubernetes資源的具體操作進行授權。
  inherit:
    title: 繼承角色
    detail: 繼承其他角色的所有權限
  addRole: 新增角色
  editRole: 編輯角色
  saveEdit: 編輯
  saveNew: 創建
  new:
    errors:
      nameReq: 名稱(必填)
      memberReq: 成員是必需的
      nameInExists: 名稱是已經存在， 請使用一個新的角色名稱。
      ruleResourceReq: 資源是規則所必需的
      roleTemplate: 角色模板是必需的
      noSelectedRoles: 請為該用戶至少選擇一個角色。
      roleAlreadyExists: 用戶已經具有"{key}"角色。
    form:
      name:
        labelText: 姓名
        placeholder: '例如: 開發者'
      context:
        labelText: 上下文
        detail: 此角色的適用範圍適合在此展示
      locked:
        labelText: 已鎖定
        detail: 對已經綁定的用戶沒有影響
        enabled: '是: 不允許用戶再綁定此角色，已綁定的用戶不受影響。'
        disabled: "否"
      allow:
        create: 創建
        delete: 刪除
        deletecollection: '刪除集合'
        get: 獲取
        list: 列表
        patch: 修補程式
        update: 更新
        watch: 觀察
        labelText: 允許
        resource: 資源
        nonResourceUrl: 非資源url(僅路徑)
        addAction: 新增資源
        apiGroups: API 组
      otherRole:
        labelText: 包含其他角色
        role: 角色
        addAction: 新增角色
      policy:
        policy: 策略
        addAction: 新增策略
      default:
        global: 新用戶默認角色
        cluster: 新叢集默認角色
        project: 新專案默認角色
        enabled:
          global: "是: 新用戶的默認角色"
          cluster: "是: 新叢集的默認角色"
          project: "是: 新專案的默認角色"
        disabled: "否"

apiPage:
  header: API & Keys
  actionButton: 新增Key
  currentEndpoint: '訪問地址:'
  detail: "API密鑰與特定用戶(例如: {name})綁定，可以創建、刪除和操作有權訪問的所有叢集和專案。"
  table:
    state: 狀態
    name: 訪問密鑰
    description: 描述
    scope: 範圍
    created: 創建時間
    expires:
      label: 過期時間
      never: 永不過期
    noData: 沒有定義API密鑰

authPage:
  setting:
    executor:
      label: 最大流水線運行個數
      scale: 數量
    cacerts:
      label: 配置證書，支持從自簽名的Git服務中拉取程式
      show: 修改證書
      saveActionLabel: 保存證書
    limit:
      label: 為執行程序配置資源預留和限制
      saveActionLabel: 更新預留和限制
  header: 流水線設置
  setup: "1. 配置{type}應用"
  authenticated:
    header:
      text: 程式庫認證訊息
      enterpriseHostName: "地址:"
      clientId:
        text: "客戶端ID:"
      key:
        text: "Key:"
  testAuth:
    header: '3. 測試並啟用驗證'
    subtext: '通過測試認證來檢查配置是否正確: '
    buttonText:
      preVariable: 授權
      post: 授權中
  form:
    headerVariable: '2. 完成配置後，使用您的{SCM}帳號進行驗證。 '
    isEnterprise:
      labelText: 使用https連接
    enterprise:
      labelText: '使用私有{type}企業版部署'
    enterpriseHost:
      labelText: 企業版主機
      placeholder: '例如: example.com'
  gitlab:
    auth: '標準GitLab: <a href="https://gitlab.com/profile/applications" target="_blank" rel="nofollow noreferrer">點擊此處</a>訪問並登陸GitLab，在彈出的新窗口中進行應用設置。 '
    enterpriseAuth: "企業版GitLab: 通過企業版GitLab地址訪問並登陸GitLab，然後點擊Settings，再點擊Applications進行設置。"
    ul:
      li2:
        text: '填寫表單內容:'
        ul:
          li1: '<b>應用名稱: </b><span class="text-muted">任意名稱，例如: My Pipeline。 </span>'
          li2: '回調URL:'
      li3:
        text: '點擊Save application'
    form:
      subtextVariable: '將新創建應用的Application Id和Secret複製黏貼到對應的輸入框中。 '
      clientId:
        labelText: Application Id
      clientSecret:
        labelText: Secret
  bitbucketcloud:
    target:
      header: '1. 選擇你要使用的Bitbucket類型'
      bitbucketserver: '私有Bitbucket Server'
      bitbucketcloud: '公有Bitbucket Cloud'
    setup: '2. 配置Bitbucket Cloud應用'
    auth: '<a href="https://bitbucket.org/account" target="_blank" rel="nofollow noreferrer">點擊此處</a>，在彈出的新窗口中進行應用設置。 '
    ul:
      li2:
        text: '點擊"OAuth"，然後點擊"Add consumer"，並填寫表單內容: '
        ul:
          li1: '<b>應用名稱:</b> <span class="text-muted">任意名稱，例如 My Pipeline</span>'
          li2: '回調URL:'
          li3: '<b>權限設置: </b> <b>Account Read</b>, <b>Pull Requests Write</b>, <b>Projects Read</b>和<b>Webhooks Read And Write</b>'
      li3:
        text: '點擊 "Save" '
    form:
      headerVariable: '3. 完成配置後，使用您的Bitbucket Cloud帳號進行驗證。 '
      subtextVariable: '複製並黏貼新創建的consumer的Key和Secret'
      clientId:
        labelText: Key
      clientSecret:
        labelText: Secret
  bitbucketserver:
    warning: Bitbucket Server Webhook需要SSL驗證，請確保{appName}服務器的證書在Bitbucket Server中是可信的。點擊<a href="https://rancher.com/docs/rancher/v2.x/en/tools/pipelines/configurations/#1-configuring-version-control-providers" target="_blank" rel="nofollow noopener noreferrer">這裡</a>獲取更多訊息。
    copy: 點擊複製
    target:
      header: '1. 選擇你要使用的Bitbucket類型'
      bitbucketserver: '私有Bitbucket Server'
      bitbucketcloud: '公有Bitbucket Cloud'
    setup: '2. 配置Bitbucket Server應用'
    auth: '訪問Bitbucket Server並登陸你的賬戶，點擊Administration，然後點擊Application Links。 '
    ul:
      li2:
        text: '創建新的應用鏈接:'
        ul:
          li1: '<b>Link:</b>'
          li2: '<b>應用名稱: </b> <span class="text-muted">任意名稱，例如: My Pipeline</span>'
          li3: '<b>勾選Create incoming link</b>'
          li4: '<b>點擊: "Continue"</b>'
          li5: 'Consumer Key:'
          li6: '<b>Consumer Name:</b> <span class="text-muted">任意名稱, 例如: pipeline</span>'
          li7: 'Public Key:'
          li8: '<b>點擊"Continue"</b>'
    form:
      headerVariable: '3. 完成配置後，使用您的Bitbucket Server帳號進行驗證。 '
      hostname:
        labelText: Bitbucket Server主機
        placeholder: '例如: example.com'
        required: 必須配置私有Bitbucket Server主機地址。
      tls:
        labelText: 使用https連接
  saml:
    accessEnabled:
      header: 認證
      disable: 禁用訪問控制
    header:
      disabled:
        label: "{providerName}未設定"
    enabled:
      authenticated:
        header:
          text: 認證
      groupsField: '組:'
      displayName: '顯示名稱'
      userName: '用戶名:'
      userId: '用戶ID:'
    disabled:
      header: "1. 設定{providerName}帳號"
      headerDetail: "填寫{providerName}帳號資訊"
      label: "{providerName}未設定"
      name:
        labelText: 顯示名稱
        display: "顯示名稱:"
      username:
        labelText: 用戶名
        display: "用戶名:"
      uid:
        labelText: UID
        display: "UID:"
      rancherApiHost:
        labelText: "{appName} API地址"
        display: "{appName} API地址:"
      groups:
        labelText: 組
        display: "組:"
      testAuth:
        header: '2. 測試並啟用認證'
        subtext: '測試以確認設定是否正確'
    providerName:
      ping: Ping
      adfs: AD FS
      keycloak: Keycloak
      okta: Okta
      shibboleth: Shibboleth
    authError: '帳號未經授權'
    popupError: '請關閉彈出驗證視窗，然後再次單擊“驗證”。'
  ping:
    buttonText:
      pre: '啟用Ping認證 '
      post: '等待返回'
  keycloak:
    buttonText:
      pre: '啟用Keycloak認證'
      post: '等待返回'
  adfs:
    buttonText:
      pre: '啟用AD FS認證'
      post: '等待返回'
  okta:
    buttonText:
      pre: '啟用Okta認證'
      post: '等待返回'


  shibboleth:
    buttonText:
      pre: '啟用Shibboleth認證'
      post: 等待IDP響應
      edit: '測試Shibboleth配置'
    providerName:
      shibboleth: Shibboleth
    openLdap:
      header: 2. OpenLDAP搜索配置
      detail: 在下面添加OpenLDAP配置來配置搜索功能。
      help: "<span class='text-italic'>注意: 只有在使用Shibboleth授權配置OpenLDAP搜索時，才需要本節中的必需字段。</span>"
    advanced:
      hr: 額外的配置參數
  root:
    header: 訪問控制
  github:
    auth: '标准GitHub: <a href="https://github.com/settings/developers" target="_blank" rel="nofollow noreferrer">点击此处</a>访问開登陆GitHub，在弹出的新窗口中进行应用设置。'
    enterpriseAuth: "企业版GitHub: 通过企业版GitHub地址访问開登陆企业版GitHub，然后点击Settings，再点击Applications进行设置。"
    ul:
      li2:
        text: '点击 "注册新应用" 開填写表单内容:'
        ul:
          li1: '<b>应用名稱: </b><span class="text-muted">任意名稱，例如: My Pipeline。</span>'
          li2: '主页URL: '
          li3: '<b>应用描述: </b><span class="text-muted">应用描述，可選。</span>'
          li4: '授权回调URL: '
      li3:
        text: '点击 注册应用'
    form:
      subtextVariable: '将新創建应用的Client ID和Client Secret复制粘贴到对应的输入框中。'
      clientId:
        labelText: 客户端ID
      clientSecret:
        labelText: 客户端秘钥
    standard: GitHub標準版
    enterprise: GitHub企業版
    header:
      disabled:
        label: GitHub未設定
    authenticated:
      header:
        text: 認證資訊
        enterpriseHostName: "地址:"
        clientId:
          text: "客戶端ID:"
          helpText: "要修改設置的GitHub應用，請在下方禁用訪問控制後重新設置"
      disableAccess:
        header: "危險區域&trade;"
        warning: '<b class="text-danger">警告:</b>禁用訪問控制將導致任何能夠訪問此頁面或API的用戶擁有對{appName}的完全控制權限。'
        confirmDisable: "確認? 再次點擊將關閉訪問控制"
        disable: 禁用Github訪問
    notAuthenticated:
      header: "1. 設置GitHub應用"
      ul:
        li1:
          text: '標準GitHub。<a href="https://github.com/settings/developers" target="_blank">點擊此處</a>並在彈出的新視窗中進行應用設置。'
          ul:
            li1: "企業版GitHub。請登入帳號，點擊Settings，然後點擊Applications進行設置"
        li2:
          text: '點擊 "Register new application" 並填寫表單內容:'
          ul:
            li1: '<b>應用名稱: </b><span class="text-muted">應用名稱， 例如: My {appName}</span>'
            li2: '主頁URL: '
            li3: '<b>應用描述: </b><span class="text-muted">應用描述，可選</span>'
            li4: '授權回傳URL: '
        li3:
          text: '點擊 "Register Application" '
      form:
        header: '2. 設定{appName}以使用GitHub進行身份驗證'
        subtext: '將新創建的GitHub應用Client ID和Secret複製貼上到下方的對應輸入框中'
        clientId:
          labelText: 客戶端ID
        clientSecret:
          labelText: 客戶端密鑰
        ghEnterprise:
          labelText: 使用私有GitHub企業版部署
        isGHEnterprise:
          labelText: 使用安全連接
        enterpriseHost:
          labelText: 地址
          placeholder: '例如: github.example.com'
    testAuth:
      header: '3. 測試並啟用認證'
      subtext: '測試以確認設定是否正確'
      buttonText:
        pre: 啟用GitHub認證
        post: 等待GitHub返回
      authError: '未獲取Github訪問權限'
      popupError: '請關閉當前視窗，點擊認證按鈕重新認證'
  googleoauth:
    header:
      disabled:
        label: 'Google未配置。有關設置身份驗證的更詳細說明，請訪問<a href="https://rancher.com/docs/rancher/v2.x/en/admin-settings/authentication/google/" target="_blankRancher">文檔</a>'
    authenticated:
      header:
        text: 身份驗證
        adminEmail:
          text: "管理員郵箱: "
      disableAccess:
        header: "危險警告"
        warning: '<b class="text-danger">Caution: </b>禁用訪問控制將為所有能夠訪問此頁面或API的人提供對{appName}的完全控制。 '
        confirmDisable: "確定關閉嗎?再次單擊將關閉訪問​​控制。"
        disable: 禁用Google訪問
    notAuthenticated:
      ul:
        li1:
          helpertext: '注意: Rancher URL必須是正確的FQDN格式。 '
          ul:
            li1: '登入您的帳戶，切換到 "APIs和服務" 並點擊 "憑證"。 '
        li2:
          text: '點擊 "OAuth同意屏幕" 並填寫以下表單: '
          ul:
            li1: '<b>授權域名: </b> '
            li2: '<b>應用首頁: </b> '
            li3: '在Googleapi的作用域下，啟用 "email"、"profile" 和 "openid"。 '
            li4: '授權回調URL: '
        li3:
          ul:
            li1: '選擇 "創建憑據" 下拉框，並選擇 "OAuth客戶端ID"，然後選擇 "Web application"。 '
            li2: '<b>授權Javascript來源: </b> '
            li3: '<b>授權重定向URLs: </b> '
            li4: '點擊 "創建"，然後點擊"下載JSON"按鈕。 '
            li5: '將下載的JSON文件上傳到OAuth憑據框中。 '
        li4:
          ul:
            li1: '<a href="https://cloud.google.com/iam/docs/service-accounts">點擊這裡</a>了解有關創建和管理服務帳戶的訊息。 '
            li2: '選擇您的服務帳戶。 '
            li3: '選擇JSON作為鍵類型並點擊"創建".'
      form:
        oauthCredential:
          labelText: OAuth憑證
          helperText: 複製並黏貼OAuth憑證JSON，該JSON可以在您的GoogleAPI開發人員控制台(上面的步驟3)中找到。
        serviceAccountCredential:
          labelText: 服務帳戶憑據
          helperText: 複製並黏貼服務帳戶憑證JSON，可以在GoogleAPI開發人員控制台的服務帳戶部分中找到(上面的步驟4)。
        adminEmail:
          labelText: 管理員郵箱
          helperText: 輸入與您的帳戶相關聯的管理電子郵件。
        hostname:
          labelText: 賬戶域
          helperText: 輸入您的帳戶域。
        nestedGroupMembershipEnabled:
          labelText: 嵌套的組成員
    testAuth:
      buttonText:
        pre: 啟用Google認證
        post: 等待Google返回
      authError: '未授權Google訪問'
      popupError: '請關閉彈出的窗口並點擊認證按鈕重新認證。 '
    warning:
      doc: '有關設置身份驗證的更詳細說明，請訪問<a href="https://rancher.com/docs/rancher/v2.x/en/admin-settings/authentication/google/" target="_blank ">文檔</a>'
    stepOne:
      header: '第一步: '
      info: '對於標準Google，<a href="https://console.developers.google.com/apis/credentials" target="_blank">點擊這裡</a>訪問Google開發者控制台。 '
    stepTwo:
      header: '第二步: '
      info: '導航到 "OAuth同意畫面" 選項並填寫表單'
    stepThree:
      header: '第三步: '
      subHeader: '查看<a href="https://rancher.com/docs/rancher/v2.x/en/admin-settings/authentication/google/#creating-service-account-credentials" target="_blank" rel ="nofollow noopener noreferrer">操作指南</a>:'
      info: '創建服務帳戶憑證'
  azuread:
    header:
      disabled:
        label: 'Azure AD未設定'
    enabled:
      header: '危險區域&trade;'
      reallyDisable: '確認? 再次點擊將關閉訪問控制'
      promptDisable: 關閉訪問控制
      general:
        header: 常規
    configure:
      header: '設定Azure AD帳戶'
      replyUrl: "在開始設置之前，需要在Azure AD為{appName}設置一個白名單URL。請確保Azure門戶的Reply URL部分設置了以下Reply URL。 請注意，白名單URL設置後可能需要5分鐘生效時間。"
      help: '輸入租戶ID、Client ID和管理用戶詳細資訊，以連接到Azure AD 驗證帳戶資訊。'
      applicationId:
        label: 應用 ID
        placeholder: UUID字符串
      applicationSecret:
        label: 應用 Secret
      serverURL:
        label: Rancher Server Url
      azureADEndpoint:
        label: 'Endpoint(Azure China地址: https://login.chinacloudapi.cn)'
      azureADGraphEndpoint:
        label: 'Graph Endpoint(Azure China地址: https://graph.chinacloudapi.cn)'
      azureADTokenEndpoint:
        label: Token Endpoint
      azureADAuthEndpoint:
        label: Auth Endpoint
      endpoints:
        label: Azure AD訪問地址
      regions:
        standard: Standard
        china: China
        custom: 自定義
      tenantId:
        label: 租戶ID
        placeholder: UUID字符串
        help: 由Azure AD portal獲取
    test:
      header: '2. 測試並啟用認證'
      help: '測試驗證以確認設定是否正確:'
      username:
        label: 登入用戶名
        placeholder: '例如: jsmith'
      password:
        label: 登入密碼
      pre: 啟用Azure認證
      post: 等待Azure返回
      authError: 'Azure訪問未認證授權'
      popupError: '請關閉視窗，然後再次點擊認證按鈕進行認證'
  localAuth:
    header:
      enabled: '本地驗證已啟用'
      disabled: '本地驗證未設置'
    subtext:
      enabled:
        text: '{appName}已設置本地帳號訪問'
        alwaysOn: '本地身份驗證將始終啟用，您可以在本地認證基礎之上新增其他認證方案'
        linkText: 管理帳號
      disabled: '{appName}能夠被設置為僅允許{appName}本地資料庫中定義的用戶訪問。當前系統未進行設置，因此任何可以訪問此頁面(或API)的用戶都具有系統的完全控制權限。'
    accessEnabled:
      header: '危險區域&trade;'
      warning: '<b class="text-danger">警告:</b>禁用訪問控制將導致所有能夠訪問此頁面或API的用戶擁有對{appName}的完全控制權限。'
      buttonText:
        disable: '確認? 再次點擊將關閉訪問控制。'
        prompt: 關閉訪問控制
    accessDisabled:
      header: '1. 設置管理員用戶'
      helpText: '該帳號將成為管理員並擁有對{appName}的完全控制權限。'
      form:
        login:
          labelText: 登入用戶名
          placeholder: '例如: jsmith'
        name:
          labelText: 全名
          placeholder: '例如: John Smith'
        password:
          labelText: 密碼
        confirmPassword:
          labelText: 確認密碼
    accessControl:
      header: '2. 啟用訪問控制'
      helpText: '點擊以開啟訪問控制並登入'
      buttonText:
        pre: 啟用本地認證
        post: '啟用中...'

backupsPage:
  header: Etcd 快照
  detail: 如果啟用etcd快照功能，將按預定必的時間間隔周期性地獲取的叢集快照，可用於叢集灾难恢復。
  table:
    state: 状态
    target:
      label: 目標
      s3: S3
      local: Local
    name: 名稱
    created: 創建时间
    noData: 當前没有Etcd快照

balancerPage:
  noMatch: 沒有符合當前搜索的負載均衡
  noData: 沒有任務負載均衡
  table:
    target: 目標

catalogPage:
  istio:
    header: 流量規則商店
  index:
    header: 應用商店
    refreshBtn: 刷新
    allCatalogs: 全部應用商店
    allCategories: 所有分類
    windowsWarning: 大多數應用程式應該在Linux叢集中運行。因此，如果將它們部署在當前叢集中，則可能無法工作。
    manage: 管理
    search:
      label: 搜索
    filters:
      label: 應用過濾
    certified:
      rancher:
        rancher: Rancher Labs
        partner: 官方
        experimental: "實驗性"
      pl:
        rancher: 核心
        partner: 官方
        experimental: "實驗性"
    noData:
      singular: 沒有符合的應用模板
      plural: 當前目錄下沒有符合的應用模板
    action:
      launch: 查看詳情
      notCompatible: 不兼容
      alreadyDeployed: 已部署

cis:
  scan:
    report:
      headers:
        profile: "配置文件: {profile}"
        id: id
        description: 描述
        remediation: 修復
        state: 狀態
        node_type: 節點類型
        nodes: nodes
        passed_nodes: 節點密碼
        failed_nodes: 失敗的節點

    modal:
      chooseAProfile: 選擇配置文件
      title: 運行CIS掃描
      testsWontRun: 被選擇的配置文件，將不會運行測試
      notApplicableTests: 不適用的測試 ({count})
      userSkippedTestsWontRun: 此外，已將以下測試配置為作為掃描的一部分跳過
      skippedTests: 跳過測試 ({count})
      profileDocs: 要了解更多關於配置文件的訊息，請訪問我們的<a href="https://rancher.com/docs/" target="_blank" rel="nofollow noopener noreferrer">文檔</a> 。
      testDocs: 要了解為什麼這些測試不能運行，請訪問我們的<a href="https://rancher.com/docs/" target="_blank" rel="nofollow noopener noreferrer">文檔 </a>。
      tableHeaders:
        id: Test Id
        explanation: Explanation
    growl:
      success: 在'{clusterName}'上運行CIS掃描
    header: CIS掃描
    rkeOnly: CIS掃描只適用於RKE叢集
    actions:
      delete: 刪除
      download: 下載
      runScan: 運行掃描
      addAlert: 添加警告
      addSchedule: 添加調度
      search:
          placeholder: 搜索
    table:
      state: 狀態
      name: 名稱
      profile: 配置文件
      passed: 通過
      skipped: 跳過
      failed: 失敗
      notApplicable: 不適用
      date: 日期
      empty: 當前沒有掃描
    detail:
      error:
        parseConfig: 解析security-scan-cfg配置映射時出錯。
        createDefault: 創建默認的security-scan-cfg配置映射失敗。
      actions:
        delete: 刪除
        download: 下載
        runScan: 運行掃描
        search:
          placeholder: 搜索
      table:
        state: 狀態
        number: 序號
        description: 描述
        empty: 當前沒有測試
        skip: 跳過
        unskip: Unskip
        nodesTable:
          title: 節點
          row:
            remediation: "Remediation: {remediation}"

cloudCredentialsPage:
  header: CloudCredential
  rightButtons:
    addKey: 添加CloudCredential
    nodeTemplates: 管理主機模板
  index:
    table:
      noData: 當前没有CloudCredential
      noMatch: 没有CloudCredential符合當前搜索
  numberNodeTemplates: "# 節點模板"

clusterCatalogPage:
  header: 應用商店

clusterIstioPage:
  header: Istio
  enabled: "Istio已啟用。為了利用Istio，您需要為每個命名空間啟用Istio sidecar自動注入。如果在現有命名空間上啟用它，則需要重新部署現有工作負載，以利用sidecar自動注入。"
  disabled: "Istio尚未啟用，請單擊“啟用”按鈕啟用它。"
  notReady: 在當前叢集中安裝Istio…
  confirmDisable: "你確定嗎?再次單擊將禁用Istio"
  monitoringNotDeployed: "監控仍在部署中。 在確保叢集中有足夠的資源啟用Istio之前，請等待監控部署完成。"
  disable: 禁用
  enableActionLabel: 啟用
  version: Istio版本
  customAnswers:
    title: 自定義應答
    detail: 配置自定義的應答。
  links:
    kiali:
      label: Kiali UI
    jaeger:
      label: Jaeger UI
    grafana:
      label: Grafana UI
    prometheus:
      label: Prometheus UI
  config:
    header:
      grafana: Grafana
      gateway: Ingress網關
      pilot: Pilot
      prometheus: Prometheus
      mixer: Mixer
      tracing: 跟踪
    tracingEnabled:
      label: 啟用跟踪
    grafanaEnabled:
      label: 啟用Grafana
    grafanaPersistenceEnabled:
      label: 為Grafana啟用持久存儲
    mtlsEnabled:
      label: 服務到服務雙向TLS
    gatewayEnabled:
      label: 啟用Ingress網關
    gatewayType:
      label: Ingress網關的服務類型
    http2Port:
      label: Http2端口
    httpsPort:
      label: Https端口
    loadBalancerIP:
      label: Load Balancer IP
      placeholder: '例如: 192.0.0.1'
    prometheusRetention:
      label: Prometheus數據保留
      placeholder: '例如: 6h'
    traceSampling:
      label: 跟踪抽樣比例
      placeholder: '例如: 1'
    mixerPolicyEnabled:
      label: Enable Mixer Policy
  nodeSelector:
    addSelectorLabel: 添加選擇器
    helpText: 選擇要運行{component}工作負載的節點
  insufficientSize:
    total:
      cpu: 請確保至少有{minCpu} milli cpu可供{action} Istio使用。
      memory: 請確保您至少有{minMemory} MiB的記憶體可供{action} Istio使用。
      all: 請確保至少有{minCpu} milli cpu和{minMemory} MiB記憶體可供{action} Istio使用。
    workload:
      cpu: 請確保至少有一個具有{cpu} milli cpu的節點可用來部署{component}工作負載。
      memory: 請確保您至少有一個具有{memory} MiB記憶體的節點可用來部署{component}工作負載。
      all: 請確保至少有一個節點具有{cpu} milli cpu和{memory} MiB記憶體，可用來部署{component}工作負載。
    selectors:
      cpu: 請確保至少有一個節點將節點選擇器與{cpu} milli cpu匹配，以啟用{component}工作負載。
      memory: 請確保至少有一個節點將節點選擇器與{memory} MiB記憶體匹配，以啟用{component}工作負載。
      all: 請確保至少有一個節點與{cpu} milli cpu和{memory} MiB記憶體匹配，以啟用{component}工作負載。
      unsupported: '不支持值為“true”、“false”或number的節點選擇器'
  telemetryAndPolicy: Telemetry And Policy
  existingClaim:
    label: 'Existing Claim for {component}'
  members:
    title: 成員訪問
    detail: 控制哪些用戶能訪問Kiali和Jaeger UI
  pilot:
    title: Pilot
    detail: 配置流量管理
  mixer:
    title: Mixer
    detail: 常規策略和遙測配置。
  tracing:
    title: 跟踪
    detail: 配置跟踪請求。
  ingress:
    title: Ingress網關
    detail: 監控和路由規則配置。
  allowSystemGroup:
    'true': 允許<b>所有</b>成員訪問Kiali和Jaeger UI。
    'false': 允許叢集所有者和指定的</b>成員訪問Kiali和Jaeger UI。
  goToMonitoring: 'istio的工作需要監控。如果您想修改這些值，請轉到<a href="/c/{clusterId}/monitoring/cluster-setting">監控</a>頁面修改並保存。 '
  upgradeMonitoring: '在啟用Istio之前，您需要首先將叢集監視升級到0.0.4或更高版本。訪問<a href="/c/{clusterId}/monitoring/cluster-setting">這裡</a>去升級叢集監控。 '
  enableMonitoring:
    label: 啟用監控

certificatesPage:
  cn: 域名
  expiresDate: 過期時間
  fingerprint: 指紋
  valid: 生效時間
  expires: 過期時間
  algorithm: 算法
  issuer: 發布機構
  serialNumber: 序列號
  domainNames:
    labelText: 域名
    single: '<a href="https://{cn}" target="_blank" rel="nofollow noreferrer noopener">{cn} <i class="icon icon-sm icon-external-link"/></a>'
    withSan: |
      <a href="https://{cn}" target="_blank" rel="nofollow nefererrer noopener">{cn} <i class="icon icon-sm icon-external-link"></i></a> +
      {sans, plural,
      =1{1other}
      other{#others}
      }
    wildcardSingle: '{cn}'
    wildcardWithSan: |
      {cn} +
      {sans, plural,
      =1{1other}
      other{#others}
      }
  detail:
    header: '證書: {name}'
  index:
    header: 證書
    linkTo: 新增證書
    noData: 沒有定義證書
    noMatch: 沒有證書與當前搜索匹配
  new:
    header: 新增證書
    form:
      name:
        placeholder: '例如: Mydomain.com'
      description:
        placeholder: '例如: Mydomain.com的EV證書'

membersPage:
  title: 成員
  add:
    title: '新增{type}成員'
    form:
      member: 成員
      role: 角色
      kind: 類型
  index:
    localLink: '新增成員'
    table:
      name: 名稱
      created: 創建時間
      noData: 目前還沒有成員
      noMatch: 沒有成員與當前搜索匹配
      userId: 用戶
      subjectKind: 類型
      template: 角色

namespacesPage:
  header: 命名空間
  addNamespace: 新增命名空間
  noMatch: 沒有符合搜索的命名空間
  noData: 此叢集未創建任何命名空間
  table:
    name:
      label: 命名空間
    description:
      label: 描述
    project:
      label: 專案
    pods:
      label: Pods
    workloads:
      label: 工作負載
    created:
      label: 創建時間

clusterPage:
  edit: 編輯叢集
  annotationsDetail: 為叢集配置標籤和註釋。
  removeMemberNote: '注意: 刪除成員不會刪除其專案權限'
  internal: '<b>警告:</b>{appName}叢集用作數據儲存，只應授予管理員擁有寫入權限.<br>對此叢集具有寫入權限的用戶，可以使用它授予自己安裝並管理的其他叢集的訪問權限。'

projectsListNamespacePage:
  header: 命名空間
  notIn: 不屬於任何專案
  current: 當前專案

projectsPage:
  annotationsDetail: 為項目配置標籤和註釋。
  header: 專案/命名空間
  headerNS: 命名空間
  addProject: 新增專案
  editProject: 編輯專案
  noMatch: 沒有與當前搜索匹配的專案
  noData: 此叢集沒有定義任何專案
  groups:
    none: 命名空間列表
    namespaces: 專案分組/命名空間分組
  quota:
    label: 資源配額
  ns:
    label: 命名空間
    placeholder: '例如: lab'
  name:
    label: 專案名稱
    placeholder: '例如: lab'
  created:
    label: 創建時間
  resourceQuota:
    title: 資源配額
    detail: 設定整個專案可以使用多少資源。
  containerDefaultLimit:
    title: 容器默認限制
    detail: 配置默認情况下容器可以消耗多少資源
  members:
    title: 成員
    detail: 設定可以訪問該專案中資源的用戶以及用戶權限。
    user: 用戶
    group: 組
    serviceaccount: 服務帳號
    labelText: 成員
    addMember: 新增成員
    addUser: 新增用戶
    noAddUser: 您是唯一的活動註冊用戶
    addGroup: 新增組
    addServiceAccount: 新增服務帳戶
    multipleRoles: 多個角色
    customRoles: 自定義角色
    kind:
      label: 類型
    name:
      label: 名稱
    role:
      label: 角色
    errors:
      nameReq: 名稱(必填)
      nameInExists: 名稱已經存在，請使用新的專案名稱。
      memberNameReq: 成員名稱是必須的
      memberRoleReq: 成員角色是必須的

clusterTemplateRevisionUpgradeNotification:
  tooltip: 修訂 {revision} 可用於升級。

clustersPage:
  header: 叢集列表
  newCluster: 添加叢集
  newTemplate: 添加模板
  newClusterName: "添加叢集: {name}"
  editClusterName: "升级叢集: {name}"
  clusterLaunchDisabled: "沒有授予您訪問叢集模板的權限。"
  launch:
    new: 添加叢集
  cluster:
    label: 叢集名稱
  templateRevision:
    label: '模板/修訂'
  provider:
    label: 供應商
  version:
    label: kubernetes版本
  rkeTemplate:
    label: RKE 模板
  nodes:
    label: 主機數
  cpu:
    label: 處理器
  memory:
    label: 記憶體
  pod:
    label: Pods
  storage:
    label: Disk
  select:
    provider:
      label: "添加叢集——選擇叢集類型"
    template:
      label: "添加叢集-選擇叢集模板"

clusterRibbonNav:
  title: 最近創建的叢集

clusterTemplatesPage:
  index:
    header: RKE叢集模板列表
    newTemplate: 添加模板
  new:
    header: 添加模板
  headers:
    defaultRevisionId: 默認修訂
    revisionsCount: 修訂版本
    created: 創建时间
  newRevision:
    header: 新叢集模板修訂
  select:
    label: 從模板修訂克隆
  table:
    name: 修訂版本名稱

ingressPage:
  header: 'Ingress: {name}'
  gkeIngressWarning: 'Kubernetes Engine可能需要幾分鐘才能分配外部IP地址並準備負載均衡器。與此同時，您可能會收到HTTP 404和HTTP 500等錯誤，直到負載平衡器準備好為流量提供服務。'
  table:
    targets:
      label: 目標
    noMatch: 沒有ingresses匹配當前搜索。
    noData: 沒有定義ingress規則

containerPage:
  header: '容器: {name}'
  initContainer:
    label: 初始化容器
  envTab:
    header: 環境變數
    detail: '在創建容器時設定到容器內的環境變數。'
  portsTab:
    header: 埠
    detail: '容器監聽埠到主機公用IP地址埠的映射關係。'
    hostPrimaryIp: "({ip})"
  linksTab:
    header: 連結
    detail: '這些屬性顯示了其他容器和當前容器之間的連結。'
    noData: 當前容器沒有連結
  volumesTab:
    header: 數據 volumes
    detail: '這些屬性顯示了附加到容器的數據 volumes 。'
    table:
      path: 掛載點
      shared: 共享
      writable: 可寫
      noData: 該容器未使用數據 volumes
      noMatch: 沒有符合當前搜索的數據 volumes
      noContainers: 無其他容器
  pod: Pod
podPage:
  header: "Pod: {name}"
  nodeIp: 主機
  podIp: Pod IP
  containerImage: "{container}的鏡像"
  image: 鏡像
  displayImage: '{image} + 其他{sidecar, plural, =1 {1個image} other {#個images}}'
containersPage:
  table:
    sparkPrefixCpu: "CPU: "
    sparkPrefixMemory: "記憶體:"
    sparkPrefixNetwork: "網路:"
    sparkPrefixStorage: "儲存:"
    noData: 沒有可以顯示的容器
    noMatch: 沒有符合當前搜索的容器
  welcome:
    container: 立即開始
    containerLink: 創建一個容器
    orchestrator: 安裝另一個編排引擎
    kubernetesLink: 安裝 Kubernetes

clusterDashboard:
  systemProject: "這是具有所有Kubernetes和{appName}系统命名空間的系统項目，修改系统項目中的资源可能會導致系统無法正常運行。"
  notActive: 當前叢集<b>{state}</b>中...
  notReady: 當前叢集<b>{state}</b>中...，在API準備就緒之前，直接與API交互的功能將不可用。
  used: 使用值
  title: 儀錶盤
  sections:
    cluster: 叢集監控
    etcd: Etcd監控
    k8s: Kubernetes組件監控
    rancher: '{appName}日誌功能監控'
    node: 節點監控
  noRancherComponents: '{appName}日誌功能未啟用或者沒有足夠的數據繪製圖表。 '
  cpu: CPU
  memory: Memory
  pods: Pods
  value: 值
  more: 更多
  clusterNotReady: 叢集中的圖形訊息目前不可用。
  subtitle:
    reserved: "已預留{total}中的{used}"
    used: "已使用{total}中的{used}"
  enableMonitoring: 啟用監控並查看實時監控指標
  upgradeAvailable: "升級監控組件到{version}版本"
  monitoringNotReady: 監控API未就緒
  node: Nodes
  etcd: Etcd
  scheduler: Scheduler
  controllerManager: Controller Manager
  alert:
    node: "警告: 節點{node}未啟用"
    component: "警告: 組件{component}不健康"
    nodeCondition:
      outOfDisk: "警告: 節點 {node} 硬碟空間不足。"
      diskPressure: "警告: 節點 {node} 有硬碟壓力。"
      memoryPressure: "警告: 節點 {node} 有記憶體壓力。"
  liveTitle: "已使用{total}中的{used}"
  reserved: 已預留
  k3sInfo:
    title: k3S相關訊息
    detail: 導入的K3S叢集節點系統訊息。
    nodeArgs:
      title: k3S節點參數
      detail: 當前節點的K3S參數的只讀列表。
      noArgs: 沒有節點參數


ingressResponse:
  host: 主機
  path: 路徑
  responseTime: 響應時間
  noData: 沒有數據
  noMatch: 沒有記錄匹配當前搜索
  detail: Upstream響應時長（排序前十位）
  title: Ingress Upstream響應時長

etcd:
  hasLeader:
    label: Etcd是否有Leader
  leaderChange:
    label: Leader變更次數
  failedProposals:
    label: 失敗提議次數

monitoringPage:
  update: 更新監控配置
  version: 監控組件版本
  upgrade: 升級監控組件到最新版本 {version}。
  upgradeAvailable: "(最新版本{version})"
  confirmDisable: "你確定嗎？再次點擊將會禁用監控。"
  disable: 禁用監控
  enableActionLabel: 啟用監控
  systemProject: "如果您想為系統項目中的Pod收集自定義指標，請直接啟用叢集級別監控。"
  noPermission: "您沒有權限配置{level}級別監控。"
  toUpdate:
    cluster: 叢集級別監控已啟用。
    project: 項目級別監控已啟用。
  insufficientSize:
    prometheus:
      cpu: 請確保你至少有一個節點有{cpu} milli CPUs 可用來啟用Prometheus工作負載。
      memory: 請確保你至少有一個節點有{memory} MiB 記憶體可用來啟用Prometheus工作負載。
      all: 請確保你至少有一個節點有{cpu} milli CPUs和{memory} MiB 記憶體可用來啟用Prometheus工作負載。
    selectors:
      cpu: 請確保你至少有一個匹配節點選擇器的節點有{cpu} milli CPUs 可用來啟用Prometheus工作負載。
      memory: 請確保你至少有一個匹配節點選擇器的節點有{memory} MiB 記憶體可用來啟用Prometheus工作負載。
      all: 請確保你至少有一個匹配節點選擇器的節點有{cpu} milli CPUs和{memory} MiB 記憶體可用來啟用Prometheus工作負載。
    total:
      cpu: 請確保你至少有{cpu} milli CPUs 可用來啟用監控。
      memory: 請確保你至少有{memory} MiB 記憶體可用來啟用監控。
      all: 請確保你至少有{cpu} milli CPUs和{memory} MiB 記憶體可用來啟用監控。
  clusterNotEnabled: 叢集級別監控未啟用。將只採集自定義指標。
  prometheus: 監控尚未啟用，點擊下面的保存按鈕去啟用監控。
  resourceLimitsHelp: '啟用叢集監視時，需要確保工作節點和Prometheus pod具有足夠的資源。請訪問<a href="https://rancher.com/docs/rancher/v2.x/en/cluster-admin/tools/monitoring/#resource-consumption" target="_blank" rel="nofollow noreferrer"> Rancher docs</a>了解建議的資源限制。 '
  config:
    types:
      none: 無
      prometheus: Prometheus
    header: Prometheus 配置
    prometheus:
      cpuLimit:
        label: Prometheus CPU限制
        placeholder: '例如: 1000'
        unit: milli CPUs
      cpuRequest:
        label: Prometheus CPU預留
        placeholder: '例如: 1000'
        unit: milli CPUs
      memoryLimit:
        label: Prometheus 記憶體限制
        placeholder: '例如: 1000'
      memoryRequest:
        label: Prometheus 記憶體預留
        placeholder: '例如: 1000'
      enablePersistence:
        label: 為Prometheus啟用持久化存儲
      size:
        label: Prometheus持久化存儲大小
        placeholder: '例如: 50Gi'
      storageClass:
        label: Prometheus默認存儲類
    grafana:
      enablePersistence:
        label: 為Grafana啟用持久化存儲
      size:
        label: Grafana持久化存儲大小
        placeholder: '例如: 10Gi'
      storageClass:
        label: Grafana默認存儲類
    retention:
      label: 數據保存時間
    storageClass:
      label: 存儲類
    operator:
      memoryLimit:
        label: Prometheus Operator 記憶體限制
        placeholder: '例如: 500'
    nodeexporter:
      label: Node Exporter主機端口
      enable: 啟用Node Exporter
      cpuLimit:
        label: Node Exporter CPU限制
        placeholder: '例如: 200'
        unit: milli CPUs
      memoryLimit:
        label: Node Exporter 記憶體限制
        placeholder: '例如: 200'
  nodeSelector:
    addSelectorLabel: 增加選擇器
    helpText: 選擇部署監控相關的工作負載所運行的節點。
  cluster:
    title: 叢集監控配置
    disabled: 當前叢集監控尚未啟用。
    toDisable: 監控已啟用。點擊下面的保存按鈕來禁用當前叢集的監控。
  project:
    title: 項目監控配置
    disabled: 當前項目監控尚未啟用。
    toDisable: 監控已啟用。點擊下面的保存按鈕來禁用當前項目的監控。
  errors:
    disableIstioFirst: '在禁用叢集監控之前，需要先禁用Istio。 '

metricsAction:
  description: 查看即時監控指標
  noData: 没有足夠的數據繪製圖表
  sections:
    workload: 工作負載監控
    pod: Pod監控
    container: Container監控
  grafana:
    label: Grafana
  summary:
    label: 預覽模式
  detail:
    label: 詳細模式
  from:
    label: 起始時間
  to:
    label: 结束時間
  periods:
    custom: 自定義時間段
    5m: 5分鐘
    1h: 1小時
    6h: 6小時
    24h: 24小時
    7d: 7天
    30d: 30天

metrics:
  apiserver-request-count: API Server請求速率
  apiserver-request-latency: API Server請求延遲
  cluster-cpu-load: 叢集負載
  cluster-cpu-usage: CPU使用率
  cluster-disk-io: 硬碟I/O
  cluster-fs-usage-percent: 硬碟使用率
  cluster-memory-usage: 記憶體使用率
  cluster-network-io: 網路I/O
  cluster-network-packet: 網路數據包
  container-cpu-usage: CPU
  container-disk-io: '硬碟I/O'
  container-memory-usage-bytes-sum: 記憶體
  controllermanager-queue-depth: 控制器隊列深度
  etcd-db-bytes-sum: 資料庫大小
  etcd-disk-operate: 硬碟操作
  etcd-grpc-client: GRPC客戶端流量
  etcd-leader-change: Leader變更
  etcd-peer-traffic: 傳輸流量
  etcd-raft-proposals: Raft提議
  etcd-rpc-rate: RPC速率
  etcd-stream: 活動流
  etcd-sync-duration: 硬碟同步週期
  fluentd-buffer-queue-length: Fluentd緩存區隊列長度
  fluentd-input-record-number: Fluentd輸入速率
  fluentd-output-errors: Fluentd輸出錯誤速率
  fluentd-output-record-number: Fluentd輸出速率
  ingresscontroller-nginx-connection: Ingress控制器連接數
  ingresscontroller-request-process-time: Ingress控制器請求處理時長
  istio-4xxs-top10: 服務4xx錯誤代碼計數
  istio-4xxs: 項目4xx錯誤代碼計數
  istio-5xxs-top10: 服務5xx錯誤代碼計數
  istio-5xxs: 項目5xx錯誤代碼計數
  istio-global-request-volume-top10: Request Volume by Service
  istio-global-request-volume: Project Request Volume
  istio-global-success-rate: 項目成功率
  istio-request-duration-p99-top10: P99 Request Latency by Service
  istio-request-duration-p90-top10: P90 Request Latency by Service
  istio-request-duration-p50-top10: P50 Request Latency by Service
  node-cpu-load: 節點負載
  node-cpu-usage: CPU使用率
  node-disk-io: 硬碟I/O
  node-fs-usage-percent: 硬碟使用率
  node-memory-usage: 記憶體使用率
  node-network-io: 網路I/O
  node-network-packet: 網路數據包
  pod-cpu-usage: CPU
  pod-disk-io: '硬碟I/O'
  pod-memory-usage-bytes-sum: 記憶體
  pod-network-io: 網路I/O
  pod-network-packet: 網路數據包
  scheduler-e-2-e-scheduling-latency-seconds-quantile: 調度器e2e調度延遲
  scheduler-pod-unscheduler: 調度失敗的Pod
  scheduler-total-preemption-attempts: 調度器嘗試調度次數
  workload-cpu-usage: CPU
  workload-disk-io: '硬碟I/O'
  workload-memory-usage-bytes-sum: 記憶體
  workload-network-io: '網路I/O'
  workload-network-packet: 網路數據包

dnsPage:
  noMatch: 沒有匹配當前搜索的記錄
  noData: 沒有可以顯示的DNS記錄
  type:
    arecord: 外部IP
    cname: 主機名
    alias: 別名
    workload: 工作負載
    selector: 選擇器
    clusterIp: Cluster IP
    unknown: 未知
  table:
    target: 目標
    clusterIpDetail: '叢集IP: {ip}'

cruHpa:
  title:
    new: 添加Pod水平自動伸縮
    edit: 編輯Pod水平自動伸縮
    view: "Pod水平伸縮: {name}"
  status:
    label: 當前狀態
  target:
    label: 工作負載
  name:
    placeholder: '例如: myscaler'
  description:
    placeholder: '例如: My scaler'
  prompt:
    deployment: 選擇工作負載...
  minReplicas:
    label: 最小副本
    placeholder: '例如: 1'
  maxReplicas:
    label: 最大副本
    placeholder: '例如: 10'
  metrics:
    label: 指標
    noMetrics: 沒有指標
    addMetricLabel: 添加指標
    removeMetricLabel: 刪除指標
    selector:
      labels:
        addSelectorLabel: 添加標籤
        label: 指標匹配標籤
      expressions:
        addSelectorLabel: 添加表達式
        label: 指標匹配表達式
    describedObject:
      label: 描述對象
      apiVersion:
        label: 描述對象API版本
        placeholder: '例如: extensions/v1beta1'
      kind:
        label: 描述對像類型
        placeholder: '例如: Ingress'
      name:
        label: 描述對象名稱
        placeholder: '例如: main-route'
    types:
      label: 指標類型
      object: 對象
      pods: Pods
      resource: 資源
      external: 擴展
      warning:
        resource: "為了在HPA中使用資源指標，您需要部署metrics服務器。"
        custom: "為了在HPA中使用自定義指標，您需要部署自定義metrics服務器，比如Prometheus Adapter。"
        external: "為了使用HPA的擴展指標，您需要部署擴展指標服務器，比如Prometheus Adapter。"
        cpu: "未在選定的deployment中設置CPU預留，HPA將不能基於CPU使用率計算副本數。"
        memory: "未在選定的deployment中設置記憶體預留，HPA將不能基於記憶體使用率計算副本數。"
    name:
      label: 指標名稱
      placeholder: '例如: packets-per-second'
      resources:
        cpu: CPU
        memory: Memory
    target:
      label: 目標類型
      options:
        value: 值
        averageValue: 平均值
        averageUtilization: 平均利用率
    value:
      label: 數值
      placeholder: '例如: 200'
      cpuPlaceholder: '例如: 200m'
      utilizationPlaceholder: '例如: 50'
editDns:
  title:
    new: 新增DNS記錄
    edit: 編輯DNS記錄
    view: "記錄: {name}"
  name:
    placeholder: '例如: Myapp'
  sessionAffinity:
    title: session保持
    detail: 根据源IP將連接映射到一致的目標
    label: 啟用session保持
  externalIPs:
    addActionLabel: 添加外部IP
    placeholder: '例如: 80.11.12.10'
    value: 外部IP
  loadBalancerIP:
    label: Load Balancer IP
    placeholder: '例如: 78.11.24.19'
  loadBalancerSourceRanges:
    addActionLabel: 添加ip源範圍
    placeholder: '例如: 143.231.0.0/16'
    value: 附載平衡器ip源範圍
  healthCheckNodePort:
    label: 健康檢查節點埠
    placeholder: '例如: 8080'
  externalTrafficPolicy:
    label: External Traffic Policy
    local: Local
    cluster: Cluster
  publishNotReadyAddresses:
    label: Published IP Addresses
    readyOnly: 僅就緒接入點
    all: 所有接入點
  sessionAffinityConfig:
    label: Session Sticky Time
    placeholder: '例如: 10800'
  kind:
    label: As a
    clusterIP: Cluster IP (Internal Only)
    loadBalancer: L4附載平衡器
    nodePort: NodePort(On every node)
    externalName: ExternalName
    headless: Headless Service
  description:
    placeholder: '例如: 當前MyApp版本'
  selector:
    label: 容器選擇器
    keyLabel: 標籤
    addActionLabel: 新增標籤選擇器
  recordType:
    label: "解析到"
    arecord: 外部IP地址
    cname: '外部主機名/域名'
    alias: 服務別名
    workload: 工作負載
    selector: Pod
    clusterIp: "Cluster IP"
  target:
    arecord: 目標IP地址
    cname: 目標主機名
    alias: 目標DNS記錄
    workload: 目標工作負載
    selector: 目標Pod選擇器
  add:
    arecord: 新增目標IP
    alias: 新增目標服務
    workload: 新增目標工作負載
    selector: 新增目標選擇器
  placeholder:
    arecord: '例如: 19.82.2.24'
    cname: '例如: example.com'
  prompt:
    alias: 選擇目標服務...
    workload: 選擇工作負載...
  errors:
    targetRequired: '必須設定一個或多個"目標服務/工作負載/主機名/域名"'
    selectorRequired: '必須設定一個或多個"目標標籤選擇器"'
    mixedAlias: 別名不能以CNAME和其他記錄的組合為目標。
    multipleCname: 別名不能指向多個CNAME記錄

cruPersistentVolumeClaim:
  title:
    define: 定義 volumes 聲明
    new: 新增 volumes 聲明
    edit: '編輯 volumes 聲明: {name}'
    view: 'persistent volume : {name}'
  define:
    addActionLabel: 定義
  capacity:
    label: 容量
    unit: GiB
  name:
    placeholder: '例如: myvol'
  source:
    label: source
    pv: 使用現有的 persistent volume
    storageClass: 使用儲存類別來創建新的 persistent volume
  pv:
    label: persistent volume
    prompt: 選擇 persistent volume …
  storageClass:
    label: 儲存類別
    prompt: 使用默認 class
  secretRequired:
    name: 密文名稱
    namespace: 密文命名空間

cruVolumeClaimTemplate:
  title:
    define: 配置PVC模板
    new: 添加PVC模板
    edit: "編輯PVC模板: {name}"
    view: "PVC模板: {name}"
  define:
    addActionLabel: 確定
  capacity:
    label: 容量
    unit: GiB
  name:
    placeholder: '例如: Myvol'
  source:
    label: 源
    pv: 使用已有的 persistent volume
    storageClass: 使用儲存類來設定新的 persistent volume
  pv:
    label: persistent volume
    prompt: 選擇一個 persistent volume ...
  storageClass:
    label: 儲存類
    prompt: 使用默認類
  customize:
    title: 自定義
    detail: 自定義高級設定

cruPrivateRegistry:
  title:
    label: 私有鏡像倉庫
    detail: 向這個叢集新增私有鏡像倉庫
  noData: 這個叢集沒有設定私有鏡像倉庫
  defaultError: 您必須指定一個默認的私有鏡像倉庫。
  add:
    label: 新增私有鏡像倉庫
  registry:
    user:
      label: 用戶名
    password:
      label: 密碼
    url:
      label: 倉庫地址
    default:
      label: 默認倉庫

cruVolume:
  sourcePrompt: 需要先在上面選擇一個儲存源...
  title:
    new: 定義臨時 volumes
  define:
    addActionLabel: 確定
  name:
    placeholder: '例如: Myvol'
  source:
    label: 儲存源
    title: 源設定
    detail: 設定選定儲存源的選項
    prompt: 選擇一個儲存源...
destinationRulePage:
  noMatch: 沒有與當前搜索匹配的目標規則
  noData: 沒有定義目標規則。
  notSupported: '叢集networking.istio.io/v1alpha3 API不可用。 '
  table:
    host:
      label: Host
    subsets:
      label: Subsets

globalRegistryPage:
  header: 全局鏡像庫
  enabled: 鏡像庫已啟用。點擊<a href="{url}/registry" target="_blank" rel="nofollow noopener noreferrer">這裡</a>在新頁面中打開Harbor UI。
  disabled: 鏡像庫尚未啟用。
  notReady: 在LOCAL叢集的系統項目中安裝鏡像庫…
  confirmDisable: '再次單擊將禁用全局鏡像庫'
  disable: 禁用鏡像庫
  enableActionLabel: 啟用
  command:
    title: Docker命令
    detail: 用於鏡像庫的Docker命令
    dockerLogin: 登入到鏡像庫
    dockerPull: 從鏡像庫中提取圖像
    dockerTag: 重命名鏡像庫鏡像
    dockerPush: 推送鏡像到鏡像庫
  setting:
    adminPassword:
      label: 管理員密碼
      placeholder: Harbor管理員密碼
      helpText: '如果您使用具有初始化端口數據的現有PVC，密碼將不會生效。 '
  config:
    header:
      postgresql: PostgreSQL Database
      redis: Redis
      registryPersistence: Registry
      notary: Notary
      clair: Clair
    persistenceStorageclass:
      label: Storage Class
    clairEnabled:
      label: Enable Clair
    notaryEnabled:
      label: Enable Notary
    secretKey:
      label: Encryption Key For Harbor
      description: 用於加密的密鑰，必須是16位字符串。
      error: '"Harbor加密密鑰" 必須是16位字符串。 '
    storageType:
      label: 存儲後端類型
    databaseType:
      label: 配置數據庫類型
    redisType:
      label: 配置Redis類型
    registryExistingClaim:
      label: 現有PVC
      prompt: 選擇現有PVC...
    registryPVSize:
      label: 持久卷大小
    source:
      pvc: 使用現有的PVC
    storageClass:
      emptyError: '在LOCAL叢集中至少需要一個默認存儲類'
      sizeRequired: '"{component}持久卷大小需要設置'
    databaseRequestCpu:
      label: Database CPU預留
      placeholder: '例如: 1000'
    databaseLimitCpu:
      label: Database CPU限制
      placeholder: '例如: 1000'
    databaseRequestMemory:
      label: Database Memory預留
      placeholder: '例如: 1000'
    databaseLimitMemory:
      label: Database Memory限制
      placeholder: '例如: 1000'
    redisRequestCpu:
      label: Redis CPU預留
      placeholder: '例如: 1000'
    redisLimitCpu:
      label: Redis CPU限制
      placeholder: '例如: 1000'
    redisRequestMemory:
      label: Redis Memory預留
      placeholder: '例如: 1000'
    redisLimitMemory:
      label: Redis Memory限制
      placeholder: '例如: 1000'
    redis:
      external:
        host:
          label: Redis主機
          placeholder: '例如: 192.168.0.2'
        port:
          label: Redis端口
          placeholder: '例如: 6379'
        coreDatabaseIndex:
          label: Core Database Index
          placeholder: '例如: 0'
        jobserviceDatabaseIndex:
          label: Jobservice Database Index
          placeholder: '例如: 1'
        registryDatabaseIndex:
          label: Registry Database Index
          placeholder: '例如: 2'
        password:
          label: Redis密碼
          placeholder: redis密碼
    s3:
      region:
        label: S3 Region
        placeholder: '例如: us-west-2'
      bucket:
        label: S3 Bucket Name
        placeholder: Your Bucket Name
      accesskey:
        label: S3 Access Key
        placeholder: Your S3 Access Key
      secretkey:
        label: S3 Secret Key
        placeholder: Your S3 Secret Key
      regionendpoint:
        label: S3 Region Endpoint
        placeholder: '例如: s3.us-west-2.amazonaws.com'
    database:
      external:
        host:
          label: PostgreSQL地址
          placeholder: '例如: 192.168.0.1'
        port:
          label: PostgreSQL端口
          placeholder: '例如: 5432'
        username:
          label: PostgreSQL用戶名
          placeholder: '例如: user'
        password:
          label: PostgreSQL密碼
          placeholder: '例如: password'
        coreDatabase:
          label: Core Database
          placeholder: '例如: registry'
        clairDatabase:
          label: Clair Database
          placeholder: '例如: clair'
        notaryServerDatabase:
          label: Notary Server Database
          placeholder: '例如: notary_server'
        notarySignerDatabase:
          label: Notary Signer Database
          placeholder: '例如: notary_signer'
        sslmode:
          label: SSL Mode for PostgreSQL
      existingClaim:
        label: Existing Claim for PostgreSQL
    exposeIngressHost:
      error: '"{hostName}"是一個主機名，需要使用expose.ingress.host這樣的域名。 '
  globalRegistryEnabled:
    error: 保存global-registry-enabled錯誤
  insufficientSize:
    total:
      cpu: 請確保至少有{minCpu} milli cpu供{action} registry使用。
      memory: 請確保至少有{minMemory} MiB的記憶體供{action} registry 使用。
      all: 請確保至少有{minCpu} milli cpu和{minMemory} MiB記憶體可供{action} registry使用。
    workload:
      cpu: 請確保至少有一個具有{cpu} milli cpu的節點來啟用{component}工作負載。
      memory: 請確保至少有一個具有{memory} MiB記憶體的節點來啟用{component}工作負載。
      all: 請確保至少有一個節點具有{cpu} milli cpu和{memory} MiB記憶體用來啟用{component}工作負載。
    selectors:
      cpu: 請確保至少有一個節點將節點選擇器與{cpu} milli cpu匹配，以啟用{component}工作負載。
      memory: 請確保至少有一個節點將節點選擇器與{memory} MiB記憶體匹配，以啟用{component}工作負載。
      all: 請確保至少有一個節點與{cpu} milli cpu和{memory} MiB記憶體匹配，以啟用{component}工作負載。
  nodeSelector:
    addSelectorLabel: 添加選擇器
    helpText: 選擇要運行{component}工作負載的節點。
  notaryAndSigner: Notary server and Notary signer。

globalDnsPage:
  header: 全域DNS紀錄列表
  newDns: 添加DNS紀錄
  noDnsMatch: 没有DNS項目匹配當前搜索。
  noDnsData: 當前没有全域DNS項目。
  newProvider: 添加DNS提供商
  noDnsProviderMatch: 没有DNS提供商匹配當前搜索。
  noDnsProviderData: 當前没有全域DNS提供商。
  noProjects: 没有要選擇的項目
  noApps: 没有可訪問的多叢集應用
  noProviders: 没有選擇DNS提供商
  entriesPage:
    header:
      new: 添加全域DNS紀錄
      edit: 编辑全域DNS紀錄
    options:
      title: 配置选项
      detail: 自定義DNS紀錄选項
    access:
      noAccessMulti: 您無法訪問目標應用程式
      noAccessProvider: 您没有全線訪問此供應商
      noAccessProject: 您無法訪問目標項目
    projectHelp: "要完成項目的全域DNS紀錄設置，必須在應用或項目的ingress規則中添加註解(<code>rancher.io/globalDNS.hostname='hostname'</code>)，其中<code>'hostname'</code>是路由規則中使用註解机名，這個<code>'hostname'</code>也必須匹配這個全域DNS項目的FQDN。"
    istioHelp: "要使模板在流量規則商店中可見，必須在應用商店模板<code>questions.yaml</code>文件中添加標籤( <code>io.rancher.istio=true</code> )"
    table:
      name: 名稱
      fqdn: FQDN (域名)
      target: 目標
      provider: 提供商 ID
    config:
      title: 配置DNS項目
      detail: 提供配置细节以添加新的全域DNS項目
      configType: 解析到
      multi: 多叢集應用
      project: 項目
      fqdn:
        label: FQDN (域名)
        placeholder: '例如: dev.example.com'
      multiCluster:
        label: 目標應用
        placeholder: 没有選擇多叢集應用
        add:
          label: 添加目標
      provider:
        label: 提供商
        placeholder: 選擇提供商
      projects:
        label: 目標項目
      ttl:
        label: DNS TTL (DNS解析紀錄缓存有效期)
  providersPage:
    title: 全域DNS提供商列表
    header:
      new: 添加全域DNS提供商
      edit: 编辑全域DNS提供商
    options:
      title: DNS提供商設置
      detail: 自定義DNS提供商设項
    members:
      title: 成员訪問
      detail: 控制谁有权訪問资源
    table:
      name: 名稱
      provider: 提供商名稱
      rootDomain: 根域名
    config:
      root:
        label: 根域名
        placeholder: Your root domain
      accessKey:
        label: Access Key
        placeholder: Your access key
      secretKey:
        label: Secret Key
        placeholder: Your secret key
        info: 密鑰已经提供, 只有在更新密鑰本身时才需要它。
      apiEmail:
        label: API Email
        placeholder: Your API Email
      apiKey:
        label: API Key
        placeholder: Your API Key
credentialsPath:
  label: SSH證書路徑
  placeholder: "/.aws"
proxySetting:
  label: 代理設置
roleArn:
  label: Role ARN
  placeholder: "arn:partition:service:region:account-id:resource"
region:
  label: Region
  placeholder: us-west-2
zone:
  label: Zone
  placeholder: public

multiClusterAppsPage:
  header: 應用列表
  noData: 沒有啟動多叢集應用程序
  noMatch: 沒有多叢集應用程序匹配當前搜索
  error:
    appData: 加載全局應用程序數據出錯

# If you change translations here also change the translation in app/utils/constants.js under the FALLBACK_TRANSLATIONS key
# those are present in case we have an error in the app and can not load the translations file
# the error page will at least make a little sense
failWhalePage:
  header: 錯誤
  reloadButton: |
    <a href="#" onclick="window.location.href = window.location.href; return false;">重新下載</a>以重試或
  logoutButton: 註銷

time:
  now: 現在
  mins: |
    {mins, plural,
    =1{#分鐘}
    other{#分鐘}
    }
  minsAgo: |
    {mins, plural,
    =1{#分鐘前}
    other{#分鐘前}
    }
  secsAgo: |
    {secs, plural,
    =1{#秒前}
    other{#秒前}
    }

haPage:
  header: 高可用性(HA)
  setup:
    prefix: "可以在不同主機上部署多個伺服器容器，以便{appName}一直保持運行，即使其中一個主機失敗。"
    link: 請參閱文檔
    suffix: ' 有關安裝和使用資訊'
  table:
    address: 主機地址
    port: 埠
    heartbeat: 上次在線
    clustered: 叢集

nodesPage:
  header: 主機
  editCluster: 編輯叢集
  nodePoolGroup: "Pool: {name}"
  table:
    clusterName: 叢集
    role: 角色
    cpu: 處理器
    memory: 記憶體
    disk: 磁盤
    pod: Pods
    version: 版本
    docker: Docker
    unschedulable: 不可調度
    instanceState: 容器狀態
    instanceStateWithIcon: 狀態
    noData: 此叢集沒有定義任何主機
    noMatch: 沒有符合當前搜索的主機

hostsPage:
  cloudHostsPage:
    addPage:
      launch: 啟動
      header: 新增主機
      name:
        label: 主機名稱
        placeholder: '例如: node01'
      transferUnit: TB
      instance: '類型:'
      storage: '儲存:'
      transfer: '流量限制:'
      zone: '區域:'
      env: '環境'
      size: '大小: '
      os: '操作系統: '
      driver: '驅動: '
      template: '模板名稱: '
  addContainer: 新增容器
  new:
    header:
      customText: 新增自定義主機
      text: 新增主機
    manageLink: 管理Docker-machine驅動
    custom: 新增自定義主機
    name:
      placeholder: '例如: node01'
    addCluster:
      label: "叢集選項"
      description: 將此新主機附加到叢集，委派角色等
      cluster:
        label: 叢集
      roles:
        label: 角色
      table:
        label:
          etcd: 用於etcd
          control: 用於管理
          worker: 作為worker節點使用

  hostPage:
    header:
      title: '主機: {name}'
    hostname: 主機名
    ipAddress: IP地址
    version: 版本
    kubeletVersion: Kubelet版本
    kubeProxyVersion: Kube-Proxy版本
    dockerVersion: Docker版本
    containerDVersion: Containerd版本
    kernelVersion: 核心版本
    operatingSystem: 操作系統
    conditions:
      diskSpace: 磁盤空間
      diskPressure: 磁盤負載
      memoryPressure: 記憶體負載
      ready: Kubelet
    limits:
      cpu: 'CPU限制: '
      memory: '記憶體限制: '
      storage: '本地 volumes 限制: '
    infoMultiStats:
      ip: 'IP地址'
      cpu: 'CPU'
      memory: '記憶體'
      storage: '數據 volumes'
      provider:
        labelText: '供應商:'
        noHost: 自定義
      kernel: '核心'
      docker: 'Docker: '
      os: '操作系統'
      milliCpu:
        labelText: mCPU
    containersTab:
      header: 容器
      detail: 在此主機上運行的容器列表
    portsTab:
      header: 埠
      detail: '這些屬性顯示哪些埠已被映射到哪裡'
      table:
        header:
          ip: IP地址
          port: 埠
          service: 服務
          container: 容器
        body:
          noData: 主機當前未映射任何埠
    storageTab:
      header: volumes
      detail: '這些屬性顯示主機 volumes 細節'
      table:
        header:
          state: 狀態
          hostPath: 主機路徑
          mounts: 掛載
        body:
          noData: 主機未使用任何數據 volumes

istio:
  refreshGraph: 刷新視圖
  noData: 沒有足夠的數據來繪製圖表
  period: Period
  table:
    template: 模板
    host: Host
  kiali: 由Kiali提供支持
  trafficMonitoring:
    duration: Last {time}
  nav:
    graph: 流量圖
    metrics: 流量指標
    rules: 流量規則
    destinationRules:
      label: 目標規則
      add: 添加目標規則
    virtualServices:
      label: 虛擬服務
      add: 添加虛擬服務
    gateways:
      label: 網關
      add: 添加網關

k8sImport:
  header: 匯入現有的Kubernetes
  name:
    label: 叢集名稱
    placeholder: '例如: My-imported-cluster'
  kubeConfig:
    label: 要匯入的Kubeconfig 文件
    placeholder: 匯入或貼上叢集的Kubeconfig文件以供使用。
  actionLabel: 匯入

k8sPage:
  header: Kubernets
  dashboard:
    title: 控制面板
    detail: 訪問本地Kubernetes儀錶板。
    button: 打開儀錶板
  shell:
    title: 命令行
    detail: 在瀏覽器中執行Kubernetes的<code>kubectl</code>命令行。
    button: 執行kubectl命令行
  configFile:
    title: 設定文件
    detail: 生成一個在本機可以使用的<code>kubectl</code>設定文件。
    button: Kubeconfig文件
    generating: 生成中...
    usage:
      helpText: |
        將設置保存到<code>~/.kube/config</code>
      downloadText: |
        然後<a href="{downloadUrl}" target="_blank">下載</a><code>kubectl</code>(如有需要)並運行。

loginPage:
  greeting: "您好！<br>歡迎使用{appName}"
  insecure: "{appName}僅支持<code>https://</code>連接，您必須:<br><br>使用伺服器內置的TLS支持,或者<br><br>在容器前面提供自己的TLS終端。"
  githubMessage: "{appName}使用GitHub管理帳號和團隊。點擊以下按鈕以登入，我們將僅使用基本的GitHub帳號資訊。"
  shibbolethMessage: "{appName}使用Shibboleth管理帳號。點擊以下按鈕以登入到設置的Shibboleth IDP。"
  shibbolethError:
    401: "未授權"
    500: "內部伺服器錯誤"
    generic: "嘗試登入時發生錯誤({errorCode})，請重試"
  error:
    authFailedCreds: "登入失敗: 檢查憑據，或者帳戶可能無權登入"
    authFailed: "登入失敗: 帳戶可能無權登入"
    unknown: "嘗試登入時發生未知錯誤，請與系統管理員聯繫。"
    invalidSamlAttrs: "無效的saml屬性"
    noResponse: "沒有響應"
  readableProviders:
    ad: Active Directory
    azureAd: Azure AD
    local: 本地用戶
    openldap: OpenLDAP
    freeipa: FreeIPA

machinePage:
  header: 主機驅動
  inactive: 未啟動
  subtext: "另外<code>Docker-machine</code>驅動可在此下載並在新增主機介面使用。"
  add: 新增主機驅動
  builtin: 內置
  url: 位置

# If you change translations here also change the translation in app/utils/constants.js under the FALLBACK_TRANSLATIONS key
# those are present in case we have an error in the app and can not load the translations file
# the error page will at least make a little sense
notFoundPage:
  header: "當前頁面不存在！"
  linkTo: 回到首頁

projectIstioPage:
  info:
    notEnabled: 'Istio尚未啟用。訪問<a href="/c/{clusterId}/istio/cluster-setting">這裡</a>啟用它。 '
    notOwner: "Istio尚未啟用。請與叢集管理員聯繫。"
    noPermission: "您沒有配置Istio的權限。"

registriesPage:
  index:
    header: 鏡像庫憑證
    linkTo: 新增鏡像庫憑證
    noData: "沒有鏡像庫憑證"
    noMatch: 沒有鏡像庫憑據匹配當前搜索
    table:
      header:
        state: 狀態
        address: 地址
        username: 用戶名
        created: 創建時間

  new:
    header: 新增鏡像庫憑證
    form:
      custom:
        labelText: 地址
        placeholder: '例如: registry.example.com'
        help: "僅新增主機名或IP地址，不要包含協定頭(https://)。"
      username:
        labelText: 用戶名
        placeholder: '例如: username'
      password:
        labelText: 密碼
        placeholder: '例如: password'

rulesPage:
  new: 添加流量規則
  noMatch: 沒有流量規則匹配當前搜索
  noData: 當前沒有流量規則
ruleDetailPage:
  header: "流量規則: {appName}"
  rules:
    virtualservices: 虛擬服務
    serviceentries: 服務條目
    destinationrules: 目標規則
    gateways: 網關
    envoyfilters: Envoy Filters
  answers:
    title: 應答
    detail: 自定義流量規則應答
    variable: 變量

secretsPage:
  index:
    header: 密文
    linkTo: 新增密文
    noData: 未定義任何密文
    noMatch: 沒有符合搜索條件的密文
  table:
    keys: 鍵

settingsPage:
  tabs:
    settings: 高级設定
    feature: 功能選項

configMapsPage:
  index:
    header: 設定映射
    linkTo: 新增設定映射
    noData: 沒有定義設定映射
    noMatch: 沒有設定映射與當前搜索匹配
  table:
    keys: 鍵

servicePage:
  header: '工作負載: {name}'
  globalScale: '每個主機{scale}'
  endpoints: '訪問埠:'
  multistat:
    type: '類型:'
    fqdn: 'FQDN:'
    scale: 'Pod副本數:'
    image: '鏡像名: '
    namespace: '命名空間:'
    cronSchedule: 定時調度
    created: '創建時間: '
    daemonSetScale: '每主機1個Pod'
    currentScale: 'Pod可用副本數: {count}'
  serviceType:
    deployment: Deployment
    replicaSet: 副本集
    statefulSet: 有狀態集
    daemonSet: 守護程式集
    replicationController: 複製控制器
    job: 任務
    cronJob: 定時任務
    pod: 獨立容器
  external:
    externalIp: |
      {count, plural,
      =1{個外部IP }
      other{個外部IP }
      }
    externalHostname: '外部主機名:'
  selector:
    label: '選擇器:'
  containersTab:
    title: '容器'
    detail: '組成該服務的容器列表'
  linksTab:
    header: 連結
    detail: '這些屬性顯示當前服務中容器之間的連結'
    noData: 當前服務沒有連結
  certsTab:
    title: 證書
    detail: 'TLS請求所使用的證書'
    default: 默認證書
    additional: 其他SNI證書
  new:
    form:
      name:
        placeholder: '例如: Myapp'
      description:
        placeholder: '例如: 我的應用'
  newBalancer:
    upgradeImage: "負載均衡器鏡像版本將由<code>{from}</code>升級到<code>{to}</code>。"
    form:
      name:
        placeholder: '例如: website'
      description:
        placeholder: '例如: Mycompany.com的負載均衡'
  newIngress:
    form:
      name:
        placeholder: '例如: website'
      description:
        placeholder: '例如: Mycompany.com的Ingress'
  portsTab:
    title: 埠
    detail: '從主機IP映射到容器監聽的埠'
    notActive: 埠僅當服務處於活動狀態時可見
  logTab:
    title: 服務日誌
    detail: '這項服務最近發生的編排事件'
  type:
    service: 服務
    selectorservice: 選擇器
    loadbalancerservice: 負載均衡
    dnsservice: 服務別名
    externalservice-ip: 外部IP
    externalservice-host: 外部名稱
    kubernetesservice: K8s服務
    composeservice: Compose服務
    networkdriverservice: 網路服務
    storagedriverservice: 儲存服務
  sidekick:
    tabHeader: Sidecars
    header: 工作負載與Sidecar
    helpBlock: 選擇主容器或其中一個sidecar容器

signupPage:
  header: '註冊{appName}'
  form:
    button: 註冊
    labels:
      loginUsername: 姓名
      email: 電子郵箱
  emailSuccess:
    header: '歡迎使用{appName}'
    confirm:
      subtext: 已經發送郵件到郵箱，請點擊郵件中的驗證連結以確認郵件地址。
      resend: 重新發送郵件

stackPage:
  header:
    singleBanner: 查看單個應用
    backLink: 返回全部應用
  basics:
    tagsCopy: 複製用逗號分隔的標籤
  containers:
    header: 容器
    detail: 應用中所包含的獨立容器和服務。
    status: |
      {count, plural,
      =0{無容器}
      =1{#個容器}
      other{#個容器}
      }
  loadBalancers:
    header: 負載均衡
    detail: '屬於該應用的負載均衡容器'
    status: |
      {count, plural,
      =0{無負載均衡}
      =1{#條負載均衡}
      other{#條負載均衡}
      }
  dnsServices:
    header: DNS記錄
    detail: '屬於該應用的DNS記錄'
    status: |
      {count, plural,
      =0{無記錄}
      =1{#條記錄}
      other{#條記錄}
      }
  scalingGroups:
    header: 擴容組
    detail: '屬於該擴容組的容器'
    status: |
      {count, plural,
      =0{無容器}
      =1{#個容器}
      other{#個容器}
      }
  volumesTab:
    header: volumes
    detail: '該應用掛載到容器中的 volumes'
    table:
      path: 掛載點
      shared: 共享
      writable: 可寫
      noData: 這個應用沒有掛載任何 volumes
      noMatch: 沒有匹配當前搜索的 volumes

newStack:
  header: 匯入YAML
  name:
    placeholder: '例如: Myapp'
  description:
    placeholder: '例如: MyApp Stack'
  files:
    label: 額外的Compose文件
    addActionLabel: 新增Compose文件
    uploadActionLabel: 從磁盤讀取
    namePlaceholder: 文件名
    valuePlaceholder: 文件內容
    protipLabel: "支持{appName}<code>compose.yml</code>，<code>docker-compose.yml</code>和Kubernetes清單文件。"
  answers:
    label: 應答(變數替換)
    addActionLabel: 新增應答

nodeTemplatesPage:
  header: 主機模板
  rightButtons:
    actionButton: 新增模板
    cloudCredentials: 管理 cloud credentials
  detail: 主機模板用於在基礎設施提供商上部署組成叢集的主機。
  table:
    state: 狀態
    name: 名稱
    provider: 提供者
    location: 位置
    size: 大小
    usedBy: 使用者
    noData: 沒有定義主機模板
    usedByNone: 沒有叢集
    unknown: 未知
    owner: 所有者

storageClassPage:
  header: 儲存類
  addActionLabel: 新增類
  noData: 沒有定義儲存類
  noMatch: 沒有儲存類別與當前搜索匹配
  provisioner:
    label: 提供者
  default:
    label: 默認

persistentVolumePage:
  header: persistent volume
  addActionLabel: 新增 volumes
  noData: 沒有定義 persistent volume
  noMatch: 沒有符合當前搜索的 persistent volume
  source:
    label: 儲存源

userPreferencesPage:
  header: 設置
  theme:
    header: 主題
    light: 明亮
    auto: 自動
    autoDetail: 自動設置會在晚6點到早6點間自動切換主題到黑色
    dark: 黑色
  generalInfo:
    header: 我的帳號
    name:
      label: 姓名
    username:
      label: 用戶名
    email:
      label: 郵件地址
    password:
      text: 修改密碼

verifyPage:
  header: "您已經成功驗證了郵件地址!"
  subtext: 在完成帳號設置前，我們還需要一些資訊。
  account:
    header: 帳號創建完成
    subtext: 點擊以下連結登入
    linkText: 登入

virtualServicePage:
  noMatch: 没有虛擬服務匹配當前搜索
  noData: 没有定義虛擬服務
  notSupported: 'networking.istio.io/v1alpha3 API在叢集中不可用。'
  table:
    hosts:
      label: 主机

verifyResetPasswordPage:
  header: 重置密碼
  button: 更新密碼
  success:
    header: 密碼已重置!
    subtext: 點擊以下連結返回登入頁面
    linkText: 登入


waitingPage:
  hosts:
    setup:
      kubernetes: 設置Kubernetes

notifierPage:
  notifiers: 通知
  testedBtnLabel: OK
  testingBtnLabel: 測試
  deleteErrorMessage: '通知程式{displayName}正在由{alertNames}使用'
  notifierTypes:
    slack: Slack
    email: 電子郵箱
    pagerduty: PagerDuty
    webhook: Webhook
    wechat: 企業微信
  slack:
    url: 訪問URL
    urlPlaceholder: '例如: https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX'
    defaultRecipient:
      label: 默認頻道
      helpText: 可選。默認情況下，通知被發送到默認頻道。在設定警告時，可以覆蓋該頻道。
    defaultRecipientPlaceholder: '例如: #example'
    helpText: |
      以下是<a href="https://slack.com/apps/A0F7XDUAZ-incoming-webhooks" target="_blank" rel="nofollow noopener noreferrer">創建傳入WebHooks</a>的方法。
  smtp:
    server: Smtp伺服器設定
    host: Smtp伺服器地址
    hostPlaceholder: '例如: 192.168.1.121'
    port: 埠
    portPlaceholder: '例如: 465'
    sender: 默認發件箱
    userName: 用戶名
    userNamePlaceholder: '例如: John'
    password: 密碼
    passwordPlaceholder: 帳號的密碼
    defaultRecipient:
      label: 默認收件人地址
      helpText: 在設定警告時，可以覆蓋收件人。
    defaultRecipientPlaceholder: '例如: you@example.com'
    tls: 使用TLS
  pagerduty:
    serviceKey:
      label: 默認服務密匙
      helpText: 在設定警告時，可以覆蓋服務密匙。
    serviceKeyPlaceholder: 你的PagerDuty服務密鑰。
    helpText: |
      以下是<a href="https://support.pagerduty.com/docs/webhooks">為PagerDuty創建傳入WebHooks</a>的方法。
  wechat:
    recipientType:
      label: 接收者類型
      tag: 標籤
      party: 部門
      user: 使用者
    secret:
      label: 自建應用密鑰
      helpText: 您可以在<a href="https://work.weixin.qq.com/wework_admin/frame#apps" target="_blank" rel="nofollow noopener noreferrer">自建應用详情页</a>找到Secret。
    agent:
      label: 自建應用代理 ID
      helpText: 您可以在<a href="https://work.weixin.qq.com/wework_admin/frame#apps" target="_blank" rel="nofollow noopener noreferrer">自建應用详情页</a>找到Agent Id。
    corp:
      label: 企業 ID
    helpText: |
      點擊<a href="https://work.weixin.qq.com/wework_admin/frame#profile" target="_blank" rel="nofollow noopener noreferrer">這裡</a>查看企業 ID。
    defaultRecipient:
      label: 默認接收者
    secretPlaceholder: 您的自建應用密鑰
    agentPlaceholder: '例如: 1000003'
    corpPlaceholder: '例如: wwc0cc3d58f9b021b6'
    defaultRecipientPlaceholder: '例如: 2'
  proxyUrl:
    label: Proxy URL
    placeholder: '例如: http://my-proxy/'
  sendResolved:
    label: 發送已解决警告

  webhook:
    url: URL
    urlPlaceholder: webhook URL
  testAction:
    testing: 測試
    testOk: 設置已驗證
    testFailed: 出了點問題，請檢查輸入的資訊。
    test: 測試
  clone: 克隆
  index:
    addActionLabel: 新增通知
    table:
      created: 創建時間
      noData: 沒有定義通知
      noMatch: 不匹配
##############################
# Partials
##############################
ldap:
  providerName:
    openldap: OpenLDAP
    ad: Active Directory
    freeipa: FreeIPA
    saveLabels:
      openldap: 啟用OpenLDAP認證
      ad: 啟用Active Directory認證
      freeipa: 啟用FreeIPA認證
  header:
    disabled:
      label: "{providerName}未設置"
  accessEnabled:
    header: 驗證
    subtext: "如需修改伺服器設定，請在下方關閉訪問控制後重新設置"
    serviceAccountDistinguishedName:
      labelText: "服務帳戶專有名稱:"
    connectionTimeout:
      labelText: "服務連接超時:"
    general:
      header: 常規
      server: "伺服器:"
      tls: "TLS:"
      serviceAccount: "服務帳號:"
      searchBase: "搜索起點:"
      defaultDomain: "缺省域:"
    users:
      header: 用戶
      objectClass: "對象分類:"
      login: "登入字段:"
      name: "名稱字段:"
      search: "搜索字段:"
      searchFilter: "搜索過濾器:"
      enabled: "啟用字段:"
      disabledBitMask: "禁用位掩碼:"
    group:
      header: 組
      objectClass: "對象分類:"
      name: "名稱字段:"
      search: "搜索字段:"
      searchFilter: "搜索過濾器:"
    disable:
      confirmDisable:
        pre: 關閉訪問控制
  accessConfig:
    header: "1. 設定{providerName}伺服器"
    subtext1: "請輸入地址、埠及協定以連接{providerName}伺服器。<code>389</code>是標準埠(未加密)，<code>636</code>是加密連接(TLS)埠。"
    subtext2: "{appName}需要一個對所有登入域有隻讀權限的服務帳號。"
    port:
      labelText: 埠
      checkbox: TLS
    groupSearchBase:
      labelText: '用戶組搜索起點:'
      placeholder: "例如: ou=Groups,dc=Mycompany,dc=com"
      helpText: "設置後，會在此搜索起點下搜索用戶組，而不會在用戶搜索起點下搜索用戶組。"
    userSearchBase:
      labelText: 用戶搜索起點
      placeholder: "例如: ou=Users,dc=Mycompany,dc=com"
    defaultDomain:
      helpText: "當用戶未指定登入域時使用該域"
      labelText: 默認登入域
      placeholder: "例如: Mycompany"
    serviceAccountDistinguishedName:
      labelText: 服務帳戶專有名稱
    connectionTimeout:
      labelText: 服務連接超時
  customizeSchema:
    header: "2. 自定義架構"
    helpText: "如果活動目錄架構(Schema)不是標準格式，可以在這裡進行自定義設置。"
    cert:
      labelText: CA證書
      helpText: 如果需要，請輸入CA證書
      placeholder: "貼上或匯入證書，以-----BEGIN CERTIFICATE-----開頭。"
    users:
      header: 用戶
      objectClass:
        labelText: 對象類型
      login:
        labelText: 登入屬性
      name:
        labelText: 用戶名屬性
      search:
        labelText: 搜索屬性
      searchFilter:
        labelText: 搜索過濾器
      searchBase:
        labelText: '用戶搜索起點:'
      enabledAttribute:
        labelText: 用戶啟用的屬性
      disabledBitMask:
        labelText: 禁用狀態位掩碼
      userMemberAttribute:
        labelText: 用戶成員屬性
    groups:
      header: 組
      objectClass:
        labelText: 對象分類
      name:
        labelText: 名稱屬性
      search:
        labelText: 搜索屬性
      searchFilter:
        labelText: 搜索過濾器
      groupMemberUser:
        labelText: 組成員用戶屬性
        placeholder: uid
      groupMemberMapping:
        labelText: 組成員映射屬性
      groupDN:
        labelText: 組DN屬性
        placeholder: 專有名稱
      nestedGroup:
        title: 巢狀的組成員
        enabled:
          labelText: 搜索直接和巢狀的組成員關係
          helpText: 巢狀搜索在大目錄中可能會比較慢
        disabled:
          labelText: 只搜索直接的組成員關係
  testAuth:
    header: "3. 測試並啟用認證"
    helpText: "通過{providerName}帳號進行驗證測試以確認設定是否正確:"
    userName:
      labelText: 用戶名
    password:
      labelText: 密碼
    authenticate:
      pre: 驗證
      post: "測試中..."

servicePartial:
  noContainers:
    label: 沒有容器
    inactive:
      start: 啟動

##############################
# Components
##############################
accordionRow:
  status:
    none: 無
    incomplete: 未完成
    error: 錯誤
    configured: 已設定
    notConfigured: 未設定
    countConfigured: "{count}條規則已設定"
    standard: 默認
    custom: 自定義
    specific: 具體
    any: 任何
    rule: "{count, plural,=1{#條規則}other{#條規則}}"

advancedSection:
  showText: 顯示高級選項
  hideText: 隱藏高級選項

annotationsSection:
  title: 注釋
  detail: Key/value元數據
  key: 鍵
  value: 值
  noData: 沒有注釋
  noMatch: 沒有符合當前搜索的注釋

authorizedEndpoint:
  enabled:
    label: '授權叢集訪問地址(此地址需要能夠訪問k8s api-server，在Rancher不可用時，可通過此地址直接訪問k8s)'
  fqdn:
    label: FQDN(域名，後面的證書為CA證書 → )

taintsSection:
  title: Taints
  detail: 當前主機的Taints
  key: 鍵
  value: 值
  effect: 影響
  noData: 沒有Taints
  noMatch: 沒有符合當前搜索的Taints

cloudProvider:
  title: 雲提供商
  amazon: Amazon
  azure: Azure
  external:
    label: 擴展
    helpText: '請編輯YAML以指定雲控制管理器所需的插件。'
  name: 雲提供商名稱
  custom:
    notInList: '如果雲提供商沒有列出，請使用<b>Custom</b>選項。'
    helpText: '請通過編輯YAML來新增其他<a href="http://rancher.com/docs/rke/v0.1.x/en/config-options/cloud-providers/" target="_blank" rel="nofollow noopener noreferrer">雲提供商</a>'

  helpText: |
    詳細了解<a href="https://kubernetes.io/docs/concepts/cluster-administration/cloud-providers/" target="_blank" rel="nofollow noopener noreferrer">雲提供商</a>
  warning:
    使用雲提供程式而不傳遞雲提供程式設定可能會導致叢集無法正確設定，推薦您在創建叢集之前新增雲提供程式設定，文檔中可以找到支持的雲提供商所需的先決條件。
  azureCloudConfig:
    cloudProviderBackoff:
      description: "Enable exponential backoff to manage resource request retries"
    cloudProviderBackoffDuration:
      description: "Backoff duration"
    cloudProviderBackoffExponent:
      description: "Backoff exponent"
    cloudProviderBackoffJitter:
      description: "Backoff jitter"
    cloudProviderBackoffRetries:
      description: "Backoff retry limit"
    cloudProviderRateLimit:
      description: "啟用速率限制"
    cloudProviderRateLimitBucket:
      description: "Rate limit Bucket Size"
    cloudProviderRateLimitQPS:
      description: "Rate limit QPS (Read)"
    maximumLoadBalancerRuleCount:
      description: "允許最大的負載均衡器規則計數是Azure負載均衡器執行的限制"
    useInstanceMetadata:
      description: "儘可能使用實例元數據服務"
    useManagedIdentityExtension:
      description: "為虛擬機使用託管服務標識來訪問Azure ARM API"
    aadClientCertPassword:
      description: "具有RBAC訪問權限的AAD應用程式的客戶端證書密碼，用來與Azure RM API通信"
    aadClientCertPath:
      description: "具有RBAC訪問權限的AAD應用程式的客戶端證書路徑，用來與Azure RM API進行通信"
    aadClientId:
      description: "具有RBAC訪問權限的AAD應用程式的Client ID，用於與Azure RM API通信"
    aadClientSecret:
      description: "具有RBAC訪問權限的AAD應用程式的Client Secret key,用於與Azure RM API通信"
    cloud:
      description: "雲環境標識符，請參閱此處了解有效參數"
    location:
      description: "部署叢集的資源組位置"
    primaryAvailabilitySetName:
      description: "應用作負載均衡器後端的可用性集的名稱"
    primaryScaleSetName:
      description: "應該用作負載均衡器後端的縮放集的名稱"
    resourceGroup:
      description: "部署叢集的資源組名稱"
    routeTableName:
      description: "附加到部署叢集的子網的路由表名稱"
    securityGroupName:
      description: "附加到叢集子網的安全組名稱"
    subnetName:
      description: "部署叢集的子網名稱"
    subscriptionId:
      description: "部署叢集的Azure訂閱的ID"
    tenantId:
      description: "部署叢集訂閱的AAD租戶ID"
    vmType:
      description: "azure節點類型，可選值為: vmss和standard"
    vnetName:
      description: "叢集部署在VNet中的名稱"
    vnetResourceGroup:
      description: "部署Vnet的資源組的名稱"
    loadBalancerSku:
      description: "Sku of Load Balancer and Public IP. Candidate values are: basic and standard"

catalogSettings:
  header: 應用商店
  notAvailable: "不可用: 這是名為<code>{name}</code>的自定義商店"
  helpText: 目前只支持Helm目錄
  currentCluster: 當前叢集
  currentProject: 當前專案
  globalCatalog: 全域
  library:
    label: 官方認證
    detail: 由{appName}官方維護的模板倉庫。
  helm:
    stable:
      label: Helm Stable
      detail: 由Kubernetes社區維護的模板倉庫。
    incubator:
      label: Helm Incubator
      detail: 未經測試驗證的應用模板倉庫。
  certified:
    header:
      rancher: "{appName}認證庫"
      pl: 認證的庫
    detail:
      rancher: Rancher核心功能所依賴的模板，例如Kubernetes/Mesos/Swarm編排支持，由Rancher官方維護並提供支持。
      pl: '由官方維護的核心功能所需要的模板，例如: Kubernetes/Mesos/Swarm等。'
  community:
    header:
      rancher: 社區貢獻
      pl: 社區貢獻
    detail:
      rancher: 由社區成員創建並維護的模板，未經過Rancher Labs認證。
      pl: 由社區成員創建並維護的模板
  more:
    header: 自定義
    helpText:
      header: "您可以自定義應用商店，每個自定義商店需滿足以下要求:"
      help-name: 唯一的名稱
      help-repo: '倉庫地址:'
      help-git: "基於Git的商店地址，例如: https://github.com/{appName}/charts.git。"
      help-chart: 'Helm Charts server URL，例如: https://kubernetes-charts.storage.googleapis.com/，詳細資訊可查看<a href="https://docs.helm.sh/developing_charts/#hosting-chart-repositories" target="_blank" rel="nofollow noopener noreferrer">Chart託管倉庫</a>。'
    addActionLabel: 新增應用商店
    noMatch: 沒有與當前搜索匹配的應用商店
    noData: 沒有自定義應用商店
    addHeader: 新增應用商店
    editHeader: 編輯應用商店
    name:
      label: 名稱
      placeholder: '例如: Mycatalog'
    url:
      label: 商店URL地址
    kind:
      label: 類型
      native: 原生
      helm: Helm
    branch:
      label: 分支
      placeholder: '例如: master'
    private:
      label: 使用私有應用商店
    username:
      label: 用戶名
      required: '用戶名必須填寫'
      placeholder: "比如: admin"
    password:
      label: 密碼
      required: '密碼必須填寫'
      placeholder: password
    helmVersion:
      label: Helm 版本
  errors:
    nameInExists: '在啟用{key}之前，請移除名稱為{key}的應用商店。'

clusterRow:
  noMatch: 沒有匹配當前搜索的環境。
  noData: 叢集中還沒有任何環境。
  noHosts: 外部叢集沒有任何主機
  noClusterMatch: 沒有匹配當前搜索的叢集。
  noClusterData: 沒有任何叢集。
  addHost: 新增主機...
  importCluster: 使用已有的Kubernetes
  loginDefault: 登入

clusterTemplateRow:
  label: '叢集模板'
  noData: '當前没有配置叢集模板。'
  noMatch: 没有叢集模板匹配當前搜索。

clusterNew:
  header: 選擇叢集類型
  advanced:
    helpText: 不要使用Tabs，Tabs字符在yaml中不能解析。
    cancel: 表單輸入
    viewCancel: 表單查看
    yaml: 編輯YAML
    viewYaml: YAML查看
  name:
    label: 叢集名稱
    placeholder: '例如: Sandbox'
    required: 叢集名稱必須填寫
  description:
    placeholder: '例如: 用於開發和測試工作負載的叢集'
  driverLabels:
    cloud: Kubernetes託管服務商
    custom: 新增主機自建Kubernetes叢集
    import: 匯入現有的Kubernetes叢集
    infra: 來自雲服務商提供的主機
    noCloud: 没有啟用叢集驅動程式。
    noInfra: 没有啟用主機驅動程式。
  externalError: '無法加載组件。檢查URL。'
  members:
    label: 成員角色
    detail: 控制哪些用戶可以訪問叢集，以及他們擁有的對其進行更改的權限。
  config:
    label: 供應商
    detail: 選擇叢集主機的來源
  nodes:
    title: 主機
    detail: 自定義將要創建的主機
  customize:
    title: 叢集選項
  kubernetesOptions:
    title: Kubernetes選項
    detail: 自定義叢集功能
  security:
    title: 安全
    detail: 自定義GKE服務帳號和訪問權限
  amazoneks:
    label: AWS的基於Kubernetes的彈性容器服務
    shortLabel: 亞馬遜EKS
    ingressWarning: "注意:目前Amazon EKS不會在啟動新的叢集時創建傳入控制器。如果需要此功能，則必須在叢集創建後手動創建一個傳入控制器。"
    access:
      title: 帳號訪問
      detail: 選擇將用於啟動Amazon EKS的區域和API密鑰
  tencenttke:
    label: 騰訊雲Kubernetes服務
    shortLabel: Tencent TKE
    access:
      next: "下一步: 配置叢集"
      loading: "從騰訊雲獲取VPC訊息"
      title: 账户認證
      detail: 選擇騰訊雲Kubernetes服務所使用的區域
    cluster:
      title: 叢集配置
      detail: 選擇騰訊雲Kubernetes服務中使用的VPC和版本
      next: "下一步: 選擇主機類型"
      loading: "從騰訊雲獲取可用區訊息"
    node:
      title: 主機類型
      detail: 選擇騰訊雲Kubernetes服務中使用的主機類型
      next: "下一步: 配置節點"
      loading: "從騰訊雲獲取節點配置訊息"
    instance:
      title: 節點配置
      detail: 配置騰訊雲Kubernetes服務中的節點
    subnet:
      label: 子網域
      required: 請選擇子網域
    os:
      label: 操作系统
    disk:
      basic: 本地硬碟
      ssd: 本地SSD硬碟
      cloudBasic: 普通雲硬碟
      cloudPremium: 高性能雲硬碟
      cloudSsd: SSD雲硬碟
    rootSize:
      label: 系统槽大小
      placeholder: '例如: 25'
    rootType:
      label: 系统槽類型
    storageType:
      label: 數據槽類型
    storageSize:
      label: 數據槽大小
      placeholder: '例如: 10'
    bandwidth:
      label: 平寬
      placeholder: '例如: 10'
    nodeCount:
      label: 節點數量
      placeholder: '例如: 3'
      required: 請輸入節點數量
      help: 將要創建的騰訊雲Kubernetes服務中所含有的節點數量
    bandwidthType:
      label: 頻寬類型
      hour: 按頻寬使用时长計費
      traffic: 按流量計費
    keyPair:
      label: 密鑰
      required: 請選擇密鑰
    region:
      label: 區域
    secretId:
      label: 密鑰ID
      placeholder: 您的騰訊雲API密鑰ID
      required: 請輸入密鑰ID
    secretKey:
      label: 密鑰
      placeholder: 您的騰訊雲API密鑰
      provided: 已提供
      required: 請輸入密鑰
    securityGroup:
      label: 安全组
      required: 請選擇安全组
    vpc:
      label: VPC
      required: 請選擇VPC
    version:
      label: Kubernetes版本
    cidr:
      label: 容器網路 CIDR
      placeholder: '例如: 172.16.0.0/16'
      required: 請輸入容器網路的CIDR
    zone:
      label: 可用區
      required: 請選擇可用區
    instanceType:
      label: 實例類型
      required: 請選擇實例類型
  azureaks:
    label: Azure容器服務
    shortLabel: Azure AKS
    ingressWarning: "注意:目前Azure AKS在啟動新叢集時不會創建一個傳入控制器。如果需要此功能，則必須在叢集創建後手動創建一個傳入控制器。"
    authenticate:
      next: "下一步: 認證 & 設定主機"
    access:
      title: 帳號訪問
      detail: 設定用於與Azure通訊的憑據
      help: '參考<a href="https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal" target="_blank">連結文檔</a>創建客戶端ID和密鑰。'
    placement:
      label: 位置
    count:
      label: 主機數量
      placeholder: "例如: 1"
    location:
      label: 位置
      prompt: 選擇一個位置...
    accountAccessSection:
      label: 帳號訪問
    subscriptionId:
      label: 訂閱ID
      placeholder: Azure訂閱ID
    machineType:
      label: VM規格
      prompt: 選擇一個規格...
    diskSizeGb:
      label: OS
      placeholder: "例如: 100"
    dns:
      label: DNS前綴
      placeholder: "例如: example"
    ssh:
      label: 公共密鑰
      placeholder: "黏貼SSH公鑰"
    security:
      label: 安全
    members:
      label: 成員角色
    pod:
      label: Pod安全策略
    kubernetesVersion:
      label: Kubernetes版本
      prompt: 選擇版本...
    admin:
      label: 管理員名稱
      placeholder: user-1
    tenant:
      label: 租戶ID
      placeholder: Azure租戶ID
    image:
      label: 鏡像
      placeholder: '推薦: UbuntuServer:16.04.0-LTS:latest'
    size:
      label: 規格
    dockerPort:
      label: Docker埠
      placeholder: '2376'
    publishSettingsFile:
      label: 發布設定
      placeholder: 發布設定文件
    environment:
      label: 環境
    resourceGroup:
      label: 資源組
      placeholder: 'docker-machine'
      helpText: "使用一個已有的資源組或者輸入一個新的資源組名稱。注意: 如果使用的資源組內已經存有AKS叢集的話，將會創建一個新的資源組,Azure AKS只允許一個資源組有一個AKS叢集。"
    networking:
      label: 網路
      default: 默認
      advanced: 高級
      networkPlugin:
        label: 網路插件
        prompt: 選擇網路插件
      vnet:
        label: 虛擬網路-子網(子網CIDR)
        prompt: '選擇虛擬網路/子網'
      vnetresourcegroup:
        label: 虛擬網路資源組
        prompt: 請選擇虛擬網路
        help: The Resource Group if your Virtual Network does not exist in the same Resource Group as your cluster.
      subnet:
        label: 子網
      serviceCidr:
        label: Kubernetes Service IP範圍
        help: "CIDR表示用於分配給service cluster的IP範圍，它不得與任何子網IP範圍相同。例如: 10.0.0.0/16."
        prompt: "10.43.0.0/16"
      dnsServiceIp:
        label: Kubernetes DNS服務IP地址
        help: "分配給Kubernetes DNS服務的IP地址，它必須在Kubernetes服務地址範圍內。例如: 10.0.0.10."
        placeholder: "例如: 10.0.0.10"
      dockerBridgeCidr:
        label: Docker bridge地址
        help: '分配給Docker Bridge的IP地址和網路掩碼，它不能位於任何子網IP範圍或Kubernetes服務地址範圍內。例如: 172.17.0.1/16.'
        placeholder: "例如: 172.17.0.1/16"
      podCidr:
        label: Kubernetes pod地址範圍
        help: '一个IP範圍，用於分配Pod IP。例如: 172.244.0.0/16'
        placeholder: '例如: 172.244.0.0/16'

    sshUser:
      label: SSH用戶
      placeholder: usr1
    storageType:
      label: 儲存類型
    vnet:
      label: VNet
      placeholder: '[resourcegroup:]名稱'
    subnet:
      label: 子網
      placeholder: 示例-子網名稱
    subnetPrefix:
      label: 子網Prefix
      placeholder: '128.42.0.0/21'
    availabilitySet:
      label: 可用性集
      placeholder: 可用集名稱
    openPort:
      label: 開放埠
      placeholder: '逗號分隔，例如: 80,443'
    privateIpAddress:
      label: 私有IP
      placeholder: '127.0.0.1'
    usePrivateIp:
      label: 使用私有IP連接
    staticPublicIp:
      label: 公網IP
    noPublicIp:
      label: 無公網IP
    clientId:
      label: 客戶端ID
      placeholder: 客戶端ID
    clientSecret:
      label: 客戶端密鑰
      placeholder: 客戶端密鑰
    region:
      label: 區域
    enableHttpApplicationRouting:
      label: HTTP應用程式路由
    enableMonitoring:
      label: 監控
    networkPolicy:
      label: 網路策略
      placeholder: 選擇網路策略
    tags:
      label: 標籤
      addActionLabel: 增加標籤
    errors:
      included:
        serviceCidr: 'Kubernetes服務地址範圍必須是有效的CIDR格式。'
        dnsServiceIp: 'Kubernetes DNS服務IP地址必須是有效的IP地址。'
        dockerBridgeCidr: 'Docker bridge地址必須是有效的CIDR格式。'
        parsedServiceCidr: 'Kubernetes服務地址範圍必須在選定的虛擬網路範圍內。'
        parsedDnsServiceIp: 'Kubernetes DNS服務IP地址必須在Kubernetes服務地址範圍內。'
        parsedDockerBridgeCidr: 'Docker bridge地址不能與選定的虛擬網路或Kubernetes服務地址相同'

  googlegke:
    label: Google Kubernetes引擎
    shortLabel: Google GKE
    checkServiceAccount: "下一步: 設定主機"
    checkingServiceAccount: 認證
    credential:
      label: 服務帳號
      placeholder: 服務帳號私鑰JSON文件
      configured: 為{project}專案設定
      helpText: |
        "創建一個擁有JSON私鑰的<a href="https://console.cloud.google.com/projectselector/iam-admin/serviceaccounts" target="_blank" rel="nofollow noopener noreferrer">Service Account</a>，並在此處提供JSON。有關創建服務帳戶的更多資訊，請參閱<a href="https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances" target="_blank" rel="nofollow noopener noreferrer">Google Cloud文檔</a> 。需要四個IAM角色: Compute Viewer (<code>roles/compute.viewer</code>)，(Project) Viewer (<code>roles/viewer</code>)，Kubernetes Engine Admin (<code>roles/container.admin</code>)和Service Account User (<code>roles/iam.serviceAccountUser</code>)，更多關於角色的資訊可在<a href="https://cloud.google.com/kubernetes-engine/docs/how-to/iam-integration" target="_blank" rel="nofollow noopener noreferrer">此處</a>找到。<a href="https://cloud.google.com/kubernetes-engine/docs/how-to/iam-integration" target="_blank" rel="nofollow noopener noreferrer">"
    zone:
      label: 區域
      prompt: 選擇一個區域...
    project:
      label: 專案
      placeholder: '例如: My-project'
    locationType:
      label: 位置類型
      zone: Zonal
      region: 區域
    region:
      label: 區域
      prompt: 选择區域...
    machineType:
      label: 虛擬機類型
      prompt: 選擇類型...
    nodeCount:
      label: 主機數量
      prompt: 選擇類型...
      required: 需要節點計數
      outsideError: '節點池中指定的節點数超出了指定的自動伸缩限制'
    diskSizeGb:
      label: 根磁盤大小
    masterVersion:
      label: Kubernetes版本
      prompt: 選擇版本...
      warning: 當您用GKE升级Kubernetes版本时，只有主master節點會被升级。如果您也想升级worker節點，則需要通過Google Cloud平台手動升级。
    clusterIpv4Cidr:
      label: 容器地址範圍
      placeholder: '例如: 10.42.0.0/16'
    alphaFeatures:
      label: Alpha功能
    legacyAuth:
      label: Legacy Authorization
    stackDriverLogging:
      label: Stackdriver日誌
    stackdriverMonitor:
      label: Stackdriver監控
    dashboard:
      label: Kubernetes儀錶板
    httpLB:
      label: Http負載均衡
    maintenanceWindow:
      label: 維護視窗
    enableHorizontalPodAutoscaling:
      label: Pod自動橫向伸縮
    enableNodepoolAutoscaling:
      label: 節點池自動横向伸缩
    minNodeCount:
      label: 最小節點
      required: 最小節點必須填寫
    maxNodeCount:
      label: 最大節點
      minError: 最大節點應大於最小節點
      required: 最大節點必須填寫
    masterAuthUsername:
      label: 主節點認證使用者名
      placeholder: 主節點認證使用者名
      required: 主節點認證使用者名必須填寫
    masterAuthPassword:
      label: 主節點認證密碼
      placeholder: 主節點認證密碼
      required: 主節點認證密碼必須填寫
    issueClientCertificate:
      label: 主節點認證
    enableMasterAuthorizedNetwork:
      label: 主節點認證網路
    enablePrivateEndpoint:
      label: 使用内部IP地址訪問主節點
    enablePrivateNodes:
      label: 專用叢集
    masterIpv4CidrBlock:
      label: Master IP範圍
      placeholder: '例如: 10.42.0.0/28'
    useIpAliases:
      label: 使用Ip别名
    ipPolicySubnetworkName:
      label: 子網路名稱
      placeholder: Your Subnetwork Name
    ipPolicyCreateSubnetwork:
      label: 創建子網路
      autoLabel: 自動創建子網路
    ipPolicyClusterSecondaryRangeName:
      label: Cluster Secondary Range Name
      placeholder: Your Cluster Secondary Range Name
    ipPolicyServicesSecondaryRangeName:
      label: Services Secondary Range Name
      placeholder: Your Services Secondary Range Name
    ipPolicyClusterIpv4CidrBlock:
      label: Pod地址範圍
      placeholder: '例如: 10.96.0.0/11'
    ipPolicyNodeIpv4CidrBlock:
      label: Node Ipv4 CIDR Block
      placeholder: Your Node Ipv4 CIDR Block
    masterAuthorizedNetworkCidrBlocks:
      label: Master Authorized Network CIDR Blocks
      placeholder: Your Master Authorized Network CIDR Blocks
      addActionLabel: Add CIDR Block
    ipPolicyServicesIpv4CidrBlock:
      label: 服務地址範圍
      placeholder: '例如: 10.94.0.0/18'
    header:
      iPAllocationPolicy: IP分配策略
      privateCluster: Private Cluster
      masteAuth: Master Auth
      nodePoolAutoscaling: 主機池自動伸缩
      masterAuthorizedNetwork: Master Authorized Network
    locations:
      label: 附加區域
    imageType:
      label: Image Type
      UBUNTU: Ubuntu
      COS: Container-Optimized OS
    network:
      label: 網路
    subNetwork:
      label: 主機子網路
    nodeLabels:
      label: 主機標籤
      addAction: 添加標籤
    clusterLabels:
      label: 叢集標籤
    localSsdCount:
      label: 本地 SSD 硬碟數量
    diskType:
      label: 根硬碟類型
      pd-standard: 標準持久硬碟
      pd-ssd: SSD持久硬碟
    preemptible:
      label: 可搶佔的節點（測試版）
    enableAutoUpgrade:
      label: 自動升级
    enableAutoRepair:
      label: 自動修復
    serviceAccount:
      label: 服務帳號
    oauthScopes:
      label: 訪問權限範圍
      default: 允許默認訪問權限
      full: 允許所有Cloud API的全面訪問權限
      custom: 針對每個API設置訪問權限
    userInfo:
      label: 使用者訊息
    computeEngine:
      label: Compute Engine
    storage:
      label: 儲存
    taskQueue:
      label: 任务順序
    bigQuery:
      label: BigQuery
    cloudSQL:
      label: Cloud SQL
    cloudDatastore:
      label: Cloud Datastore
    stackdriverLoggingAPI:
      label: Stackdriver Logging API
    stackdriverMonitoringAPI:
      label: Stackdriver Monitoring API
    cloudPlatform:
      label: 雲平台
    bigtableData:
      label: Bigtable 数据
    bigtableAdmin:
      label: Bigtable 管理员
    cloudPub:
      label: Cloud Pub/Sub
    serviceControl:
      label: 服務控制
    serviceManagement:
      label: 服務管理
    stackdriverTrace:
      label: Stackdriver Trace
    cloudSourceRepositories:
      label: Cloud Source Repositories
    cloudDebugger:
      label: 雲調試器
    taints:
      label: taints
      addAction: 增加 taints
      effect:
        label: Effect
      key:
        label: 键
        placeholder: Key
      value:
        label: 值
        placeholder: Value
      required: '污点的 "key"和"value"必須設置.'
    tablesOnly: Tables Only
  k3simport:
    label: Rancher K3S
    shortLabel: K3S
    errors:
      concurrency:
        negative: 只有非負和非零的開發值是有效的。
  huaweicce:
    label: 華為雲容器引擎
    shortLabel: Huawei CCE
    name:
      label: 叢集名稱
      required: 叢集名稱必須填寫
    access:
      title: Account Access
      detail: 選擇用於啟動華為雲容器引擎的區域和API KEY。
    accessKey:
      label: 訪問密钥ID
      placeholder: CCE訪問密钥ID
      help: 創建訪問密钥ID参考<a href="https://support.huaweicloud.com/usermanual-ca/zh-cn_topic_0046606340.html" target="_blank">这里</a>.
    secretKey:
      label: 訪問密钥
      placeholder: CCE訪問密钥
      help: 获取訪問密钥参考<a href="https://support.huaweicloud.com/usermanual-ca/zh-cn_topic_0046606340.html" target="_blank">这里</a>.
    projectId:
      label: 项目ID
      placeholder: CCE项目ID
      help: 获取项目ID参考<a href="https://support.huaweicloud.com/usermanual-ca/zh-cn_topic_0046606344.html" target="_blank">这里</a>.
      required: 项目ID必須填寫
    region:
      label: 區域
      helpText: 获取區域参考<a href="https://developer.huaweicloud.com/endpoint" target="_blank">这里</a>.
      required: 區域必須填寫
    business:
      label: 业务
    checkAccount: "下一步: 配置叢集"
    checkingAccount: 使用者校验中...
    configureNode: "下一步: 配置節點"
    configuringNode: 配置中...
    clusterOption:
      title: 叢集选项
      detail: 為叢集自定義Kubernetes选项
    clusterType:
      label: 叢集類型
    clusterFlavor:
      label: Cluster Flavor
    masterVersion:
      label: 版本
    vpcId:
      label: 虚拟私有雲
    subnetId:
      label: 所在子網路
      none: 无可用子網路
    highwaySubnet:
      label: 高速网卡
      placeholder: 高速子網路
      none: 没有高速子網路被使用
    nodeOption:
      title: 節點选项
      detail: 為節點自定義选项
    dataVolumeType:
      label: 数据盘類型
    dataVolumeSize:
      label: 数据盘大小
    description:
      label: 描述
      placeholder: '例如: 華為CCE叢集'
    eipBandwidthSize:
      label: 带宽
    eipChargeMode:
      label: 计费模式
    eipCount:
      label: 數量
    availableZone:
      label: 當前區域
    billingMode:
      label: 计费模式
      payPerUse: 按需计费
      yearly: 包年/包月
    containerNetworkCidr:
      label: 容器网段
      placeholder: '例如: 172.16.0.0/16'
    containerNetworkMode:
      label: 網路模型
      none: 无配置
    rootVolumeType:
      label: 系统盘類型
    rootVolumeSize:
      label: 系统盘大小
    nodeCount:
      label: 節點个数
    nodeFlavor:
      label: 	節點规格
    ssh:
      label: 密钥对
    eip:
      label: 弹性IP
    eipSelection:
      none: 暂不使用
      new: 創建新的
      exist: 使用已有
    eipIds:
      label: 弹性 IP
      none: 无可用弹性 IP
    eipType:
      label: Eip Type
    clusterLabels:
      label: 叢集標籤
      none: 无標籤
    nodeLabels:
      label: 主機標籤
    clusterEipId:
      label: Cluster Eip
      prompt: 選擇Eip...
    externalServerEnabled:
      label: 外部服務器
      enabled: 启用 - 只支持内网
      disabled: 禁用 - CCE叢集将部署在Rancher所在的VPC
    highAvailability:
      label: 高可用
    managementScale:
      label: 叢集管理规模
    nodeOperationSystem:
      label: 操作系统
    authenticatingProxyCa:
      label: 	CA根證書
    validityPeriod:
      label: 有效期
    bmsIsAutoRenew:
      label: 自動更新
    loginMode:
      label: 登入方式
      password: 密碼
      keyPair: 密钥对
    password:
      label: 密碼
      placeholder: 请输入密碼
    userName:
      label: 使用者名
    authentiactionMode:
      label: 認證模式
      rbac: RBAC
      authenticating_proxy: 認證代理
    eipShareType:
      label: 共享Eip類型
  rke:
    upgradeStrategy:
      maximumWorkersDown:
        view:
          count: "{value}"
          percentage: "{value}%"
        label: 最大不可用Worker節點數
        placeholder: '例如: 6'
        mode:
          percentage: 百分比
          count: 台數
      drainNodes:
        label: 節點驅逐（當節點不可用時是否執行自動驅逐Pod）
    clustersSelectTemplate:
      label: "使用現有的叢集模板和修訂"
      select:
        label: 叢集模板
        prompt: 選擇叢集模板
    clustersSelectTemplateRevision:
      select:
        prompt: 選擇一個叢集模板修訂
        default: '{name} - Default (Created {ago})'
        other: '{name} (Created {ago})'
    cisScan:
      scheduled:
        enabled:
          label: 啟用CIS掃描
        interval:
          label: CIS 定時掃描間隔
          placeholder: e.g. 0 0 * * *
        retention:
          label: CIS掃描報告保留副本數
        profile:
          label: CIS掃描配置文件

    etcd:
      enabled:
        label: Etcd快照輪換
      backupConfig:
        legacy: "當前叢集配置了廢棄的ectd快照設置。新的設置將創建時間和保留持續時間替換為更簡單的創建時間(以小時和保留計數為單位)。系統已自動遷移了您的創建週期，保留計數已配置為默認的6個備份(當前保留時間:{duration})，如果您不介意這個設置，那不需要進一步的操作，您也可以在高級設置中更改此設置。"
        retention:
          label: 快照副本數
          placeholder: "12"
          prefix: 份數
        interval:
          label: 快照創建週期
          placeholder: "6"
        bucketName:
          label: S3 Bucket Name
          placeholder: "backups"
        region:
          label: S3 Region
          placeholder: "us-west-2"
        endpoint:
          label: S3 Region Endpoint
          placeholder: "s3.us-west-2.amazonaws.com"
        folder:
          label: S3 Folder
          placeholder: "例如: cluster-backup"
        accessKey:
          label: Access Key
          placeholder: Your AWS access key
        secretKey:
          label: Secret Key
          placeholder: Your AWS secret key
          provided: Provided
        customCa:
          label: 自定義CA證書
          placeholder: "黏貼證書和必要的鍵證書, 以-----BEGIN CERTIFICATE-----開始"
      location:
        label: Etcd快照儲存
        s3:
          label: s3
          help: 'Etcd將在本地生成快照，隨後將快照備份到s3儲存。'
        local:
          label: local
          help: Etcd快照只存在本地，不執行外部備份
      heartbeat:
        label: etcd心跳間隔時間
        placeholder: 心跳間隔時間
      election:
        label: etcd選舉超時時間
        placeholder: 選舉超時時間
      snapshot:
        label: Recurring etcd Snapshots
      retention:
        label: 快照保留時間
        placeholder: "12h"
        help: "可使用的單位: h, m, s"
      creation:
        label: 快照創建時間間隔
        placeholder: "6h"
      error: "快照{type}周期錯誤: 必須指定一個時間值和時間單位(s、m、h)，當前輸入{entry}"
    nodeName:
      title: 節點名稱
      detail: (可選)自定義節點顯示的名稱，不顯示實際的主機名
      placeholder: '例如: My-worker-node'
    address:
      title: 主機地址
      detail: 為主機設定公網地址和內網地址
      warning: 這似乎不是一個有效的IP地址
      public:
        label: 公網地址
        placeholder: '例如: 1.2.3.4'
      private:
        label: 內網地址
        placeholder: '例如: 1.2.3.4'
    label: '{appName}Kubernetes引擎'
    shortLabel: 自定義
    customize:
      label: 叢集選項
      detail: "自定義Kubernetes叢集選項"
    labels:
      title: 主機標籤
      detail: （可選）應用於節點的可選標籤
    taints:
      title: 節點污点（Taints）
      detail: （可選）添加到節點的污点（taints）
    nodes:
      title: 主機池
      detail: 設定組成叢集的主機
      add: 新增主機池
      addTemplate: 新增主機模板
      templatePrompt: "選擇模板..."
      myTemplatesGroup: "我的模板"
      othersTemplatesGroup: "其他模板"
      hostnamePrefix: 主機池名稱前綴
      count: 數量
      template: 主機模板
      deleteNotReadyAfterSecs: 自動替換
      deleteNotReadyAfterSecsTooltip: '如果大於0，那麼長時間無法訪問的節點將被自動刪除和替換。 '
      taints: Taints
    detected: |
      {count, plural,
      =1{#台新主機註冊成功}
      other{#台新主機註冊成功}
      }
    done: 完成
    info:
      text: 編輯主機選項將更新主機註冊命令
    command:
      instructions: '複製以下命令在主機的SSH終端運行。'
    auth:
      label: 認證提供者
      x509: x509
    serviceNodePortRange:
      label: NodePort埠範圍
      placeholder: '例如: 30000-32767'
    network:
      title: 網路驅動
      detail: 為叢集設定網路驅動
      label: 網路組件
      flannel: Flannel
      flannelCustom: Flannel
      calico: Calico
      canal: Canal
      weave: Weave
      flannelBackends:
        label: Flannel Backend
        hostgw: Host Gateway (L2bridge)
        vxlan: VXLAN (Overlay)
      options:
        flannel:
          iface:
            label: 接口
        canal:
          iface:
            label: 接口
        calico:
          cloudProvider:
            label: 雲提供商
      type:
        info: '僅支持host-gw後端'
    ingress:
      label: Nginx Ingress
    monitoring:
      label: 服務監控指標
    networkPolicy:
      label: 專案網路隔離
    networkMTU:
      label: 容器網卡 MTU
      help: "自定義容器網卡MTU值。默認網路傳輸的MTU為1500，對於有些網路驅動(比如canal)，由於使用vxlan後端，會有50bit用於傳輸vxlan的tag，所以在主機上創建的網橋flannel.1的MTU值是1450，非標準的1500。默認情況容器的網卡MTU值是1500，為了對應flannel.1的MTU值，可通過這個參數來自定義容器的MTU值。"
      detail: '例如: 1500'
    version:
      label: Kubernetes版本
    registry:
      label: 從以下倉庫拉取Kubernetes鏡像
      default: 默認的鏡像倉庫(DockerHub)
      custom: "自定義鏡像倉庫"
      url:
        label: URL
        placeholder: '例如: quay.io'
      user:
        label: 用戶名
      password:
        label: 密碼
    ignoreDockerVersion:
      label: 主機Docker版本
      enabled: 允許不受支持的版本
      disabled: 需要支持的版本
    role:
      pageheader: 自定義主機運行命令
      sectionheader: 主機選項
      title: '角色選擇(一台主機可以對應多個角色,每個叢集至少需要一個Etcd角色、一個Control角色、一個Worker角色)'
      detail: '選擇主機角色,埠放行請參考: https://rancher.com/docs/rancher/v2.x/en/installation/references/'
      header:
        etcd: Etcd
        controlplane: Control
        worker: Worker
      requirements:
        label: "所需的主機數: "
        etcd: 1,3或5
        controlplane: 1或更多
        worker: 1或更多
    helptext: 更改的主機模板只會影響新創建的節點。
    kubeApi:
      label: Kube API
      ipRange: 服務叢集IP範圍
    kubeController:
      label: Kube控制器
      cidr: 叢集CIDR
      ipRange: 服務叢集IP範圍
    kubelet:
      label: Kubelet
      domain: 叢集域
      dns: 叢集DNS伺服器
    warning:
      etcd:
        even: 設置{count}個etcd節點是對硬件的浪費，因為它不會增加仲裁，除非它是奇數。
        noEtcd: etcd節點的數量不應小於1。
      aws:
        iam: '使用Amazon Cloud Provider時，應在節點模板中設定IAM角色名稱'
    errors:
      etcd: 請選擇1個，3個或5個主機用於etcd。
      controlPlane: 請至少選擇一個用於management的主機。
      worker: 請至少選擇一個用於worker的主機。
    dockerRootDir:
      placeholder: "{dir}是默認目錄"
    system:
      title: 主機操作系統
      detail: 將新增到叢集的主機的操作系統
      linux: Linux
      windows: Windows
    windowsSupport:
      label: Windows Support
      help: 適用於Kubernetes 1.14與Flannel網路提供商。
      disabled: 不支持{plugin}網路驅動。
    advanced:
      label: 高級叢集選項
      detail: 自定義高級選項
    authorizedEndpoint:
      title: 授權叢集訪問地址
      detail: "通過授權的叢集訪問地址與叢集直接通信，繞過Rancher API代理。可以通過為叢集生成kubeconfig來訪問叢集。"
      label: 授權叢集訪問地址
  custom:
    label: 自定義
    shortLabel: 自定義
    helpBlock: 使用RKE從現有的裸金屬服務器或虛擬機中創建一個新的Kubernetes叢集。
  import:
    label: 已匯入
    shortLabel: 已匯入
    helpBlock: 導入現有的Kubernetes叢集。 Kubernetes叢集的管理和配置繼續由原提供商負責。
    command:
      instructionsAdminRole: "<b>注意:</b><br/>如果想要匯入Google Kubernetes Engine(GKE)叢集(或一些不提供綁定叢集管理角色的kubectl設定文件的叢集),需要通過以下命令來綁定叢集管理角色。<br/><br/>如果匯入Google Kubernetes Engine叢集，將<b>[USER_ACCOUNT]</b>替換為Google帳戶（可使用<b>gcloud config get-value account</b>檢索帳戶）。<br/>如果未匯入Google Kubernetes Engine叢集，請將<b>[USER_ACCOUNT]</b>替換為kubectl設定文件中設定的執行用戶。"
      instructions: "在現有受支持的Kubernetes叢集中，運行下面的kubectl命令將其匯入到{appName}中:"
      instructionsInsecure: "如果因為{appName}使用不受信任/自簽名的SSL證書而出現<b> \"由未知頒發機構簽名的證書\"</b> 錯誤，請運行下面的命令以繞過證書檢查:"

clusterTemplateNew:
  members:
    label: 成員角色
    detail: 控制誰有權訪問叢集模板，以及他們有什麼權限來更改它。

cruClusterTemplate:
  infoBanner: 模板只允許為RKE叢集保存和重用配置選項。
  name:
    label: '模板名稱'
  revisionName:
    label: '模板修訂名稱'
    help: '不是必須，但建議使用描述性名稱，以幫助輕鬆定位正確的修訂。 '
  source:
    label: 'Source Revision'
  default:
    label: '默認修訂版本'
  members:
    label: '共享模板'
    detail: '與單個成員共享此叢集模板，或將其公開給組織。這將影響此叢集模板中的所有模板修訂。 '
  edit:
    label: '編輯叢集模板'
  selectRevision:
    label: '選擇默認修訂'
cruDestinationRule:
  title:
    new: 添加目標規則
    edit: 編輯目標規則
    view: "目標規則: {name}"
  port:
    label: Port
    placeholder: '例如: 8080 or myport'
  host:
    error: 主機是必需的。
  name:
    placeholder: '例如: myrule'
  loadBalancer:
    label: Load Balancer
    detail: 配置負載平衡器算法
    simple:
      label: 使用標準的負載平衡算法
      roundRobin:
        label: 輪詢
      leastConn:
        label: 最小請求
      random:
        label: 隨機
      passthrough:
        label: 透傳
    consistentHash:
      label: 使用一致的基於散列的負載平衡實現軟會話關聯
      httpHeaderName:
        label: HTTP Header 名稱
        placeholder: '例如: end-user'
        error: 必須設置HTTP Header名稱。
      minimumRingSize:
        label: Minimum Ring Size
        placeholder: '例如: 1024'
      httpCookie:
        name:
          label: Cookie 名稱
          placeholder: '例如: username'
          error: 需要Cookie名稱。
        path:
          label: Cookie 路徑
          placeholder: '例如: /'
        ttl:
          label: TTL
          placeholder: '例如: 0s'
          error: TTL是必需的。
      mode:
        label: Hash 模式
        header:
          label: 基於特定HTTP頭的哈希
        cookie:
          label: 基於HTTP cookie的Hash
        sourceIp:
          label: 基於源IP地址的哈希
  connectionPool:
    label: 連接池
    detail: 配置到上游服務的連接量
    http1MaxPendingRequests:
      label: HTTP1最大等待請求
      placeholder: '例如: 1024'
      help: 到目標端的最大請求等待數
    http2MaxRequests:
      label: HTTP2最大等待請求
      placeholder: '例如: 1024'
      help: 到後端請求的最大數量。
    maxRequestsPerConnection:
      label: 每個連接的HTTP最大請求
      placeholder: '例如: 10'
      help: 到後端連接的每個連接的最大請求數。將此參數設置為1將禁用keep alive。
    maxRetries:
      label: HTTP最大重試
      placeholder: '例如: 1024'
      help: 在給定時間內，叢集中所有主機都可以執行的最大重試次數。
    connectTimeout:
      label: TCP連接超時
      placeholder: '例如: 30ms'
      help: TCP連接超時。
    maxConnections:
      label: TCP最大連接數
      placeholder: '例如: 1024'
      help: '到目標主機的HTTP1/TCP連接的最大數量。 '
  outlierDetection:
    label: 異常值檢測
    detail: 配置從負載平衡池中移除不健康主機
    baseEjectionTime:
      label: 基本驅逐時間
      placeholder: '例如: 30s'
      help: 最小驅逐時間. A host will remain ejected for a period equal to the product of minimum ejection duration and the number of times the host has been ejected.
    consecutiveErrors:
      label: 連續錯誤
      placeholder: '例如: 5'
      help: 從連接池中彈出主機之前的錯誤數。
    interval:
      label: 時間間隔
      placeholder: '例如: 10s'
      help: Time interval between ejection sweep analysis.
    maxEjectionPercent:
      label: 最大驅逐百分比
      placeholder: '例如: 10'
      help: Maximum % of hosts in the load balancing pool for the upstream service that can be ejected.
  subsets:
    label: Subsets
    noSubsets: No Subsets
    addSubsetLabel: Add Subset
    removeSubsetLabel: Remove Subset
    name:
      label: Name
      placeholder: '例如: v1'
      error: 子網名稱需要設置.
    labels:
      error: 請為子集至少設置一個標籤。
  tls:
    label: TLS
    detail: 為連接到上游服務配置TLS相關設置
    mode:
      label: TLS模式
      none:
        label: 無
      istio:
        label: Istio Mutual - 通過Istio實現與上游的雙向安全連接
      disable:
        label: 禁用-不要設置到上游端點的TLS連接
      simple:
        label: 簡單-創建到上游端點的TLS連接
      mutual:
        label: Mutual - 通過提供客戶端證書進行身份驗證，使用雙向TLS安全連接到上游
    clientCertificate:
      label: 客戶端證書(Client certificate)
      placeholder: '例如: /etc/certs/myclientcert.pem'
      error: 必須設置客戶端證書。
    privateKey:
      label: 私鑰(private key)
      placeholder: '例如: /etc/certs/client_private_key.pem'
      error: 必須設置私鑰。
    caCertificates:
      label: CA證書(CA certificate)
      placeholder: '例如: /etc/certs/rootcacerts.pem'
    sni:
      label: SNI
      placeholder: '例如: nginx.example.com'
    subjectAltNames:
      label: Subject Alternative Names
      placeholder: '例如: example.com'
      add: Add Subject Alternative Name

clusterTemplateQuestions:
  label: '叢集默認應答參數'
  detail: '希望為最終用戶提供的默認應答參數和默認值。 '
  table:
    question: '參數'
    answer: '默認值'
    type: '類型'
    required: '必須'
    noMatch: '沒有默認參數匹配當前搜索'
    noData: '沒有默認參數'
  schemaLabels:
    defaultClusterRoleForProjectMembers: '項目成員的默認叢集角色'
    desiredAgentImage: '需要的Agent鏡像'
    desiredAuthImage: '需要的Auth鏡像'
    dockerRootDir: 'Docker根目錄'
    enableClusterAlerting: '啟用叢集警告'
    enableClusterMonitoring: '啟用叢集監控'
    enableNetworkPolicy: '啟用網路策略'
    localClusterAuthEndpoint: '啟用本地叢集Auth端點'
    caCerts: 'CA證書'
    fqdn: 'FQDN'
    addonJobTimeout: '附加組件安裝超時'
    addons: '附加組件'
    addonsInclude: 'Addons Include'
    authentication: '身份驗證'
    authorization: '授權'
    bastionHost: '堡壘主機'
    cloudProvider: '雲供應商'
    dns: 'DNS配置'
    ignoreDockerVersion: '忽略Docker版本'
    ingress: 'Ingress'
    kubernetesVersion: 'Kubernetes版本'
    monitoring: '監控配置'
    network: '網絡配置'
    prefixPath: 'Prefix Path'
    privateRegistries: '私有鏡像庫配置'
    restore: '叢集恢復'
    rotateCertificates: '輪換證書'
    services: 'Services'
    sshAgentAuth: '啟用SSH代理認證'
    sshCertPath: 'SSH證書路徑'
    sshKeyPath: 'SH密鑰路徑'


conditionSections:
  title: 狀態
  detail: '當前{resourceType}運行狀態 '
  table:
    type: 類型
    status: 狀態
    lastUpdate: 最後更新
    reason: 狀態原因
    message: 消息
  noData: 沒有條件
  noMatch: 沒有條件與當前搜索匹配

resourceEventList:
  title: 事件
  detail: '當前{resourceType}的事件'
  table:
    type: 類型
    lastUpdate: 最後更新
    reason: 事件原因
    message: 事件訊息
    namespace: 命名空間
    object: 對象
  noData: 當前沒有事件
  noMatch: 沒有事件與當前搜索匹配

confirmDelete:
  titleWithoutResourceType: '您確定要刪除嗎？ '
  titleWithResourceType: '您確定要刪除<b>{resourceType}</b>嗎？ '
  resourceType:
    namespace: '命名空間'
    project: '項目'
    cluster: '叢集'
  environmentNote: '注意: 該項目中的所有資源都將被永久刪除，包括通過{appName}創建的所有命名空間。 '
  clusterNote: '注意: 通過雲提供商驅動創建的相關資源(如卷、負載均衡器和網絡)不會自動刪除。 '
  clusterRoleTemplateBindingNote: '注意: 不會刪除用戶的項目權限。 '
  systemProjectNamespaceNote: '注意: 您正在刪除系統項目下的命名空間。如果將其移除，可能會導致叢集不能正常運行。 '
  systemProjectNote: '注意: 您正在刪除系統項目。如果將其移除，可能會導致叢集不能正常運行'
  protip: '提示: 按住{key}鍵，同時點擊Delete以繞過此確認。 '
  confirmAction: 刪除
  cancelAction: 取消
  largeDeleteText: '{key} and {othersCount} others'
  systemChartNote: '您正在刪除一個系統應用程序。如果刪除該應用程序，可能會導致叢集出現問題。 '
  globalRoleNote: |
    {count, plural,
    =0 {No users are assigned this role.}
    =1 {# user is assigned this role.}
    other {# users are assigned this role.}
    }
  forceDelete:
    label: 強制刪除
    warning: '強制刪除Pod並不等待確認Pod中的進程是否終止，這可能導致這些進程一直運行，直到節點檢測到並完成優雅的刪除。如果您的進程使用共享存儲或與遠程API通信，並且依賴於pod的名稱來標識自己，那麼強制刪除這些pod可能導致多個進程使用相同的標識運行在不同的機器上，這可能導致數據損壞或不一致。只有在確定Pod已終止，或者應用程序可以同時運行同一pod的多個副本時，才強制刪除pod。此外，如果強制刪除Pod，調度器可能會在節點釋放這些資源之前在這些節點上運行新的Pod，並導致這些Pod立即被驅逐。 '

containerLogs:
  download: 下載日誌
  title: "日誌: "
  onlyCombined: "<b>注意:</b>此容器運行時帶有TTY(-t)參數，僅有合開的標準輸出和標準錯誤日誌可見。"
  combined: 合開日誌
  stdout: 標準輸出
  stderr: 標準錯誤
  protip: "高級技巧: 點擊查看日誌時按住{key}鍵在新視窗中打開"
  scrollTop: 回到頂部
  scrollBottom: 回到底部
  clear: 清除屏幕
  wrapLines: 自動換行
  previous: 以前的容器
  status:
    initializing: 初始化...
    connecting: 連接中...
    connected: 已連接
    disconnected: 已斷開
    closed: 已關閉

containerShell:
  protip: "高級技巧: 點擊運行命令行時按住{key}鍵在新視窗中打開"
  status:
    initializing: '初始化...'
    error: "錯誤:{error}"
    connecting: '連接中...'
    connected: 已連接
    disconnected: 已斷開
    closed: 已關閉
    code: " 狀態碼: {code}"

copyToClipboard:
  tooltip: 複製到剪貼板
  copied: 已複製

cruRegistry:
  title:
    new: 新增鏡像庫憑證
    edit: '編輯鏡像庫憑證: {name}'
    view: '鏡像庫憑證: {name}'
  address:
    label: 地址
    dockerhub: DockerHub
    quay: Quay.io
    custom: 自定義
    globalRegistry: 全局鏡像庫
    placeholder: '例如: registry.example.com'
    artifactory: Artifactory
  multiple: 多個
  auth:
    label: 認證token
    saved: 已保存
  username:
    label: 用戶名
  password:
    label: 密碼
    saved: 已保存

cruPersistentVolume:
  name:
    placeholder: '例如: Myvolume'
  description:
    placeholder: '例如: 生產資料庫的 volumes'
  title:
    new: 新增 persistent volume
    edit: '編輯 persistent volume : {name}'
    view: ' persistent volume : {name}'
  storageClass:
    label: 分配給儲存類
    prompt: 無
  pvc: persistent volume Claim
  reclaimPolicy: 回收策略
  capacity:
    label: 容量
    unit: GiB
  source:
    label: volumes 插件
    title: 插件設定
    detail: 設定選定 volumes 插件的選項
    prompt: '選擇一個 volumes 插件...'
  nodeAffinity:
    label: 節點親和性
  customize:
    title: 自定義
    detail: 自定義高級選項
  mountOptions:
    label: 掛載選項
    addActionLabel: 新增
    noData: 沒有掛載選項
  awsElasticBlockStore:
    fsType:
      label: 文件系統類型
      placeholder: "例如: ext4"
    readOnly:
      label: 唯讀
    partition:
      label: 分區
      placeholder: "例如: 1，0表示整塊硬盤。"
    volumeID:
      label: volumes ID
      placeholder: "例如: volume1"
  azureDisk:
    cachingMode:
      label: 緩存模式
      none: None
      readOnly: 唯讀
      readWrite: 讀寫
    diskName:
      label: 磁盤名稱
      placeholder: "例如: kubernetes-pvc"
    diskURI:
      label: 磁盤URI
      placeholder: "例如: https://example.com/disk"
    fsType:
      label: 文件系統類型
      placeholder: "例如: ext4"
    kind:
      label: 類型
      dedicated: 專用
      managed: 託管
      shared: 共享
    readOnly:
      label: 唯讀
  secret:
    defaultMode:
      label: 默認模式
      placeholder: "例如: 256"
    optional:
      label: 可選
    secretName:
      label: 密文
    certificateName:
      label: 證書
    items:
      label: 專案
  configMap:
    defaultMode:
      label: 默認模式
      placeholder: "例如: 256"
    optional:
      label: 可選
    name:
      label: 設定映射名
    items:
      label: 專案
  emptyDir:
    medium:
      label: 儲存介質
      default: 主機的默認儲存
      memory: 記憶體
    sizeLimit:
      label: 大小限制
      placeholder: "例如: 300Mi"
  azureFile:
    secretName:
      label: 密文名稱
      placeholder: "例如: secret"
    secretNamespace:
      label: 密文命名空間
      placeholder: "例如: default"
    shareName:
      label: 共享名
      placeholder: "例如: abc"
    readOnly:
      label: 唯讀
  cephfs:
    monitors:
      label: 監控
      addActionLabel: 新增
    path:
      label: 路徑
      placeholder: "例如: /var"
    readOnly:
      label: 唯讀
    secretFile:
      label: 密文文件
      placeholder: "例如: secret"
    secretRef:
      name:
        label: 名稱
        placeholder: "例如: lab"
      namespace:
        label: 命名空間
        placeholder: "例如: default"
      label: 密文
    user:
      label: 用戶
      placeholder: "例如: root"
  rbd:
    fsType:
      label: 文件系統類型
      placeholder: "例如: ext4"
    image:
      label: 鏡像
      placeholder: "例如: 鏡像"
    keyring:
      label: 密鑰文件
      placeholder: "例如: /etc/ceph/keyring"
    monitors:
      label: 監控
      addActionLabel: 新增
    pool:
      label: 池
      placeholder: "例如: rbd"
    readOnly:
      label: 唯讀
    secretRef:
      label: 密文
      placeholder: "例如: secret"
    user:
      label: 用戶
      placeholder: "例如: root"
  fc:
    fsType:
      label: 文件系統類型
      placeholder: "例如: ext4"
    lun:
      label: Lun
      placeholder: "例如: 2"
    readOnly:
      label: 唯讀
    targetWWNs:
      label: 目標的WWNs
      addActionLabel: 新增
    wwids:
      label: Wwids
      addActionLabel: 新增
  csi:
    driver:
      label: 驅動
      placeholder: '例如: driver.longhorn.io'
    fsType:
      label: 文件系統
      placeholder: '例如: ext4'
    readOnly:
      label: 只讀
    volumeHandle:
      label: Volume Handle
      placeholder: "e.g. pvc-xxxx"
    volumeAttributes:
      label: 卷屬性
      addActionLabel: 添加卷屬性
    controllerExpandSecretRef:
      name:
        label: Controller Expand Secret Name
        placeholder: "e.g. secret"
      namespace:
        label: Controller Expand Secret Namespace
        placeholder: "e.g. default"
    controllerPublishSecretRef:
      name:
        label: Controller Publish Secret Name
        placeholder: "e.g. secret"
      namespace:
        label: Controller Publish Secret Namespace
        placeholder: "e.g. default"
    nodePublishSecretRef:
      name:
        label: Node Publish Secret Name
        placeholder: "e.g. secret"
      namespace:
        label: Node Publish Secret Namespace
        placeholder: "e.g. default"
    nodeStageSecretRef:
      name:
        label: Node Stage Secret Name
        placeholder: "e.g. secret"
      namespace:
        label: Node Stage Secret Namespace
        placeholder: "e.g. default"
  flexVolume:
    driver:
      label: 驅動
      placeholder: "例如: driver"
    fsType:
      label: 文件系統類型
      placeholder: "例如: ext4"
    options:
      label: 選項
      addActionLabel: 新增
    readOnly:
      label: 唯讀
    secretRef:
      label: 密文
      placeholder: "例如: secret"
  flocker:
    datasetName:
      label: 數據集名稱
      placeholder: "例如: database"
    datasetUUID:
      label: 數據集UUID
      placeholder: "例如: uuid"
  glusterfs:
    endpoints:
      label: 終端
      placeholder: "例如: glusterfs-cluster"
    path:
      label: 路徑
      placeholder: "例如: kube_vol"
    readOnly:
      label: 唯讀
  gcePersistentDisk:
    fsType:
      label: 文件系統類型
      placeholder: "例如: ext4"
    partition:
      label: 分區
      placeholder: "例如: 1，0表示整塊硬盤"
    pdName:
      label: 持久化磁盤名稱
      placeholder: "例如: abc"
    readOnly:
      label: 唯讀
  iscsi:
    chapAuthDiscovery:
      label: Chap驗證發現
    chapAuthSession:
      label: Chap驗證會話
    fsType:
      label: 文件系統類型
      placeholder: "例如: ext4"
    initiatorName:
      label: 啟動器名稱
      placeholder: "例如: abc"
    iqn:
      label: IQN
      placeholder: "例如: 2"
    iscsiInterface:
      label: iSCSI接口
      placeholder: "例如: interface"
    lun:
      label: Lun
      placeholder: "例如: 2"
    portals:
      label: 門戶
      addActionLabel: 新增
    readOnly:
      label: 唯讀
    secretRef:
      label: 密文
      placeholder: "例如: secret"
    targetPortal:
      label: 目標門戶
      placeholder: "例如: portal"
  local:
    path:
      label: 路徑
      placeholder: "例如: /mnt/disks/ssd1"
  nfs:
    path:
      label: 路徑
      placeholder: "例如: /var"
    readOnly:
      label: 唯讀
    server:
      label: 伺服器
      placeholder: "例如: 10.244.1.4"
  cinder:
    fsType:
      label: 文件系統類型
      placeholder: "例如: ext4"
    readOnly:
      label: 唯讀
    volumeID:
      label: volumes ID
      placeholder: "例如: vol"
    secretRef:
      name:
        label: 密文名稱
        placeholder: "例如: abc"
      namespace:
        label: 密文命名空間
        placeholder: "例如: default"
      label: 密文名稱
  photonPersistentDisk:
    fsType:
      label: 文件系統類型
      placeholder: "例如: ext4"
    pdID:
      label: PD ID
      placeholder: "例如: abc"
  portworxVolume:
    fsType:
      label: 文件系統類型
      placeholder: "例如: ext4"
    readOnly:
      label: 唯讀
    volumeID:
      label: volumes ID
      placeholder: "例如: abc"
  quobyte:
    group:
      label: 組
      placeholder: "例如: abc"
    readOnly:
      label: 唯讀
    registry:
      label: 鏡像庫
      placeholder: "例如: abc"
    user:
      label: 用戶
      placeholder: "例如: root"
    volume:
      label: volumes
      placeholder: "例如: vol"
  scaleIO:
    fsType:
      label: 文件系統類型
      placeholder: "例如: ext4"
    gateway:
      label: 閘道
      placeholder: "例如: https://localhost:443/api"
    protectionDomain:
      label: 保護域
      placeholder: "例如: pd01"
    readOnly:
      label: 唯讀
    secretRef:
      name:
        label: 名稱
        placeholder: "例如: secret"
      namespace:
        label: 命名空間
        placeholder: "例如: default"
      label: 密文
    sslEnabled:
      label: SSL已啟用
    storageMode:
      label: 儲存模式
      placeholder: "例如: ThinProvisioned"
    storagePool:
      label: 儲存池
      placeholder: "例如: sp01"
    system:
      label: 系統
      placeholder: "例如: scaleio"
    volumeName:
      label: volumes 名
      placeholder: "例如: vol-0"
  storageos:
    fsType:
      label: 文件系統類型
      placeholder: "例如: ext4"
    readOnly:
      label: 唯讀
    secretRef:
      name:
        label: 名稱
        placeholder: "例如: secret"
      namespace:
        label: 命名空間
        placeholder: "例如: default"
      label: 密文
    volumeName:
      label: volumes 名
      placeholder: "例如: vol"
    volumeNamespace:
      label: volumes 命名空間
      placeholder: "例如: default"
  vsphereVolume:
    fsType:
      label: 文件系統類型
      placeholder: "例如: ext4"
    storagePolicyID:
      label: 儲存策略ID
      placeholder: "例如: sp1"
    storagePolicyName:
      label: 儲存策略名稱
      placeholder: "例如: sp"
    volumePath:
      label: volumes 路徑
      placeholder: "例如: /"

cruStorageClass:
  name:
    placeholder: '例如: 儲存'
  description:
    placeholder: '例如: AWS EBS儲存'
  title:
    new: 新增儲存類
    edit: '編輯儲存類: {name}'
    view: '儲存類: {name}'
  allowVolumeExpansion:
    label: 允許用戶擴展 volumes
  pv:
    title: persistent volume
    detail: 當前儲存類提供的 persistent volume 。
  mountOptions:
    label: 掛載選項
    addActionLabel: 新增
    noData: 沒有掛載選項
  parameters:
    title: 參數
    detail: 為儲存類設定特定的參數
    addActionLabel: 新增參數
  customize:
    title: 自定義
    detail: 自定義高級選項
  provisioner:
    label: 提供者
  reclaimPolicy:
    label: 回收策略
    Delete: 在工作負載釋放後刪除 volumes 和底層設備
    Retain: 保留 volumes 以進行手動清理
    Recycle: "回收: 清空內容，然後為以後的工作負載保留 volumes "
  volumeBindingMode:
    label: volume綁定模式
    immediate: 創建PersistentVolumeClaim後，綁定並提供一個持久volume
    waitForFirstConsumer: 使用PersistentVolumeClaim創建一個Pod後，綁定並提供一個持久volume
  aws-ebs:
    fsType:
      label: 文件系統
      placeholder: '例如: ext4'
    type:
      label: volumes 類型
      gp2: 'GP2 - 通用SSD'
      io1: 'IO1 - Provisioned IOPS SSD'
      st1: 'ST1 - Throughput-Optimized HDD'
      sc1: 'SC1 - Cold-Storage HDD'
    zone:
      label: 可用區
      automatic: "自動: 叢集中有主機的區域"
      manual: "手動: 選擇特定區域"
      placeholder: "us-east-1d，us-east-1c"
    iopsPerGB:
      label: 預置IOPS
      unit: 'GB/s'
    encrypted:
      label: 加密
    kmsKeyId:
      label: 用於加密的KMS Key ID
      automatic: "自動: 生成密鑰"
      manual: "手動: 使用特定的密鑰(完整的ARN)"
  gce-pd:
    type:
      label: volumes 類型
      pd-standard: '標準'
      pd-ssd: 'SSD'
    fsType:
      label: 文件系統類型
      placeholder: "例如: ext4"
    replicationType:
      label: Replication Type
      none: Zonal
      regionalPd: Regional
    zone:
      label: 可用區
      automatic: "自動: 叢集中有主機的區域"
      manual: "手動: 選擇特定區域"
      placeholder: "us-central1-a，us-central1-b"
  cinder:
    type:
      label: volumes 類型
      placeholder: "例如: fast"
    availability:
      label: 可用區
      automatic: "自動: 叢集中有主機的區域"
      manual: "手動: 選擇特定區域"
      placeholder: "例如: nova"
  vsphere-volume:
    diskformat:
      label: 磁盤格式
      thin: 精簡
      zeroedthick: 厚置備延遲置零
      eagerzeroedthick: 厚置備置零
    storagePolicyName:
      label: 儲存策略名稱
      placeholder: "例如: gold"
    datastore:
      label: 數據儲存
      placeholder: "例如: VSANDatastore"
    fstype:
      label: 文件系統類型
      placeholder: "例如: ext3"
    hostFailuresToTolerate:
      label: 主機失敗容忍
      placeholder: "例如: 2"
    cachereservation:
      label: 緩存預留
      placeholder: "例如: 20"
  azure-disk:
    new: 新建Azure
    skuName:
      label: Sku名稱
      placeholder: "例如: Standard_LRS"
    location:
      label: 位置
      placeholder: "例如: eastus"
    storageAccount:
      label: 儲存帳戶
      placeholder: "例如: azure_storage_account_name"
    storageaccounttype:
      label: 儲存帳戶類型
      placeholder: "例如: Standard_LRS"
    kind:
      label: 類型
      shared: 共享
      dedicated: 專用
      managed: 託管
      placeholder: "例如: 共享"
  azure-file:
    skuName:
      label: Sku名稱
      placeholder: "例如: Standard_LRS"
    location:
      label: 位置
      placeholder: "例如: eastus"
    storageAccount:
      label: 儲存帳戶
      placeholder: "例如: azure_storage_account_name"
  portworx-volume:
    fs:
      label: 文件系統
      placeholder: "例如: ext4"
    block_size:
      label: 塊大小
      placeholder: "例如: 32"
    repl:
      label: Repl
      placeholder: "例如: 1; 0為整個設備"
    io_priority:
      label: I/O 優先級
      placeholder: "例如: low"
    snap_interval:
      label: 快照間隔
      placeholder: "例如: 70"
    aggregation_level:
      label: 聚合級別
      placeholder: "例如: 0"
    ephemeral:
      label: 臨時的
      placeholder: "例如: true"
  scaleio:
    gateway:
      label: 閘道
      placeholder: "例如: https://192.168.99.200:443/api"
    system:
      label: 系統
      placeholder: "例如: scaleio"
    protectionDomain:
      label: 保護域
      placeholder: "例如: pd0"
    storagePool:
      label: 儲存池
      placeholder: "例如: sp1"
    storageMode:
      label: 儲存模式
      ThinProvisioned: 精簡設定
      ThickProvisioned: 精簡置備
    secretRef:
      label: 密文
      placeholder: "例如: sio-secret"
    readOnly:
      label: 唯讀
      placeholder: "例如: false"
    fsType:
      label: 文件系統類型
      placeholder: "例如: xfs"
  storageos:
    pool:
      label: 池
      placeholder: "例如: default"
    description:
      label: 描述
      placeholder: "例如: Kubernetes volumes "
    adminSecretNamespace:
      label: 管理密文命名空間
      placeholder: "例如: default"
    adminSecretName:
      label: 管理密文名
      placeholder: "例如: storageos-secret"
    fsType:
      label: 文件系統類型
      placeholder: "例如: ext4"
  longhorn:
    numberOfReplicas:
      label: 副本數量
      placeholder: "例如: 3"
    staleReplicaTimeout:
      label: 陳舊副本超時
      placeholder: "例如: 30"
    fromBackup:
      label: 從備份
      placeholder: ""
  quobyte:
    quobyteAPIServer:
      label: Quobyte API伺服器
      placeholder: "例如: https://138.68.74.142:7860"
    registry:
      label: 鏡像庫
      placeholder: "例如: 138.68.74.142"
    adminSecretNamespace:
      label: 管理密文命名空間
      placeholder: "例如: kube-system"
    adminSecretName:
      label: 管理密文名稱
      placeholder: "例如: quobyte-admin-secret"
    user:
      label: 用戶
      placeholder: "例如: root"
    group:
      label: 組
      placeholder: "例如: root"
    quobyteConfig:
      label: Quobyte設定
      placeholder: "例如: BASE"
    quobyteTenant:
      label: Quobyte租戶
      placeholder: "例如: DEFAULT"
  rbd:
    monitors:
      label: "Ceph-Monitor地址"
      placeholder: "例如: 10.16.153.105:6789"
    adminId:
      label: "管理員帳號(ID)"
      placeholder: "例如: kube"
    adminSecretNamespace:
      label: 管理密文所在命名空間
      placeholder: "例如: kube-system"
    adminSecret:
      label: 管理密文
      placeholder: "例如: secret"
    pool:
      label: 池
      placeholder: "例如: kube"
    userId:
      label: 用戶ID
      placeholder: "例如: kube"
    userSecretName:
      label: 用戶密文名稱
      placeholder: "例如: ceph-secret-user"
    userSecretNamespace:
      label: 用戶密文命名空間
      placeholder: "例如: default"
    fsType:
      label: 文件系統類型
      placeholder: "例如: ext4"
    imageFormat:
      label: 鏡像格式
      placeholder: "例如: 2"
    imageFeatures:
      label: 鏡像功能
      placeholder: "例如: layering"
  glusterfs:
    resturl:
      label: REST URL
      placeholder: "例如: https://127.0.0.1:8081"
    restuser:
      label: REST 用戶
      placeholder: "例如: admin"
    restuserkey:
      label: REST 用戶密鑰
      placeholder: "例如: password"
    secretNamespace:
      label: 密文命名空間
      placeholder: "例如: default"
    secretName:
      label: 密文名稱
      placeholder: "例如: heketi-secret"
    clusterid:
      label: 叢集ID
      placeholder: "例如: 630372ccdc720a92c681fb928f27b53f"
    gidMin:
      label: GID MIN
      placeholder: "例如: 40000"
    gidMax:
      label: GID MAX
      placeholder: "例如: 50000"
    volumetype:
      label: volumes 類型
      placeholder: "例如: replicate:3"

gatewayPage:
  noMatch: 沒有網關匹配當前搜索
  noData: 沒有配置網關
  notSupported: 叢集networking.istio.io/v1alpha3 API 不可用。
  table:
    hosts:
      label: Hosts

cruGateway:
  title:
    new: 添加網關
    edit: 編輯網關
    view: "網關: {name}"
  name:
    placeholder: ’例如：mygateway‘
  selector:
    label: 選擇器
    add: Add Key Value
    error: '"選擇器必需設置.'
  tls:
    mode:
      label: 運行模式
      prompt: '選擇模式...'
    httpsRedirect:
      label: HTTPS重定向
      enabled: 'Yes'
      disabled: 'No'
    serverCertificate:
      label: 服務證書
      placeholder: '例如：/etc/istio/ingressgateway-certs/tls.crt'
    privateKey:
      label: 服務私鑰
      placeholder: '例如: /etc/istio/ingressgateway-certs/tls.key'
    caCertificates:
      label: CA 證書
      placeholder: '例如: /etc/istio/ingressgateway-ca-certs/ca-chain.cert.pem'
    credentialName:
      label: 憑據名稱
      placeholder: '例如: myssl'
  port:
    number:
      label: 端口號
      placeholder: '例如: 80'
      error: '端口號必須設置'
    name:
      label: 端口名稱
      placeholder: '例如: http'
      error: '端口名稱必須設置'
    protocol:
      label: 端口協議
  hosts:
    label: Hosts
    add: Add Host
    placeholder: '例如: *'
    error: '"Hosts" is required.'
  servers:
    label: Servers
    add: 添加Server
    error: 請輸入至少一個server
    noServers: 沒有Servers
    removeServerLabel: 移除server

cruVirtualService:
  title:
    new: 添加虛擬服務
    edit: 編輯虛擬服務
    view: "虛擬服務: {name}"
  name:
    placeholder: '例如: myservice'
  hosts:
    label: 主機
    add: 添加主機
    error: 請選擇或輸入至少一個主機
  gateways:
    label: 網關
    add: 添加網關
    placeholder: '例如: mygateway'
    prompt: 選擇網關...
  http:
    routes:
      label: HTTP路由
      noRoutes: 沒有http路由
      addRouteLabel: 添加http路由
      removeRouteLabel: 刪除http路由
      moveUp: 向上移動
      moveDown: 向下移動
      timeout:
        label: 超時
        placeholder: '例如: 5s'
      faultInjection:
        abort:
          label: 故障注入中止
          httpStatus:
            label: HTTP 狀態碼
            placeholder: '例如: 400'
          percent:
            label: 百分比
            placeholder: '例如: 8'
        delay:
          label: 故障注入延遲
          fixedDelay:
            label: 固定延遲
            placeholder: '例如: 5s'
          percent:
            label: 百分比
            placeholder: '例如: 8'
      mirror:
        label: 監控
        host:
          label: Host
        subset:
          label: Subset
          placeholder: '例如: v2'
        port:
          label: Port
          placeholder: '例如: 8080 or myport'
      retries:
        label: 重試
        attempts:
          label: 重試次數
          placeholder: '例如: 3'
        perTryTimeout:
          label: 每次重試超時
          placeholder: '例如: 2s'
      redirect:
        label: 重定向
        uri:
          label: URI
          placeholder: '例如: /v1/bookRatings'
        authority:
          label: Authority
          placeholder: '例如: newratings.default.svc.cluster.local'
        error: 請不要同時配置目標地址和重定向。
      rewrite:
        label: 地址重寫
        uri:
          label: URI
          placeholder: '例如: /v1/bookRatings'
        authority:
          label: Authority
          placeholder: '例如: newratings.default.svc.cluster.local'
      destination:
        addDestinationLabel: 增加目標地址
        noDestinations: 沒有目標地址
        port:
          label: Port
          placeholder: '例如: 8080 or myport'
        weight:
          label: 權重
          placeholder: '例如: 50'
          error: 必須設置權重。
        subset:
          label: Subset
          placeholder: '例如: v1'
        host:
          label: Host
          error: 必須設置Host。
      matches:
        error: 請為匹配條件輸入至少一個鍵值對
        showMatch: 指定此路由的匹配規則
        addLabel: 添加其他匹配規則
        removeLabel: 刪除匹配規則
        noData: 沒有匹配規則
        addMatchLabel: 添加匹配條件
        noMatches: 沒有匹配條件
        port:
          label: Port
          placeholder: '例如: 8080'
        sourceLabels:
          label: 源標籤
          addActionLabel: 添加源標籤
        type:
          label: 匹配類型
          uri: URI
          authority: Authority
          method: Method
          scheme: Scheme
          headers: Headers
        key:
          label: 鍵
          placeholder: '例如: end-user'
        condition:
          label: 條件
          exact: 精確匹配
          prefix: 前綴匹配
          regex: 正則表達式匹配
        value:
          label: 值
          uri:
            exact: '例如: /ratings/v2/'
            prefix: '例如: /ratings'
            regex: '例如: /ratings.*'
          authority:
            exact: '例如: eu.bookinfo.com'
            prefix: '例如: eu'
            regex: '例如: ".*?[.]eu[.]bookinfo[.]com"'
          method:
            exact: '例如: GET'
            prefix: '例如: GET'
            regex: '例如: ^.*(GET|POST).*$'
          scheme:
            exact: '例如: http'
            prefix: '例如: http'
            regex: '例如: h.*'
          headers:
            exact: '例如: jason'
            prefix: '例如: jason'
            regex: '例如: ja.*'


validationsList:
  title: 驗證檢查
  detail: 當前{resourceType}的驗證檢查
  noPermission: 您沒有權限查看驗證。請聯繫您的叢集所有者，讓Kiali訪問您。
  table:
    path: 路徑
    severity: 嚴重程度
    message: 消息
  noData: 沒有發現問題
  noMatch: 沒有問題匹配當前搜索


dangerZone:
  header: 高級設置
  subtext: "通常情況下用戶不需要修改以下設置。請謹慎操作，不正確的值可能導致{appName}無法正常運行。修改默認設置後將以<b>粗體</b>顯示設定名。"
  show: 顯示
  hide: 隱藏
  description:
    'cacerts': '驗證ssl證書所需的CA證書，此CA證書僅適用於自簽名SSL證書。若SSL證書是權威CA機構所頒發，則要求刪除此CA證書。'
    'cluster-defaults': '在創建新叢集時覆蓋RKE默認值。'
    'engine-install-url': '默認的Docker引擎安裝URL(用於大多數Machine Drivers)。'
    'engine-iso-url': '默認OS安裝URL(用於Machine vSphere Drivers)。'
    'engine-newest-version': '當前Rancher Server支持的最新Docker版本，不支持的版本或比此Docker版本新的將被標記為未測試。'
    'engine-supported-range': '當前Rancher Server支持的Docker版本範圍，不滿足此範圍的Docker版本將在UI中標記為不受支持。'
    'ingress-ip-domain': '用於自動生成Ingress主機名的通配域名。<入口名>.<命名空間名>.<入口控制器的IP地址>將被新增到域名中。'
    'server-url': '默認的{appName} Server訪問地址，必須是HTTPS。叢集中的所有主機都必須能夠訪問此地址。'
    'system-default-registry': '用於RKE部署系統服務時鏡像的拉取，其他服務拉取鏡像不生效。'
    'ui-index': 'UI的HTML索引位置。'
    'ui-pl': '公司名稱專用標籤。'
    'telemetry-opt': '遙測報告設置。'
    'auth-user-info-max-age-seconds': '在執行身份驗證提供者組成員身份同步之前，用戶身份驗證令牌的最大期限。'
    'auth-user-info-resync-cron': '用於重新同步身份驗證提供者組成員關係的默認cron調度。'
    'cluster-template-enforcement': '非管理員只能通過預先批准的叢集模板啟動叢集。 '
    'auth-user-session-ttl-minutes': '用戶驗證會話上的自定義TTL(以分鐘為單位)。 '
    'rke-metadata-config': '配置RKE元數據刷新參數。 '

deleteEksCluster:
  title: "確定刪除叢集{clusterName}嗎?"
  help: 此叢集是通過臨時令牌創建的，請提供一個新的令牌來刪除它。
  updateKeys: Update Keys
  updatingKeys: Updating Keys
  deleteCluster: 刪除叢集
  deletingCluster: 叢集刪除中...
  accessKey:
    label: Access Key
    placeholder: Your AWS access key
  secretKey:
    label: Secret Key
    placeholder: Your AWS secret key
    provided: Provided
  sessionToken:
    label: "Session Token  <em class='text-muted'>Optional</em>"
    deleteLabel: Session Token
    placeholder: Your AWS session token
    provided: Provided
  error:
    accessKey: Access key必須填寫。
    secretKey: Secret key必須填寫。
    sessionToken: Session token必須填寫。

hpaPage:
  noMatch: 沒有匹配當前搜索的HPA
  noData: 沒有配置HPA規則
  notSupported: '叢集中autoscaling/v2beta2 API不可用。 '
  table:
    replicas:
      range: 副本範圍
      current: 副本
      desired: 期望
    lastScaleTime:
      label: 上次擴縮容時間
    target:
      label: 目標應用

editAccount:
  title: 編輯帳號
  form:
    name:
      label: 顯示名稱
      placeholder: '例如: John Smith'
    kind:
      label: 帳號類型
      user: 普通用戶
      admin: '管理員: 完全訪問管理所有叢集中的所有內容'
    description:
      label: 描述
      placeholder: '例如: John Smith的帳號'
    publicValue:
      label: 用戶名
    oldPassword:
      label: 當前密碼
    newPassword:
      label: 新密碼
    confirmPassword:
      label: 確認密碼
    identity:
      label: 標識

editApiKey:
  title:
    justCreated: API Key已創建
    editing: 編輯API Key
    new: 新增API Key
  accessKey: Access Key(用戶名)
  secretKey: Secret Key(密碼)
  basicAuth: "Access Key和Secret Key可以作為HTTP基本身份驗證的用戶名和密碼發送，以授權請求。您也可以將它們組合為Bearer Token:"
  token: Bearer Token
  scope: 作用叢集範圍
  scopeSelect:
    prompt: 未指定作用範圍
    helpText: '叢集範圍的令牌可用於直接與<a href="https://rancher.com/docs/rancher/v2.x/en/cluster-provisioning/rke-clusters/options/#authorized-cluster- endpoint" target="_blank" rel="nofollow noreferrer"授權叢集端點</a>配置的叢集API交互。 '
  ttl:
    label: 自動失效時間
    never: 永不過期
    day: 從現在開始，有效期1天
    month: 從現在開始，有效期1個月
    year: 從現在開始，有效期1年
  description:
    placeholder: "可選: 例如: 此密鑰由應用伺服器使用，用於容器部署。"
  saveWarning1: 請保存上面的資訊！這些資訊僅顯示一次。
  saveWarning2: 如果忘記了Secret Key，您需要重新創建新的API Key。
  noteOptional: 說明是可選項，以幫助您記住此密鑰將用於何種用途。

editCertificate:
  title: 編輯證書
  name:
    placeholder: '例如: Mydomain.com'
  description:
    placeholder: '例如: Mydomain.com的EV證書'
  noteKeyWriteOnly: "注意:Private Key部分為只寫(write only)因而顯示為空白。更新證書時您需要重新上傳Private Key，即便Private Key未發生變化"

editCluster:
  title:
    new: 新增叢集
    edit: 編輯叢集
  name:
    label: 名稱
    placeholder: '例如: Sandbox'
  description:
    label: 描述
    placeholder: '例如: 開發人員所共享的叢集'
  systemStacks:
    hr: 叢集選項
    title: 系統應用
    detail: 這些應用將會被自動部署到該叢集的System環境中。
    noData: 沒有應用將會被部署到系統環境中。
    add: 新增應用
    cancel: 取消新增系統應用
  modal:
    onCluster: "注意: 您正在嘗試刪除您當前環境所在的叢集。請在刪除該叢集之前，先選擇一個其他叢集的環境"

editContainer:
  title:
    vm: 編輯虛擬機
    container: 編輯容器
  name:
    placeholder: '例如: Myapp'
  description:
    placeholder: '例如: 我的應用'

editNodePool:
  title: '節點池污點（Taints）'

editHost:
  title: 編輯主機
  hostname:
    label: 主機名
    help: 由主機操作系統獲取
  customName:
    label: 自定義名稱
    placeholder: 例如:dev1
    help: 如果此處未設置，名稱將顯示為主機名
  description:
    label: 描述
    placeholder: '例如: 我的開發主機'
  labels:
    label: 標籤
  ips:
    label: 調度IP
    valueLabel: IP地址
    valuePlaceholder: '例如: 1.2.3.4'
    addActionLabel: 新增IP
    help: 如果設置，調度器將從中選擇一個IP地址並將發布的埠綁定到該地址。
  requireAny:
    label: 容器標籤需求
    help: 如果設置，容器必須具備設置的一個或者多個標籤才能夠被調度到該主機。如果僅設置Key而Value留空，具備相應Key的容器可以被調度到該主機而忽略Value的值。<code>io.rancher.container.system</code>標籤是運行系統容器所必須的。
    addActionLabel: 新增標籤需求

editService:
  title: 編輯服務

editStack:
  title: 編輯命名空間
  name:
    label: 名稱
    error: 命名空間名稱已被使用，請選擇一個新的命名空間名稱。
    placeholder: '例如: Myapp'
  project:
    label: 專案
    prompt: '選擇一個專案:'
  description:
    label: 描述
    placeholder: '例如: MyApp命名空間'
  resourceQuota:
    title: 資源配額
    detail: 設定命名空間整體可以使用的資源量
  group:
    label: 標籤
    placeholder: '例如: frontend，production'
    help: 逗號分隔的標籤列表，負載列表可以根據相應的標籤進行過濾。
autoInject:
    label: Istio sidecar自動注入。
    warning: 命名空間中的現有工作負載都需要重新部署，以利用sidecar自動注入。

editUser:
  title: 編輯用戶
  form:
    name:
      label: 顯示名稱
      placeholder: '例如: John Smith'
    username:
      label: 用戶名
    otherRoles:
      label: 移除角色
    password:
      label: 修改密碼
      new: 新密碼
      confirm: 確認密碼
      error: 密碼必須相同
      mustChangePassword:
        new: 要求用戶在首次登入時更改密碼
        edit: 要求用戶在下次登入時更改密碼

envCatalog:
  header: 管理應用商店
  subtext: '可以在這裡定義自定義的應用商店源，該應用商店僅對當前環境的用戶可見。全域應用商店對所有環境可見，僅能由管理員在管理設置中修改。應用商店需要一個唯一的名稱並且支持<code>git clone</code>的URL地址(參考 <a href="https://git-scm.com/docs/git-clone#_git_urls_a_id_urls_a" target="_blank" rel="nofollow noopener noreferrer">文檔</a>以獲取更多資訊)'
  addActionLabel: 新增應用商店

moveNamespace:
  title: |
    移動{count, plural,
    =1 {命名空間: {name}}
    other{#個命名空間: }}
  to: "到目標專案: "
  actionLabel: 移動

stackHeader:
  title: '命名空間: {name}'
  outputs: 輸出

stacksPage:
  table:
    standalone: 獨立容器
    endpoints: 終端
    scale: Pod副本數
    instanceState: 容器狀態
    instanceStateWithIcon: 狀態

featureFlags:
  warningHeader: '您應該謹慎地啟用這些功能，它們應該被視為可能會給您的系統帶來問題的beta功能'
  features:
   istioVirtualServiceUi: "啟用此功能將為Istio公開額外的UI頁面"
   unsupportedStorageDrivers: "啟用此功能將為持久捲和存儲類公開不受支持的存儲驅動程序選項。"
  table:
    description: 描述
    name: 名稱
    noData: There are no features
    noMatch: 沒有與當前搜索匹配的功能
    restart: 重啟
    state: 狀態

formatIp:
  noIp: 無

formBalancerConfig:
  title: 自定義設定文件
  detail: 提供自定義設定文件，這個設定將會被應用到{appName}自動生產的設定上方。
  custom: |
    請參考<a href="https://cbonte.github.io/haproxy-dconv/1.6/configuration.html" target="_blank" rel="nofollow noopener noreferrer">haproxy文檔</a>了解更多關於該設定文件的參數。當重寫<code>backend</code>或包括目標容器IP的某行時，請使用<code>$IP</code>來代替IP地址，{appName}將會自動轉換成相應的設定。
  config:
    prompt: 自定義haproxy.cfg內容

formNodeAffinity:
  addRuleLabel: 新增節點選擇規則
  noRules: 沒有節點選擇器
  removeRuleLabel: 刪除節點選擇規則

formMembersGlobalAccess:
  title: 成員
  detail: 選擇可以查看此應用程式的成員
  table:
    name: 名稱
    type: 成員類型
    accessType: 訪問類型
    noData: 當前沒有成員
    noMatch: 沒有成員匹配當前搜索
    prompt: 選擇值...


formNodeRequirement:
  label: 規則
  addRuleLabel: 新增規則
  noRules: 沒有規則
  key:
    label: 鍵
    placeholder: '例如: hostname'
  operator:
    label: 操作符
  values:
    label: 值
    placeholder: '用逗號分割，例如: node1,node2'

formIngress:
  hostMode:
    automatic: 自動生成<code>.{domain}</code>後綴域名
    existing: 繼續使用當前主機名<code>{domain}</code>
    manual: 自定義域名
    default: 默認後端
    defaultDisabled: Ingress控制器不支持默認後端
  defaultBackend:
    label: 將此規則設置為默認後端
    mark: 默認後端
  label: 規則
  addRuleLabel: 新增規則
  removeRuleLabel: 移除此規則
  noRules: 沒有規則
  host:
    label: 訪問域名
    placeholder: "例如: example.com"
  backendType:
    label: 後端類型
  mode:
    workload: 工作負載
    service: DNS記錄

formIngressBackends:
  label: 目標後端
  noRules: 沒有後端
  warning: 如果目標後端是一個服務，您只可以使用該服務所暴露的埠。您可以在服務發現頁找到該服務，然後通過編輯YAML的方式新增所需要的埠。
  addServiceLabel: 服務
  addWorkloadLabel: 工作負載
  service:
    label: 服務
  workload:
    label: 工作負載
  targetPort:
    label: 容器埠
    placeholder: '例如: 80'
    prompt: 選擇端口 ...
  path:
    label: '訪問路徑（如需使用後端重寫功能,請查看下方標籤/注釋）'
    placeholder: '例如: /foo'
  target: '服務/工作負載'

formBalancerListeners:
  label: 監聽器與目標規則
  detail: 設定負載均衡，使其將請求轉發到目標地址。
  status: |
    {count, plural,
    =0{無規則}
    =1{#條規則}
    other{#條規則}
    }
  noRules: 沒有埠
  addPortLabel: 新增一個監聽埠
  removePortLabel: 刪除這個監聽埠
  showBackendLabel: "自定義backend名稱"
  access:
    label: 訪問
    public: 公開
    internal: 內部
  protocol:
    label: 協定
  sourceIp:
    label: 主機IP
    placeholder: "例如: 1.2.3.4; Default: All"
  sourcePort:
    label: 監聽埠
    placeholder: '例如: 80'
  help: "主機及路徑規則將根據顯示的順序自上而下進行匹配，後端默認將隨機命名。要自定義生成的後端，提供一個名稱並在您自定義的haproxy.cfg文件中引用該名稱"

formBalancerRules:
  label: 目標規則
  detail: 根據主機、 埠、 路徑或IP地址映射請求到不同的目標。
  status: |
    {count, plural,
    =0{無規則}
    =1{#條規則}
    other{#條規則}
    }
  noRules: 無規則
  addServiceLabel: 新增服務
  addInstanceLabel: 新增容器
  addSelectorLabel: 新增選擇器
  addTargetLabel: 新增規則
  access:
    label: 訪問
    public: 公開
    internal: 內部
  protocol:
    label: 協定
  sourceIp:
    label: 主機IP
    placeholder: "例如: 1.2.3.4， 默認: 所有"
  sourcePort:
    label: 監聽埠
    placeholder: '例如: 80'
  path:
    label: 路徑
    placeholder: '例如: /foo'
  hostname:
    label: 請求頭資訊
    placeholder: '例如: example.com'
  backendName:
    label: 後端
    placeholder: '例如: webapp'
  targetPort:
    label: 埠
    placeholder: '例如: 80'
  priority:
    label: 優先級
  target: 目標
  selector:
    label: 選擇器
    placeholder: '例如: foo=bar'

formCommand:
  title: 命令
  detail: 設定容器啟動時將運行的可執行文件。
  command:
    label: 命令(CMD)
    placeholder: '例如: /usr/sbin/httpd -f httpd.conf'
  entryPoint:
    label: 入口(Entrypoint)
    placeholder: '例如: /bin/sh'
  environment:
    label: 環境標籤
  workingDir:
    label: 工作目錄
    placeholder: '例如: /myapp'
  uid:
    label: '用戶UID'
    placeholder: '例如: 501'
  console:
    label: 控制台
    both: '交互&amp;TTY終端<span class="text-muted">(-i -t)</span>'
    interactive: '交互<span class="text-muted">(-i)</span>'
    terminal: 'TTY終端<span class="text-muted">(-t)</span>'
    none: 無
  autoRestart:
    label: 自動重啟
    no: 從不
    onFailure: '失敗時<span class="text-muted">(非0退出程式)</span>總是'
    onFailureCondPrefix: 失敗時，最多
    onFailureCondSuffix: |
      {limit, plural,
      =1{次}
      other{次}
      }
    always: 總是
  terminationGracePeriodSeconds:
    label: 停止超時
    helpText: 容器將在強制終止之前自行停止。
  fsgid:
    label: 文件系統組
    placeholder: '例如: 501'


formContainerLinks:
  title: 連結
  detail: 定義此容器和其他容器的關聯關係
  addActionLabel: 新增連結
  name:
    label: 目標容器
  alias:
    label: 名稱
    placeholder: '例如: database'
  noData: 沒有容器連結
  noMatch: 沒有匹配當前搜索的連結

formCount:
  label: 數量

formDisks:
  addDiskLabel: 添加磁盤
  addRootDiskLabel: 添加根磁盤
  name:
    rootDisk: 根磁盤
    label: 名稱
    placeholder: '例如: data'
  size:
    label: 磁盤大小
    rootDisk: 由系統鏡像決定
  readIops:
    label: 讀取IOPS
    placeholder: '例如: 1000'
  writeIops:
    label: 寫入IOPS
    placeholder: '例如: 1000'
  driver:
    label: 驅動

formEngineOpts:
  title: 引擎選項
  detail: 自定義Docker守護進程的設定
  engineInstallUrl:
    label: Docker安裝URL
    placeholder: '例如: http://get.docker.com'
    recommended: 推薦
    latest: 最新
  engineStorageDriver:
    label: 儲存驅動
    placeholder: '例如: overlay'
  engineOpts:
    label: 引擎選項
    addActionLabel: 新增引擎選項
    keyPlaceholder: '例如: log-driver'
    valuePlaceholder: '例如: syslog'
  engineLabels:
    label: 引擎標籤
    addActionLabel: 新增引擎標籤
    keyLabel: 標籤
  engineEnv:
    label: 引擎環境
    addActionLabel: 新增環境變數
    keyLabel: 變數
    keyPlaceholder: '例如: HTTP_PROXY'
    valuePlaceholder: '例如: http://your-proxy:8080'
  engineInsecureRegistry:
    label: 非安全鏡像庫
    addActionLabel: 新增非安全鏡像庫
    valueLabel: 鏡像庫域名
    valuePlaceholder: '例如: registry.example.com'
  engineRegistryMirror:
    label: 鏡像庫鏡像
    addActionLabel: 新增鏡像庫鏡像
    valueLabel: 鏡像URL
    valuePlaceholder: '例如: https://my-mirror.example.com:5000'

formResourceQuota:
  addQuotaLabel: 新增配額
  table:
    type:
      label: 資源類型
    value:
      label: 限制
      placeholder: '例如: 10'
      milliCpuPlaceholder: '例如: 500'
      memoryPlaceholder: '例如: 1Gi'
    resources:
      label: 專案資源可用性
      reserved: 其他命名空間
      namespace: 當前命名空間
      available: 可用
      max: 總共
    projectLimit:
      label: 專案限制
      placeholder: '例如: 50'
      milliCpuPlaceholder: '例如: 2000'
      memoryPlaceholder: '例如: 2048'
    namespaceLimit:
      label: 命名空間默認限制
      placeholder: '例如: 10'
      milliCpuPlaceholder: '例如: 500'
      memoryPlaceholder: '例如: 1024'
    noData: 沒有定義資源配額
  errors:
    projectLimitRequired: "專案中{resource}必須設置"
    nsDefaultLimitRequired: 命令空間中{resource}默認限制必需設置。
    limitRequired: '{resource}需要設置。'
    invalidLimit: '{resource}配額總共{total}，已使用{used}。該已使用應小於或等於{left}。'
  resources:
    configMaps: Config Maps
    limitsCpu: CPU限制
    limitsMemory: 記憶體限制
    persistentVolumeClaims: Persistent Volume Claims
    pods: Pods
    replicationControllers: Replication Controllers
    requestsCpu: CPU預留
    requestsMemory: 記憶體保留
    requestsStorage: 儲存預留
    secrets: 密文
    services: 服務
    servicesLoadBalancers: 服務負載均衡器
    servicesNodePorts: 服務節點埠

formEnvVar:
  title: 環境變數
  detail: 在創建時新增的環境變數。
  noData: 沒有環境變數
  status: |
    {count, plural,
    =0{無變數}
    =1{#個變數}
    other{#個變數}
    }
  labels:
    key: 鍵
    value: 值

formGlobalRoles:
  title: 全域權限
  description: 控制用戶管理整個{appName}安裝的訪問權限。
  loginError: 用戶沒有登錄權限。 Administrator, Standard User或User-Base提供登錄權限。
  mode:
    admin:
      label: 管理員
      detail: 管理員完全控制所有叢集中的全部安裝和所有資源
    user:
      label: 標準用戶
      detail: 標準用戶可以創建新的叢集並管理他們已被授權訪問的叢集和專案。
    userBase:
      label: User-Base
      detail: User-Base 用戶只有登錄訪問權限。
    userCreated:
      label: 自定義
      detail: 非Rancher創建的角色。
      noDescription: 沒有提供描述。
    custom:
      label: 自定義
      detail: 為這個用戶選擇獨立的權限
role:
    clusters-create:
      label: 創建新的叢集
      detail: 允許用戶創建新的叢集並成為它們的所有者，標準用戶默認具有此權限。
    clustertemplates-create:
      label: 創建新的RKE叢集模板
      detail: 允許用戶創建新的RKE叢集模板並成為它們的所有者。
    authn-manage:
      label: 配置身份驗證
      detail: 允許用戶啟用，配置和禁用所有身份驗證程序設置。
    catalogs-manage:
      label: 配置應用商店
      detail: 允許用戶添加，編輯和刪除應用商店。
    clusters-manage:
      label: 管理所有叢集
      detail: 允許用戶管理全部叢集，即使這個用戶不是被管理叢集中的成員也可以管理。
    clusterscans-manage:
      label: 管理CIS叢集掃描
      detail: 允許用戶啟動新的並管理CIS叢集掃描。
    kontainerdrivers-manage:
      label: 創建新的叢集驅動程序
      detail: 允許用戶創建新的叢集驅動程序並成為它們的所有者。
    features-manage:
      label: 配置功能標誌
      detail: 允許用戶通過特性標誌設置啟用和禁用自定義特性。
    nodedrivers-manage:
      label: 配置主機驅動
      detail: 允許用戶啟用，配置和移除所有主機驅動設置。
    nodetemplates-manage:
      label: 管理主機模板
      detail: 允許用戶配置，編輯和刪除主機模板。
    roles-manage:
      label: 管理角色
      detail: 允許用戶配置，編輯和刪除角色。
    settings-manage:
      label: 管理設置
      detail: 允許用戶管理Rancher設置。
    users-manage:
      label: 管理用戶
      detail: 允許用戶為所有用戶創建，刪除和設置密碼。
    catalogs-use:
      label: 使用應用商店
      detail: 允許用戶查看和應用商店中的模板。標準用戶默認具有此權限。
    nodetemplates-use:
      label: 使用主機模板
      detail: 允許用戶使用現有的主機模板部署新的主機。
    view-rancher-metrics:
      label: 查看Rancher指標
      detail: 允許用戶通過API查看指標。
    base:
      label: 登入訪問

formMembers:
  owner: '{type} 所有者'
  members:
    user: 用戶
    group: 組
    serviceaccount: 服務帳號
    labelText: 成員
    addMember: 新增成員
    addUser: 新增用戶
    noAddUser: 您是唯一的活動註冊用戶。
    addGroup: 新增組
    addServiceAccount: 新增服務帳戶
    multipleRoles: 多個角色
    customRoles: 自定義角色
    kind:
      label: 類型
    name:
      label: 名稱
    role:
      label: 角色
    errors:
      nameReq: 名稱(必填)
      nameInExists: 名稱已經存在，請使用新的專案名稱。
      memberNameReq: 必須設置成員名稱
      memberRoleReq: 必須設置成員角色
      ownerReq: 必須至少有一個具有所有者角色的成員。

formScopedRoles:
  title: '{type}權限'
  description: '控制用戶對{type}的訪問權限'
  mode:
    admin:
      label: 所有者
      detail: 所有者可以完全控制{type}及內部的所有資源。
    user:
      label: 成員
      detail: 成員可以管理{type}內部的資源，但不能更改{type}本身。
    custom:
      label: 自定義
      detail: 為用戶選擇單個角色
    readOnly:
      label: 唯讀
      detail: 成員僅可以查看{type}中的資源，但不能更改資源和{type}本身。
    userDef:
      detail: 用戶定義的角色
    role:
      read-only:
        label: 唯讀
        detail: 允許看到一切，但不會改變任何東西。

formShareMember:
  add: '添加成員'
  public: '轉換為公有 (只讀)'
  helpText: '在分配所有者時，用戶必須具有<a href="/g/security/roles">Create Cluster Template</a>全局角色，以便創建新的修訂。這些權限可以由管理員授予。 '
  table:
    headers:
      name: '名稱'
      accessType: '訪問類型'
    noMatch: '沒有成員匹配您的搜索'
    noData: '您沒有與任何人共享此叢集模板。 '

shareMemberRow:
  table:
    public:
      name: '公有 (all members & groups)'
      accessType: '只讀'
  accessType:
    owner: '所有者'
    member: '成員'
    'read-only': '只讀用戶'

formHealthCheck:
  title: 健康檢查
  detail: 周期性向容器發出請求，以檢測其健康狀態。默認設置下，readiness和liveness使用相同的設定參數。對於應用初始化較長的容器，需要增加就緒檢測時間。
  readiness: 就緒狀態檢查(readiness)
  liveness: 存活狀態檢查(liveness)
  separateLivenessCheck: '單獨設定存活狀態(liveness)檢查'
  combinedLivenessCheck: 使用相同的就緒狀態(readiness)與存活狀態(liveness)設定
  checkType:
    none: 無
    tcp: TCP埠檢查
    http: HTTP請求狀態檢查(2xx或3xx)
    https: HTTPS請求狀態檢查(2xx或3xx)
    command: 容器中進程退出狀態碼檢查(0)
  command:
    label: 命令
    placeholder: '例如: cat /tmp/health'
  path:
    label: 請求路徑
    placeholder: '例如: /health'
  httpHeaders:
    label: 其他的HTTP Headers
    addActionLabel: 新增Headers
    keyLabel: Http頭字段
    keyPlaceholder: '例如: 用戶代理'
    valuePlaceholder: '例如: 健康檢查'
  host:
    label: 主機 Headers
    placeholder: '例如: example.com'
  port:
    label: 容器埠
    placeholder: '例如: 80'
  initialDelaySeconds:
    label: 運行多少時間後開始檢測
  reinitializingTimeout:
    label: 重新檢查時間
  periodSeconds:
    label: 檢查間隔
  timeoutSeconds:
    label: 檢查超時
  successThreshold:
    label: 健康閾值
    unit: 成功
  failureThreshold:
    label: 不健康閾值
    unit: 失敗

formKeyToPath:
  addAction: 新增專案
  header: 專案
  default: 所有鍵
  specific: 選擇特定的鍵
  key:
    label: 鍵
    placeholder: "例如: username"
  path:
    label: 路徑
    placeholder: "例如: my-group/my-username"
  mode:
    label: 模式
    placeholder: "例如: 400"

formMatchExpressions:
  addAction: 添加表達式
  key:
    label: 鍵
    placeholder: "例如: region"
  value:
    label: 值
    placeholder: "例如: us,eu,ap"

formKeyValue:
  addAction: 新增鍵值對
  key:
    label: 鍵
    placeholder: 鍵
  separator: "="
  value:
    label: 值
    placeholder: 值
  protip: '高級技巧: 在鍵(Key)輸入欄中貼上一行或多行的key=value鍵值對能夠批量輸入。'

formImage:
  label: Docker鏡像
  container:
    placeholder: "例如: ubuntu:xenial"

formNameDescription:
  name:
    label: 名稱
    placeholder: 名稱
  description:
    label: 描述
    placeholder: 描述
    expand: 新增描述

formNetwork:
  title: 網路
  detail: 設置容器的網路和DNS選項
  netMode:
    label: 使用主機網路
    disable: "否"
    enable: "是"
  dnsPolicy:
    label: DNS策略
    clusterFirstWithHostNet: "主機網路優先"
    clusterFirst: "叢集優先"
  dnsConfig:
    nameservers:
      label: DNS伺服器IP地址
      addActionLabel: 新增DNS伺服器
      placeholder: "例如: 192.168.2.1"
    options:
      label: DNS解析選項
      addActionLabel: 新增選項
      name:
        label: 名稱
        placeholder: "例如: ndots"
      value:
        label: 值
        placeholder: "例如: 5"
    searches:
      label: DNS搜索域
      placeholder: "例如: example.com"
      addActionLabel: 新增搜索域
  container:
    label: 容器
  requestedIp:
    label: 請求IP
    placeholder: '例如: 10.42.2.24'
    help: 從10.42.0.0/16段中請求一個指定的IP地址，如果此IP地址已經被使用則會分配一個隨機IP。
  retainIp:
    label: 保持IP
    reuse: 當升級或替換不健康的容器實例時保持IP地址不變。
  dns:
    label: 服務發現
    enable: 啟用服務發現並使用本地緩存DNS伺服器。
    disable: 禁用服務發現並使用外部遠端DNS伺服器。
  hostname:
    label: 主機名
    placeholder: '例如: web'
    dockerId: 使用Docker容器ID
    hostName: 使用主機的主機名
    containerName: 使用容器名稱
    custom: 設置主機名
  domainName:
    label: 域名
    placeholder: '例如: example.com'
  resolvingServers:
    label: 解析伺服器
    addActionLabel: 新增伺服器
    placeholder: '例如: 114.114.114.114'
  searchDomains:
    label: 搜索域
    placeholder: '例如: prod.example.com'
    addActionLabel: 新增搜索域
  subdomain:
    label: 子域名
    placeholder: '例如: foo'
  hostAlias:
    addActionLabel: 新增主機別名
    label: 主機別名(/etc/hosts記錄)
    host:
      label: 主機名
      placeholder: '例如: database'
    ip:
      label: IP地址
      placeholder: '例如: 192.168.0.1'

formCustomMetrics:
  title: 自定義指標
  detail: 配置自定義指標埠，監控系統將通過這些埠採集自定義指標。
  port:
    label: 容器埠
    placeholder: "例如: 8080"
  path:
    label: Path
    placeholder: "例如: /metrics"
  protocol:
    label: 協議
  noPorts: 沒有自定義指標
  addActionLabel: 添加自定義指標

formServicePorts:
  header: 埠映射
  addAction: 添加埠
  noPorts: 此服務沒有埠映射。
  name:
    label: 埠名稱
    placeholder: "例如: myport"
  port:
    label: 發布服務埠
    placeholder: "例如: 8088"
  protocol:
    label: 協議
  targetPort:
    label: 目標埠
    placeholder: "例如: 80"
    default: "與服務埠相同"
  nodePort:
    label: 主機埠
    placeholder: "例如: 30000"
formPorts:
  header: 埠映射
  addAction: 新增規則
  hostPortWarning: 'Host Port模式不支持Windows節點。了解更多關於Windows在Kubernetes中的<a href="https://kubernetes.io/docs/setup/production-environment/windows/intro-windows-in-kubernetes/#limitations" target="_blank">支持限制</a>。 '
  warning: "這個工作負載不是由{appName}或{appName} API創建的,{appName}不會自動為埠映射創建相關服務。"
  kind:
    label: 網路模式
    NodePort: NodePort(所有主機埠均可訪問)
    HostPort: HostPort(僅Pod所在主機埠可訪問)
    ClusterIP: 叢集IP(叢集內部訪問)
    LoadBalancer: L4層負載均衡器(對接公有雲負載均衡服務)
    LoadBalancerDisbaled: 'Layer-4 Load Balancer (disabled)'
    HostPortDisbaled: 'HostPort(禁用)'
  sourcePort:
    label: 主機監聽埠
    placeholder: '例如: 80'
    ipPlaceholder: '例如: 80或19.82.2.24:80'
    clusterIpDefault: '與容器埠相同'
  nodePort:
    placeholder: '默認埠範圍30000-32768，例如: 30000'
    customPortRangePlaceholder: "埠範圍{range}，例如: {port}"
  containerPort:
    label: 容器埠
    placeholder: "例如: 8080"
  protocol:
    label: 協定
  name:
    label: 名稱
    placeholder: '例如: backend'
  dnsName:
    label: DNS名稱
    placeholder: '例如: example'
  noPorts: 當前Pod沒有映射埠
  error:
    privateRequired: 每條映射規則必須設置容器埠。
    publicRequired: 如果指定了主機IP，則需要源埠。
    hostPort:
      sourcePortRequired: 對於運行Pod的主機，必須始終源埠。
    loadBalancer:
      sourcePortRequired: 每條規則必須設置源埠。
    mixedIpPort: "Port{ip}:{port}/{proto}有超過一條映射規則。"
    mixedPort: "Port{port}/{proto}有超過一條映射規則。"
  showAdvanced: 顯示埠命名選項

formScale:
  label: 類型
  showAdvanced: 更多選項
  scaleMode:
    deploymentPrefix: "部署"
    replicationControllerPrefix: "複製控制器"
    replicaSetPrefix: "副本集"
    statefulSetPrefix: "有狀態(StatefulSet)部署"
    scaleSuffix: |
      {scale, plural,
      =1{個Pod}
      other{個Pods}
      }
    daemonSet: "每台主機部署1個Pod(DaemonSet)"
    cronJob: "Cron定時運行"
    job: Job
    sidekickInactive: "Sidecar: 將容器新增到現有工作負載"
    sidekickPrefix: "Sidecar: 新增容器到"
    sidekickSuffix: ""

formScheduling:
  title: 主機調度
  detail: 設定Pod對應的主機調度規則。
  status: |
    {count, plural,
    =0{無規則}
    =1{#條規則}
    other{#條規則}
    }
  canRequestHost:
    vm: 在指定主機上運行<b>所有</b>虛擬機
    containers: 指定主機運行<b>所有Pods</b>
  runSpecific: 在指定主機上運行此Pod
  noRules: 沒有設定規則
  noToleration: 未設定節點污點
  autoRun: "在匹配調度規則的每個主機上自動運行"
  autoPick:
    vm: "為每一個虛擬機自動選擇符合調度規則的主機"
    container: "為每一個Pod自動選擇符合調度規則的主機"
    host: "自動選擇符合調度規則的主機"
  addRule: 新增規則
  addCustom: 新增自定義規則
  condition: 條件
  field: 字段
  key: 標籤鍵
  value: 標籤值
  operator: 操作符
  effect: 效果
  time: 時間
  toleration:
    title: 調度容忍
    add: 增加調度容忍
    workloadTitle: "{workload}Pod的容忍"
  scaling:
    minMaxDetail: 如果設置，用戶將無法通過介面或API請求使容器數量低於最小數量或超過最大數量。
    incrementDetail: 如果設置，容器數量必須是它的倍數。
    hostMaxDetail: 如果設置，容器將最多被運行在這個數量的主機上。
  scaleMin: 最小數量
  scaleMax: 最大數量
  scaleIncrement: 伸縮增量
  hostMax: 最大主機數
  perHost: 每個主機
  priority:
    label: 優先級等級
    placeholder: '例如: 3'
  priorityClassName:
    label: 優先級顯示名稱
    placeholder: '例如: 高'
  scheduler:
    label: 調度
    placeholder: '例如: MyScheduler'
  nodeSelector:
    requireAll: "必須 "
    requireAny: "最好"
    preferred: "首選"
    operator:
      lt: '<'
      le: |
        &le;
      eq: '='
      ne: |
        &ne;
      gt: '>'
      ge: |
        &ge;
      in: '在列表中'
      notIn: '不在列表中'
      exists: '已設置'
      notExists: '未設置'
    multiple:
      placeholder: '例如: foo，bar，baz'
    custom:
      placeholder: '例如: foo>42 && bar != baz'

formSources:
  title: 來自其他源的環境變數
  detail: 來自其他源的環境變數允許您將密碼、密鑰或其他資訊注入需要它們的容器中。
  noData: 沒有來自其他源的環境變數
  noMatch: 沒有匹配當前搜索的來自其他源的環境變數
  addLabel: 新增源
  type:
    label: 類型
  source:
    label: 源
  prefixOrKey:
    label: 鍵
  prefix:
    label: 前綴或別名
  field:
    placeholder: "例如: spec.nodeName"
  resource:
    placeholder: "例如: requests.cpu"
  container:
    placeholder: '例如: my-container'

formSecurity:
  title: '安全/主機設置'
  detail: 授予或限制容器影響所運行主機的能力
  pullImage:
    label: 鏡像拉取策略
    always: 總是拉取
    ifNotPresent: 不存在則拉取
  privileged:
    label: 特權模式
    disable: "否"
    enable: "是: 容器具有所有主機訪問權限"
  allowPrivilegeEscalation:
    label: 提升特權
    disable: "否"
    enable: "是: 容器可以獲得比其父進程更多的特權"
  hostIPC:
    label: 使用主機的IPC命名空間
  runAsNonRoot:
    label: 以非root用戶身份運行
    disable: "否"
    enable: "是: 容器必須以非root用戶身份運行"
  readOnlyRootFilesystem:
    label: 唯讀根文件系統
    disable: "否"
    enable: "是: 容器有一個唯讀的根文件系統"
  hostPID:
    label: 使用主機的PID命名空間
  memoryLimit:
    label: 記憶體限制
    unlimited: 無限制
    set: 限制為
  cpuLimit:
    label: CPU限制
    unlimited: 無限制
    set: 限制為
    unit: milli CPUs
  swapLimit:
    label: 交換記憶體
    unlimited: 無限制
    set: 限制為
    default: 限制為兩倍物理記憶體
    none: 不允許使用交換記憶體
  swappiness:
    label: Swappiness
    default: 使用主機的默認值
    none: 最小
    set: 自定義(1-100)
  cpuPinning:
    label: CPU綁定
    placeholder: "例如: 0,1,3  默認: All"
  shares:
    label: CPU份額
    placeholder: '例如: 1024'
  capabilities:
    add: 增加核心功能
    drop: 移除核心功能
    helpBlock:
      text: 核心能力能夠對容器所擁有的超級用戶權限進行更細粒度的控制，
      link: 更多資訊
  deviceBinding:
    label: 設備綁定
    addActionLabel: 新增綁定
    pathHost:
      label: 主機內路徑
      placeholder: '例如: /dev/sdc'
    pathContainer:
      label: 容器內路徑
      placeholder: '例如: /dev/xsdc'
    permissions:
      label: 權限
  memoryReservation:
    label: 記憶體預留
    placeholder: '例如: 128'
  milliCpuReservation:
    label: CPU預留
    placeholder: '例如: 1000'
    unit: milli CPUs
  gpuReservation:
    label: NVIDIA GPU預留
    placeholder: '例如: 1'
    unit: GPUs
  isolation:
    label: 隔離
    default: 默認(容器)
    hyperv: HyperV(虛擬機)

formSslTermination:
  title: SSL/TLS證書
  detail: '設定用於埠加密的SSL/TSL證書。'
  defaultCertificate:
    prompt: '選擇一個證書...'
  default:
    label: 使用默認的ingress controller證書
    noHosts: 請提供至少一個主機給默認證書
  custom:
    label: 選擇一個證書
    required: 請選擇一個證書
  alternateCertificate:
    prompt: '選擇一個證書...'
  certificate: 證書
  alternateCerts: 備選證書
  addAlternate: 新增備選證書
  noCertificates: 沒有可用的證書。
  noCertificatesConfiged: 沒有證書
  wildcardCert: 請提供至少一個主機，因為證書{name}是一個通配符證書。
  noAlternateCertificates: 沒有其他可用的證書。
  hosts: 主機
  noHosts: 沒有主機
  host:
    label: 主機
    placeholder: '例如: example.com'
  addHostLabel: 新增主機
  helpBlock: |
    "注意: 一些舊的SSL/TLS客戶的不支持<a href="https://en.wikipedia.org/wiki/Server_Name_Indication" target="_blank">Server Name Indication(SNI)</a> 功能，對於這些客戶端將只提供主證書。對於支持SNI功能的現代客戶端將根據匹配結果從備選證書列表中選擇一個合適的證書"
  notNeeded: 沒有設定了有效的目標規則的SSL/TLS的監聽埠。
  removeCertLabel: 刪除此證書
  addCertLabel: 新增證書

formNamespace:
  label:
    reuse: 命名空間
    create: 命名空間
    default: 默認命名空間
  toggle:
    simple: 自定義
    reuse: 使用現有的名稱空間
    create: 創建新的命名空間
  reuse:
    prompt: 選擇一個命名空間...
  create:
    placeholder: '例如: Myapp'
  errors:
    noneChosen: 您必須選擇一個命名空間。
    validation: "命名空間: {error}"

formUserData:
  placeholder: "例如: 容器的設定資訊"
  isVmPlaceholder: "例如: 虛擬機的設定資訊"
formLabelsAnnotations:
  title: '標籤/註釋'
  detail: '用於調度決策的鍵值對。後端重寫請配置註釋: 鍵: nginx.ingress.kubernetes.io/rewrite-target，值: /。 '
formRelatedWorkloads:
  title: 相關的工作負載
  detail: 正在使用它的工作負載
  nodata: 沒有相關的工作負載
formNodeTaints:
  title: 污點（Taints）
  detail: 污點標記的節點不接受未配置容忍（tolerate）的Pod調度。
  addAction: 添加污點（Taint）
  protip: 必須是唯一的鍵值對
  key:
    label: 鍵
    placeholder: '例如: foo'
  value:
    label: 值
    placeholder: '例如: bar'
  effect:
    label: 影響

formUserLabels:
  title: 標籤
  detail: 標籤是可用於注釋容器並進行調度決策的鍵值對。
  nodeDetail: 鍵/值對形式的標籤將應用於主機上，用於容器的調度決策。
  addAction: 新增標籤
  key:
    label: 鍵
    placeholder: '例如: foo'
  separator: "="
  value:
    label: 值
    placeholder: '例如: bar'
  protip: "高級技巧: 貼上一行或多行的key=value鍵值對能夠批量輸入。"

formAccessModes:
  label: 訪問模式
  accessRWO: 單主機讀寫
  accessROX: 多主機唯讀
  accessRWX: 多主機讀寫

formAnnotations:
  addActionLabel: 新增註釋
  title: 注釋
  detail: 設定容器的注釋(鍵/值元數據)。
  errors:
    invalidJSON: JSON注釋格式無效。
    topLevelValueInvalid: JSON注釋頂級值必須是對象。

formAuthCloudCredential:
  add: Add New
  label: cloud credential
  selectCreds:
    prompt: 選擇cloud credential


formJobConfig:
  title: Job設定
  detail: 設定Job需要的參數。
  times: |
    {count, plural,
      =1{Time}
      other{Times}
    }
  seconds: |
    {count, plural,
      =1{Second}
      other{Seconds}
    }
  completions:
    label: 完成
    detail: 成功運行Job的Pod的數量。
  parallelism:
    label: Parallelism
    detail: Job在給定時間內應運行的最大Pod數。
  backoffLimit:
    label: Back Off Limit
    detail: 標記此作業失敗之前的重試次數。
  successfulJobsHistoryLimit:
    label: 歷史成功Jobs限制
    detail: 要保留多少個成功完成的JOB。
  failedJobsHistoryLimit:
    label: 歷史失敗Jobs限制
    detail: 要保留的未完成JOB的數量。
  activeDeadlineSeconds:
    label: 停止延遲時間
    detail: 在系統嘗試終止Job之前,job可能處於活動狀態的持續時間。
  suspend:
    label: 暫停

formUpgrade:
  title: 縮放/升級策略
  detail: 設定升級過程中替換Pod的策略。
  strategy:
    label: 升級策略
    orderedReady: 嚴格按順序更新並等待準備就緒
    parallel: 啟動所有新Pod和停止所有舊Pod並行執行
    onDelete: 僅當手動刪除舊Pod時才啟動升級新Pod
    recreate: 刪除所有Pod，然後重新開始
    rollingUpdate: 滾動更新
    startFirst: '滾動: 先啟動新Pod，再停止舊Pod'
    stopFirst: '滾動: 先停止舊Pod，再啟動新Pod'
    custom: 自定義
    batchSize:
      label: 批量大小
      detail: Pod將批量啟動或停止
    maxSurge:
      label: 最大浪涌
      detail: 在任何給定時間內允許超出所需規模的最大Pod數量。
    maxUnavailable:
      label: 最大不可用
      detail: 在任意給定時間最大不可用的Pod數量。
    minReadySeconds:
      label: 最短準備時間
      detail: 在Pod被視為可用之前，Pod中的容器需至少運行多長時間。
    progressDeadlineSeconds:
      label: 進度截止時間
      detail: 將部署標記為停滯狀態之前需要等待多久時間才能看到進度。


formValueArray:
  addActionLabel: 新增值
  valueLabel: 值
  valuePlaceholder: 值
  noData: 沒有數據
  protip: '高級技巧: 在任意輸入欄中貼上一行或多行的value能夠批量輸入。'

formVersions:
  experimental: "(實驗)"
  dotx: "Latest {minor} (允許補丁版本升級)"
  downgrade: "(不能降級)"
  notallowed: "(模板不允許)"
  unsupported: "(不支持)"
  helpBlock:
    label: 升級Kubernetes版本時，請查看<a href="https://groups.google.com/forum/#!forum/kubernetes-announce" target="_blank" rel="nofollow noreferrer noopener">Kubernetes release notes </a>了解功能變化。

formIstioHost:
  prompt: 選擇節點...

formVolumeRow:
  prompt: 選擇一個 persistent volume 聲明...
  name:
    label: volumes name
    placeholder: '例如: vol1'
  volumeClaimTemplateName:
    label: Volume Claim Template Name
    placeholder: '例如: vol1'
    vctWarning: Stateful workloads launched with volume claim templates will become uneditable due to a <a href="https://github.com/kubernetes/kubernetes/issues/69041" target="_blank" rel="nofollow noreferrer noopener">upstream bug</a> in Kubernetes. Please be aware that this limitation exists before launching your new workload.
  mode:
    label: volumes 類型
    newVolume: 臨時 volumes
    existingVolume: 已有的 volumes
    newPvc: volumes 聲明
    existingPvc: persistent volume 聲明
    existingVct: Volume Claim Template
    bindMount: 路徑映射 volumes
    tmpfs: Tmpfs
    secret: 密文 volumes
    configmap: 設定映射 volumes
    certificate: 證書 volumes
    newVolumeClaimTemplate: New Volume Claim Template
  remove: 刪除 volumes
  subPath: volumes 中的子路徑
  readOnly: 唯讀
  noVolume: volumes 不會被掛載到當前容器中，它可能被Pod中的其他容器使用。
  addMount: 新增映射
  mounts:
    mountPoint: 容器路徑
    subPath: '子路徑(僅適用於數據 volumes 掛載，不適用於主機路徑映射)'
    readOnly: 唯讀
    helper: volumes 不會被掛載到當前容器中，它可能被Pod中的其他容器使用。
  customLogPath:
    helpText: 我們將部署一個Flexvolume驅動程式來創建 volumes 並將日誌掛載到主機，GKE叢集現在支持該功能。

form volumes:
  title: 數據 volumes
  detail: 持久化及共享數據並與獨立容器的生命周期分離。
  value:
    prompt: 選擇一個容器...
  volumes: volumes
  volumes From: 捲來自
  volumeDriver:
    label: volumes 驅動
    placeholder: '例如: rancher-nfs，默認: local'
    suggestion: '使用的儲存驅動:'
  noLaunchConfigs: 此服務下沒有可共享 volumes 的啟動設定。
  noHostContainers: 該主機沒有可以提供共享 volumes 的容器。
  onlySingleHost: 僅當新增容器到特定主機時適用。
  errors:
    incomplete: 尚未完成 volumes 定義
    absoluteMountPoint: volumes 掛載點必須使用絕對路徑。
  add:
    label: 新增 volumes ...
    newVolume: 新增一個臨時 volumes
    existingVolume: 現有的臨時 volumes
    newPvc: 新增新的 persistent volume (聲明)
    existingPvc: 使用現有的 persistent volume (聲明)
    bindMount: 映射主機目錄
    tmpfs: 新增一個記憶體中的tmpfs
    secret: 密文 volumes
    configMap: 設定映射 volumes
    certificate: 證書 volumes
    customLogPath: 從目錄讀取日誌文件
    vct: Add a Volume Claim Template
  table:
    kind: 類型
    source: 源
    mountPoint: 掛載點
    opts: 權限/選項

formReservation:
  limitCpu:
    label: '{component} CPU限制'
    placeholder: '例如: 1000'
  limitMemory:
    label: '{component} Memory限制'
    placeholder: '例如: 1000'
  requestCpu:
    label: '{component} CPU預留'
    placeholder: '例如: 1000'
  requestMemory:
    label: '{component} Memory預留'
    placeholder: '例如: 1000'

hostSettings:
  header: 主機註冊URL
  subtext: 主機連接{appName}API的Base URL是？
  hostUrl:
    local: "當前站點地址:"
    new:
      labelText: "其他地址:"
      placeholder: "例如: http://example.com:8080"
  helpText:
    static1: "不要包含<code>/v1</code>或任何其他路徑��但如果您設置了"
    static2: "在{appName}前面，請確保使用<code>https://</code>."
    isRancher: '<a href="{docsBase}/installing-rancher/installing-server/basic-ssl-config/" target="_blank">SSL Termination</a>'
    sslTerm: SSL終止
  notPublic:
    alert: |
      確定要創建的所有主機都能夠連接<code>{activeValue}</code>？<br/>當前地址似乎是私有IP或內部網路。
  badTld:
    alert: |
      '<code>.local</code>頂級域名根據RFC6762被保留為用於多播DNS。不推薦使用.local域名作為註冊URL，該設置可能導致DNS解析問題。請選擇其他的主機名或者IP地址'

hostPod:
  supportState:
    unsupported: 不支持的Docker版本
    untested: 未測試的Docker版本
  groupedInstances:
    namespace: '命名空間:'
    stack: '應用:'
    standalone: 獨立容器

identityBlock:
  loading: 載入中...


inputAnswers:
  yaml: 編輯YAML
  config: 設定選項
  editAsForm: 編輯表單
  yamlConfig: 貼上或者上傳yml/yaml格式的應答參數
  yamlProtip: 您可以在下面的預覽部分，找到該應用的默認應答值
  unknownType: "未識別問題類型:"
  noConfig: 該模板沒有設定選項
  protip: "貼上和讀取操作要求應答為yml/yaml格式"

inputIdentity:
  placeholder:
    github: 新增GitHub用戶或組織名稱
    generic: 新增用戶名或組名
  dropdownLabel:
    teams: 團隊和組織
    groups: 組

inputPassword:
  buttonText: 生成

inputTextFile:
  tooltip: 從文件讀取

uploadFile:
  label: 從文件讀取

podsSection:
  title: Pods
  detail: 此工作負載中的Pods

containersSection:
  title: 容器
  detail: Pod中的容器
  noData: 没有容器
  noMatch: 没有容器匹配當前搜索
  initContainer: Init Container

managedImportClusterInfo:
  title: K3S選項
  detail: 自定義K3S叢集選項
  workerConcurrency: Worker Concurrency
  serverConcurrency: Control Plane Concurrency
  drainServerNodes: Drain Control Plane Nodes
  drainWorkerNodes: Drain Worker Nodes
  nodeInfo:
    title: K3s節點信息
    detail: K3S主節點參數和環境變量的只讀視圖。
    label: Master 節點
    datail: 附加的K3S主節點詳細信息
    selectPrompt: 選擇節點

k3sNodeEnvVarSection:
  title: K3S節點環境變量
  detail: 只讀取此K3S節點的環境變量列表。
  key: Key
  value: Value
  noData: 沒有環境變量
  noMatch: 沒有環境變量與當前搜索匹配

labelsSection:
  kind: 類型
  title: 標籤
  detail: 鍵/值可以被用在主機調度規則里和一些其他的高級設置中
  status: |
    {count, plural,
    =0{無標籤}
    =1{#個標籤}
    other{#個標籤}
    }
  key: 鍵
  value: 值
  noData: 沒有標籤
  noMatch: 沒有標籤與當前搜索匹配

loginShibboleth:
  buttonText: 用Shibboleth登入

loginGithub:
  buttonText: 用GitHub登入

loginGoogle:
  buttonText: 用Google登入

loginAzure:
  buttonText: 用Azure AD登入

loginSaml:
  ping:
    buttonText: "使用Ping登入"
  adfs:
    buttonText: "使用AD FS登入"
  okta:
    buttonText: "使用OktaFS登入"
  keycloak:
    buttonText: "使用Keycloak登入"
  shibboleth:
    buttonText: 通過Shibboleth登入

loginUserPass:
  local: 使用本地用戶
  externalProvider: 使用{externalName}使用者
  provider: "{kind}"
  userLabel: 用戶名
  remember: 記住登入
  userPlaceholder: '例如: jsmith'
  genericLoginLabel: 登入
  loginLabel: 登入{provider}
  loggingInLabel: 登入中...
  passwordLabel: 密碼

loggingPage:
  targetNav:
    experimental: 實驗性
    tips:
      caseA: 當前{pageScope}未啟用日誌收集功能。
      caseB: 當前日誌收集目標是<code class="text-capitalize">{currentTarget}</code>，點擊下面的保存按鈕將禁止當前{pageScope}的日誌收集。
      caseC: 當前日誌收集目標是<code class="text-capitalize">{currentTarget}</code>。
      caseD: 點擊下面的保存按鈕去設置<span class="text-info text-capitalize">{targetType}</span>為日誌收集目標服務。
      caseE: 點擊下面的保存按鈕來更新<span class="text-info text-capitalize">{targetType}</span>配置。
      caseF: 沒有日誌收集目標服務，完成以下設置並保存<code class="text-capitalize">{targetType}</code>為日誌收集目標服務。
  targetTypes:
    embedded: Embedded
    elasticsearch: Elasticsearch
    splunk: Splunk
    kafka: Kafka
    syslog: Syslog
    fluentd: Fluentd
    disable: 禁用
  endpoint: 訪問地址
  endpointPlaceholder: '例如: https://192.168.1.10:9200'
  logging: 日誌收集
  clusterHeader: 叢集日誌收集
  projectHeader: 項目日誌收集
  helpText:
    cluster: 我們將使用fluentd從每個容器收集<b>stdout/stderr</b>日誌，以及在每個主機上<code>/var/log/containers/</code>路徑下的日誌文件，日誌將被發送到被選擇的目標服務。
    clusterTarget: 當前日誌收集目標是<code class="text-capitalize">{clusterTargetType}</code>。如果項目日誌收集啟用，日誌將被發送到叢集目標和項目目標。
    noClusterTarget: 日誌收集默認禁用
  tags:
    keyPlaceholder: '例如: foo'
    valuePlaceholder: '例如: bar'
    addActionLabel: 添加字段
  keyValueForm:
    keyPlaceholder: '例如: 192.168.1.10'
  targetKafka:
    addActionLabel: 添加代理
    host: 主機
    port: 端口
  logPreview:
    header: 日誌格式預覽
  additional:
    header: 其他日誌配置
    fields:
      header: 自定義Log字段
      helpText: 以鍵值對的形式添加自定義字段，以便更好地進行過濾。
    flushInterval:
      header: 刷新時間間隔
      label: 刷新時間間隔
      placeholder: '例如: 1'
      sec: 秒
      helpText: 日誌刷新頻率
    includeSystemComponent:
      label: 包含系統日誌
    jsonParsing:
      label: 支持JSON解析
  advanced:
    file: 以文件形式編輯
    cancel: 以表單形式編輯

  elasticsearch:
    header: Elasticsearch配置
    endpointHelpText: 輸入雲端Elacticsearch地址，或者私有部署的Elacticsearch地址。
    endpointProtocolError: 訪問地址應該以"http://"或者"https://"開頭。
    endpointHostError: 請輸入主機名或域名。
    xpack:
      header: X-Pack安全
      headerOptional: (可選)
      helpText: 如果您的Elasticsearch開啟了X-Pack內置的本地身份驗證功能，請在下面設置用戶名和密碼。
      username: 用戶名
      usernamePlaceholder: '例如: John'
      password: 密碼
      passwordPlaceholder: 密碼
    indexPatterns:
      header: 索引配置
      helpText: 配置用於生成Elacticsearch索引的參數。
      prefix: 前綴
      prefixPlaceholder: '例如: logstash'
      dateFormat: '日期格式:'
      errors:
        startsWith: '前綴不能以 -, _, + 開始'
        required: 必須添加前綴
        invalidCharacters: "前綴不能包含'{char}'"

    generatedIndex: '生成的索引格式為: <code class="text-italic">{esIndex}</code>，默認索引格式為: {indexFormat}。 '
    endpoint:
      required: 必須配置訪問地址。
  splunk:
    header: Splunk HTTP事件收集配置
    helpText: '您可以<a href="http://docs.splunk.com/Documentation/Splunk/7.0.0/Data/UsetheHTTPEventCollector" target="_blank">點擊這裡</a>找到如何配置Splunk HEC( HTTP事件收集器)的說明。 '
    token: Token
    tokenPlaceholder: Your Token
    tokenHelpText: 'Token是允許日誌收集程序和HTTP客戶端連接到HEC的驗證信息，<a href="http://docs.splunk.com/Documentation/Splunk/7.0.0/Data/UsetheHTTPEventCollector#Configure_HTTP_Event_Collector_on_Splunk_Enterprise" target ="_blank">了解詳情</a>。 '
    tokenRequired: 必須配置Token。
    endpointRequired: 必須配置訪問地址。
    source: 日誌源
    sourcePlaceholder: '例如: fluentd'
    sourceHelpText: '標識事件來源的默認字段，即事件發生的位置，<a href="https://docs.splunk.com/Splexicon:Source" target="_blank">了解詳情</a>。 '
    index: Index
    indexPlaceholder: '例如: main'
    indexHelpText: '您在此處指定的索引必須在此令牌的允許索引列表中，<a href="https://docs.splunk.com/Splexicon:Index" target="_blank">了解詳情</ a>。 '
    endpoint:
      placeholder: '例如: https://192.168.1.10:8088'
  kafka:
    header: Kafka配置
    endpointType: 訪問端點類型
    zookeeper: Zookeeper
    broker: Broker
    brokerTypeHelpText: 使用Zookeeper或Broker作為Kafka連接入口點。
    zookeeperHelpText: Zookeeper用於構建協調、配置管理、master檢測、檢測kafka叢集中的節點更新。
    brokerHelpText: Kafka叢集由一個或多個Broker組成，為每個Broker配置主機和端口。
    addEndpoint: 訪問地址
    topic:
      label: 主題
      required: 主題必須填寫
    topicPlaceholder: '例如: message'
    topicHelpText: 日誌將發送到這個主題。
    endpoint:
      required: 必須配置訪問地址。
      broker:
        placeholder: '例如: https://192.168.1.10:9092'
      zookeeper:
        placeholder: '例如: https://192.168.1.10:2181'
  syslog:
    endpointPlaceholder: '例如: 192.168.1.10:514'
    header: Syslog配置
    endpointHelpText: 在這裡輸入日誌服務器的接入地址，選擇TCP將顯示SSL證書配置。
    program: 程序名
    programPlaceholder: '例如: MyProgram'
    programHelpText: 日誌中的程序名稱。
    severityHelpText: '<p class="text-info text-small">日誌的嚴重性列表可以在這裡找到<a href="https://tools.ietf.org/html/rfc5424#section-6.2.1" target="_blank">，了解詳情</a>。 </p>'
    severities:
      emergency: 緊急
      alert: 警報
      critical: 危險
      error: 錯誤
      warning: 警告
      notice: 注意
      info: Info
      debug: Debug
    tokenHelpText: '將Token令牌添加到每個系統日誌消息的結構化數據中。對於像<a href="https://help.sumologic.com/Send-Data/Sources/02Sources-for-Hosted-Collectors/Cloud-Syslog-Source" target="_blank">Sumologic</a>, < a href="https://www.loggly.com/docs/customer-token-authentication-token" target="_blank">Loggly</a>等雲日誌系統，您可以在其配置頁面上生成Token令牌。 '
    endpoint:
      required: 必須配置訪問地址。
  fluentd:
    header: Fluentd配置
    compress:
      label: 啟用Gzip壓縮
      helpText: 啟用Gzip壓縮可減少傳輸數據大小。
    endpoint:
      label: 訪問地址
      placeholder: '例如: 192.168.1.10:24224'
      invalid: 訪問地址需要填寫端口
      required: 必須配置訪問地址。
    password:
      label: 密碼
      placeholder: 用於身份驗證的用戶名密碼
    sharedKey:
      label: 共享密鑰
      placeholder: 用於身份驗證的共享密鑰
    standby:
      label: 僅作為備用
      none: 需要一個非待機訪問地址.
    username:
      label: 用戶名
      placeholder: 用於身份驗證的用戶名
    weight:
      label: 權重
      placeholder: 此訪問地址的負載平衡權重。
    addServer: 添加Fluentd服務
    endpointHostError: 訪問地址不能以http或https開頭。
    endpointPortError: 訪問地址需要添加端口。
    removeFluentServers: 刪除此Fluentd服務
    enableTls:
      label: 啟用TLS
    certificate:
      label: PEM格式的CA證書
    hostname:
      label: 主機名
      placeholder: 服務器主機名
  customTarget:
    type:
      error: "@type不支持, 你可以選擇以下類型: ['elasticsearch', 'splunk_hec', 'remote_syslog', 'kafka_buffered', 'forward']"
  ssl:
    sslHeader: "{authType}配置"
    headerHelp: 輸入HTTPS地址或選擇TCP開啟SSL配置
    certificate:
      label: PEM格式的CA證書
    clientKey:
      label: 客戶端私鑰
    clientCert:
      label: 客戶端證書
    clientKeyPass:
      label: 客戶端私鑰密碼
      password:
        placeholder: 客戶端私鑰密碼
    verify:
      label: SSL校驗
      enabled: '啟用'
      disabled: 禁用
    sslVersion:
      label: SSL版本
    saslType:
      label: 類型
      plain: Plain
      scram: Scram
    saslUsername:
      label: 用戶名
      placeholder: '例如: John'
    saslPassword:
      label: 密碼
      placeholder: 密碼
    saslScramMechanism:
      label: 安全機制
      sha256: sha256
      sha512: sha512
    customTarget:
      help: 您可以將路徑複製到文件中。
      copyAll: 複製所有鍵和值。

  dockerRootDir:
    header: Docker配置
    label: Docker根目錄
    placeholder: "輸入Docker根目錄，默認值為{dir}"

  testAction:
    testing: 測試
    testOk: 設置驗證通過。
    testFailed: 設置驗證失敗，請檢查配置。
    test: 測試
    running: 運行中
    runOk: 試運行成功。
    dryRun: 試運行。

machineTemplatesPage:
  title: 新增主機
  new:
    helpText: 啟動一個新的主機或通過SSH匯入一個已經在運行的Docker
    btn: 設置
  custom: 自定義新增一台現有的正在運行Docker的主機
  templateBox:
    button: 選擇
    labels:
      region: 實例所在地區
      zone: 區域

modalDeleteIstio:
  title: '您確定要禁用:'
  onlyIstio:
    true: 僅Istio
    false: 包括Istio和Monitoring
  disable: 禁用
  disabling: 禁用中

newCertificate:
  title:
    new: 新增證書
    edit: '編輯證書: {name}'
    view: '證書: {name}'
  key:
    label: 私鑰
    required: 必須填寫私鑰
    invalidFormat: 私鑰無效
    placeholder: "貼上或匯入私鑰，以-----BEGIN RSA PRIVATE KEY-----開頭"
  cert:
    label: 證書
    required: 必須填寫證書
    invalidFormat: 無效的證書
    placeholder: "貼上或匯入證書，以-----BEGIN CERTIFICATE-----開頭"
    protip: 包括全部所需的證書鏈
    tooltip: '黏貼用於驗證server證書的CA證書，它將生成在kubecfg文件中。查看<a href="https://rancher.com/docs/rancher/v2.x/en/cluster-provisioning/rke-clusters/options/#authorized-cluster-endpoint" target="blank"
    >更多信息</a>。'
  certChain:
    label: 證書鏈
    placeholder: "貼上或匯入證書，以-----BEGIN CERTIFICATE-----開頭"
  metaXML:
    label: 元數據XML
    placeholder: "貼上IDP Metadata XML"
  publicKey:
    label: SSH公鑰
    required: 必須填寫公鑰
    invalidFormat: 公鑰無效
    placeholder: "黏貼或導入證書，以'ssh-rsa', 'ssh-dss', 'ssh-ed25519', 'ecdsa-sha2-nistp256', 'ecdsa-sha2-nistp384', or 'ecdsa-sha2-nistp521 '開頭"
  errors:
    encrypted: 私鑰不能被密碼保護
    key:
      required: 必須填寫私鑰
      invalidFormat: 私鑰無效，請確保它是一個RSA密鑰
    cert:
      required: 必須填寫證書
      invalidFormat: 證書無效

modalAboutComponent:
  component: 組件
  version: 版本
  cattle: Cattle
  cli: 命令行
  ui: 用戶介面
  helm: Helm
  machine: 主機
  linuxImageList: Linux 鏡像列表
  windowsImageList: Windows 鏡像列表

modalAddPayment:
  header: 新增新的付款方式
  save: 保存
  errors:
    cc: 不正確的信用卡號碼
    exp: 不正確的有效期
    cvc: 不正確的CVC number
    street: 街道資訊為必填項
    city: 城市資訊為必填項
    state: 省份資訊為必填項
    zip: 郵編資訊為必填項
  form:
    currency:
      label: 選擇幣種
    cc:
      label: 信用卡號碼
      placeholder: '• • • • • • • • • • • •'
    default:
      label: 默認信用卡
    name:
      label: 所有者名稱
      placeholder: '約翰 · 史密斯'
    exp:
      label: 有效期
      placeholder: '••/••'
    cvc:
      label: CVC號碼
      placeholder: '•••'
    address:
      addressLine1:
        label: 地址欄1
        placeholder: 742 Evergreen Terrace
      addressLine2:
        label: 地址欄2
        placeholder: Apt. 123
      city:
        label: 城市
        placeholder: Shanghai
      state:
        label: 省
        placeholder: Shanghai
      zip:
        label: 郵遞區號
        placeholder: '518000'
      country:
        label: 國家
        placeholder: 中國
  currencies:
    yuan: "人民幣(¥)"
    euro: "歐元(€)"
    dollar: "美元($)"

modalAddCloudKey:
  name:
    placeholder: '例如: production-credentials'
  description:
    placeholder: '例如: cloud credential for production'
  header:
    new: 添加雲憑證
    edit: 編輯雲憑證
  type: 憑證類型
  saving:
    validating: Validating Keys
  errors:
    validation: '{ status }: 驗證密鑰時出現問題，請輸入有效憑證，然後重試。 '
    region: 您必須選擇一個區域來驗證您的密鑰
  typeSelect:
    prompt: 選擇雲憑證提供商類型
  amazonec2:
    accessKey:
      label: Access Key
      placeholder: Your AWS access key
    secretKey:
      label: Secret Key
      placeholder: Your AWS secret key
  azure:
    clientId:
      label: Client ID
      placeholder: Your Client ID
    clientSecret:
      label: Client Secret
      placeholder: Your Client Secret
  digitalocean:
    accessToken:
      label: Access Token
      placeholder: Your DigitalOcean API access token
      help: |
        黏貼來自DigitalOcean的<a href="https://cloud.digitalocean.com/settings/api/tokens" target="_blank" rel="nofollow noreferrer noopener">Applications & API</a>。
  linode:
    token:
      label: 訪問令牌
      placeholder: 您的Linode API訪問令牌
      help: |
        黏貼来自DigitalOcean的
        <a href="https://cloud.digitalocean.com/settings/api/tokens" target="_blank" rel="nofollow noreferrer noopener">Applications & API</a>。
  vmwarevsphere:
    password:
      label: Password

modalConfirmYaml2Form:
  header: '您將從YAML編輯切換到表單編輯。'
  helpText: '請注意，此列表並不包括所有的答案，您應該在保存前校驗您的配置。當切換回表單編輯時，可能會發生數據丟失，以下字段已被標識為將丟失的字段。在點擊確認之前，請確認丟失的字段不會受影響。'
  confirm: 確認

modalContainerStop:
  header: "確認要停止嗎？"
  helpText: "在超時時間後容器將被強制停止"
  protip: "高級技巧: 在點擊停止按鈕時按住{key}鍵以跳過此確認提示"
  label: 超時
  button: 停止


modalConfirmDeactivate:
  header: 是否確認要
  protip: "高級技巧:在點擊{isServiceButton}時按住{key}鍵以跳過確認操作"
  cancel: 取消
  nodeDriver: '您將無法在使用此驅動程序的節點池中創建、替換或刪除節點。'
  clusterDriver: '您將不能再使用此驅動程序編輯叢集配置。提供程序中的資源不會自動刪除。'

  buttons:
    project:
      message: 停用環境
      button: 停用
    environment:
      message: 停止服務
      button: 停止服務
    default:
      message: 停用
      button: 停用

modalConfirmRemovePayment:
  header: '確認移除付款資訊'
  title: '是否確認要刪除'
  card: '以{card}結尾的信用卡'

modalDeleteGroupRoleBinding:
  header: '您確定要刪除組的所有權限嗎: {groupName}'
  createLabel: 確定刪除

modalEditDriver:
  header:
    create: 新增主機驅動
    edit: 編輯主機驅動
  url:
    label: 下載URL
    help: 64位Linux Docker-Machine驅動下載地址
  uiUrl:
    label: 自定義UI URL
    help: "可選項: 用於下載本驅動程式的自定義新增主機介面的URL"
    link: 參考<a href="https://github.com/rancher/ui-driver-skel" target="_blank">ui-driver-skel</a>以了解更多資訊
  checksum:
    label: 校驗和
    help: "可選: 檢驗下載的驅動是否匹配期望的校驗和"
  whitelist:
    label: 域名白名單
    addActionLabel: 新增域名
    noData: 沒有域名


modalEditSetting:
  title: 編輯高級設置
  name:
    label: 名稱
  value:
    label: 值
    prompt: 選擇一個值...
  reset:
    label: 重置為默認值

modalEditPassword:
  firstLogin:
    title: "歡迎使用{appName}"
    help: '第一步: 請為默認<code>admin</code>用戶設置強密碼'
    actionButton: 繼續
  edit:
    title: 修改密碼
    help: 請輸入一個新密碼。
  current: 當前密碼
  new: 新密碼
  confirm: 確認密碼
  mismatch: 密碼不匹配
  actionButton: 修改
  mode:
    generate: '使用新的隨機生成的密碼: '
    manual: '設置一個特定的密碼來使用: '
  deleteTokens: 刪除所有現有的API鍵

modalFeedback:
  header: "歡迎使用{appName}!"
  subtitle: "在開始使用前，請讓我們了解關於您的資訊..."
  send: 開始使用

modalHostEvacuate:
  header: "確認進行疏散操作"
  helpText: "此操作將停用該主機並刪除主機上所有運行的非基礎設施容器"
  protip: "進階提示: 在點擊時按住{key}鍵以跳過確認操作"
  button: 疏散

modalImport:
  title: 匯入YAML
  mode:
    label: 匯入模式
    cluster: "叢集: 直接將資源匯入到此叢集中"
    project: "專案: 將資源匯入此專案"
    namespace: "命名空間: 將資源匯入特定的命名空間"
  detail:
    cluster1: 如果一個資源指定了命名空間，那麼會自動創建命名空間，但是不會自動加入到專案中
    cluster2: 如果一個資源沒有指定一個命名空間，它將被匯入到default中
    cluster3: '該模式還支持沒有命名空間的資源，例如: RoleTemplates'

    project1: 不指定命名空間的資源將被匯入到選定的默認命名空間中
    project2: 如果一個資源指定了一個不存在的命名空間，此命名空間將被創建並新增到這個專案中

    namespace1: 所有資源將被匯入到選定的命名空間中
    namespace2: 如果資源指定了不同的命名空間，則匯入將失敗


modalProcessError:
  header: 異常資訊
  cause: "原因:"
  none: N/A
  stackTrace: "堆疊跟蹤:"
  close: 關閉

drainNode:
  titleOne: '驅散節點: "{name}"'
  titleMultiple: '驅散{count}個節點'
  action: 驅散
  mode: 模式
  safe:
    label: 安全
    helpText: 如果一個節點具有獨立的Pod或臨時的數據，它將被隔離但不會被驅散。
  aggressive:
    label: Aggressive
    helpText: <b>永久刪除</b>:<ul class="m-0"><li>獨立Pods和它們的數據</li><li>Pods和"Empty Dir" volumes 以及它們的數據。</li></ul>
  gracePeriod:
    title: 'Pod終止延時時間:'
    default: 使用默認設置時間
    placeholder: '例如: 30'
    custom: "忽略默認值自定義延時時間:"
    view:
      custom: "忽略默認值開給每個pod {seconds}秒"
  timeout:
    title: "驅散超時時間:"
    default: 一直不斷重試
    placeholder: '例如: 60'
    custom: "自定義超時時間:"
    view:
      custom: "{seconds} 秒後放棄"

modalRevertSettings:
  title: "將{setting}還原為默認值?"
  current: 當前值
  default: 默認值

modalRestoreBackup:
  title: 數據恢復
  backups: 可用備份
  error: 需要備份
  fetching: 獲取新的備份
  restoreButton: 恢復
  select:
    all: 選擇備份
  type:
    label: 恢復類型
    etcd: Restore etcd
    k8sVersion: "恢復Kubernetes版本"
    versionUnknown: '未知'
    etcdAndK8sVersion: "恢復etcd和Kubernetes版本"
    k8sVersionUnknown: 我們無法還原此快照的kubernetes版本，因為該版本未知。

modalRotateCertificates:
  title: 更新叢集證書
  caCerts: 更新叢集CA證書和所有服務證書
  servicesCa: 更新所有服務證書(保持CA不變)
  services: 僅更新所有服務證書 (不更新CA證書)
  single: 更新單個服務
  dropdownLabel: 服務
  select:
    all: 選擇服務...
  expiring:
    until: '{ cert } (expires { expiresIn })'
    from: '{ cert } (expired { expiresIn })'

modalRollbackService:
  title: '復原"{instanceName}"'
  titleWithSidekicks: '復原"{instanceName}"&{count, plural,=1{#個sidecar}other{#個sidecars}}'
  action: 復原
  current:
    label: 當前版本
  revisionId:
    label: 復原到版本
    prompt: 選擇版本..
  difference:
    label: 區別

modalRollbackApp:
  title: '復原 "{appName}"'
  action: 復原
  current:
    label: 當前版本
  revision:
    label: 復原到版本
    prompt: 選擇版本...
  difference:
    label: 差異
modalSaveRkeTemplate:
  title: "通過{clusterName}創建RKE模板"
  subtitle: 從當前叢集配置創建一個新的RKE叢集模板和初始修訂。這將修改當前叢集，設置叢集以使用新創建的叢集模板和修訂
  name: 叢集模板名稱
  revName: 叢集模板修訂名稱

modalShell:
  title: "命令行: "

modalShortcuts:
  world: 世界
  time: 時間
  title:
    rancher: "歡迎來到傳送門！"
    pl: 快捷鍵
  global: 全域
  cluster: 叢集
  project: 專案
  other: 其他的東西
  shift: Shift-{key}
  delete: 刪除所選擇的(在表視圖中)
  kubectl: Kubectl Shell

  viewGroup: 切換分組視圖
  nextTab: 下一頁
  search: 聚焦搜索字段
  shortcuts: 您在這裡

modalYaml:
  title:
    new: 匯入{type}YAML
    edit: '編輯YAML: {name}'
    view: '查看YAML: {name}'
  noData: 没有{name}資源。
modalWechat:
  title: '掃碼關注Rancher中國微信技術群'
  wechat: 微信
modalWelcome:
  header: "歡迎使用{appName}!"
  closeModal: 確認

namespaceGroup:
  label: "命名空間: {name}"
  none: Pod
  project: "命名空間: 全部"

nodeGroup:
  label: "主機: {name}"

newIngress:
  header:
    add: 新增Ingress
    edit: 編輯Ingress
  error:
    noRules: "您必須有一個或多個規則"
newBalancer:
  header:
    add: 新增負載均衡
    edit: 編輯負載均衡
    upgrade: 升級負載均衡
  error:
    noRules: "必須有一個或多個目標規則和監聽埠"
    noSourcePort: "每條規則必須設置源埠"
    invalidSourcePort: "不正確的源埠: '{num}'"
    invalidTargetPort: "不正確的目標埠: '{num}'"
    mixedPort: "埠{num}有多條衝突的訪問/協定規則"
    noTarget: "每條規則必須設置目標埠"
    noTargetPort: "每個規則需要設置目標埠"
    needsCertificate: "設置SSL/TLS規則時需要證書"
    stackName: "請輸入新應用的名稱"

newCatalog:
  istio:
    catalog: 'Traffic Rules Catalog:'
    saveNew: '創建'
  answers:
    label: 應答
    addAction: 新增應答
  catalog: "應用商店:"
  category: "類別:"
  config: 設定選項
  helm:
    label: 設定選項
    protip: Helm模板接受逗號做為分隔符的字符串列表
    options:
      label: Helm 選項
      wait:
        label: Helm 等待
        help: 在將應用程序標記為激活之前，等待所有的Kubernetes資源準備完成，如果超過超時時間，應用程序安裝將失敗。
      timeout:
        label: Helm 超時
        help: 等待Kubernetes命令完成的超時時間。
  kind: "應用分類: "
  license: "授權:"
  maintainedBy: 由社區成員維護
  maintainer: "維護者:"
  newNamespace: 新的命名空間
  customizeNamespace: "此應用程式將被部署到<code>{namespaceId}</code>命名空間"
  newAppDetail: 選擇應用程式版本和對應的命名空間
  appInfo: 詳細描述
  appInfoDetail: 應用程式資訊和用戶guid
  noConfig: 該模板沒有設定選項
  official: 官方認證
  preview: 預覽
  forceUpgrade: 如果升級過程中需要，刪除和重新創建資源
  forceRollback: 如果在回滾期間需要，刪除和重新創建資源
  templateFiles: 模版文件
  requiredNamespace: 需要指定命名空間
  seeMore: 更多資訊...
  saveConfigure: 設置
  saveNew: 啟動
  saveUpgrade: 升級
  selectVersionAdd: 選擇一個模板版本部署
  selectVersionConfigure: 選擇一個模板版本設置
  selectVersionUpgrade: 選擇一個模板版本升級
  startService: 創建後啟動服務
  support: "支持:"
  templateVersion: 模板版本
  titleAdd: "新增{name}應用"
  titleConfigure: "設置{name}應用"
  titleUpgrade: "升級{name}應用"
  txt: answers.txt
  unknownType: "未識別問題類型:"
  upgrade: "升級:"
  url: "專案URL:"
  version:
    prompt: 選擇版本...
    default: 當前默認(當前版本{version})
  error:
    appData: 數據加載錯誤

newMultiClusterApp:
  answers:
    label: 應答
    addAction: 添加應答
  access:
    noAccessLink: 您無法訪問目標項目
  catalog: "應用商店:"
  category: "類型:"
  config: 配置選項
  helm:
    label: 配置選項
    protip: Helm模板接受逗號分隔的字符串列表
  kind: "商店類型:"
  license: "許可:"
  maintainedBy: 由社區成員維護
  maintainer: "維護人員:"
  newNamespace: 新的命名空間
  customizeNamespace: "此應用程式將部署到<code>{namespaceId}</code>命名空間中。"
  newAppDetail: 為應用程式選擇應用程式版本和名稱空間
  appInfo: 詳細描述
  appInfoDetail: 應用程式訊息和用戶指南
  noConfig: 此模板沒有配置選項
  official: 官方認證
  preview: 預覽
  templateFiles: 模板文件
  seeMore: 更多訊息...
  saveConfigure: 配置
  saveNew: 執行
  saveUpgrade: 升級
  selectVersionAdd: 選擇要部署的模板的版本
  selectVersionConfigure: 選擇要配置的模板的版本
  selectVersionUpgrade: 選擇要升級到的模板版本
  startService: 創建後啟動服務
  support: "支持:"
  targets:
    label: 目標項目
    add: 添加目標
    prompt: 添加目標項目
    target: 目標
    cluster: 叢集
    project: 項目
    noData: 當前沒有目標
  targetDivider:
    label: 目標驅動
  upgradeDivider:
    label: 更新
  rolesDivider:
    label: 角色
  templateVersion: 模板版本
  titleAdd: "添加 {name} App"
  titleConfigure: "配置 {name} App"
  titleUpgrade: "升級 {name} App"
  txt: answers.txt
  unknownType: "無法識別的問題類型:"
  upgrade: "升級:"
  url: "Project URL:"
  version:
    prompt: 選擇版本...
    default: 當時的默認值 (當前{version})
  overrides:
    label: 應答參數
    detail: '在每個叢集/項目的基礎上覆蓋單個應答參數'
    dropdown:
      allProjects: "叢集{clusterName}中的所有項目"
      clusterGroup: "叢集: {clusterName}"
    add:
      label: 添加應答參數
    table:
      scope: 區域
      question: 問題
      answer: 回答
      noData: 當前沒有應答參數
      noMatch: 沒有應答參數匹配當前搜索
    scopeOverride:
      placeholder: 選擇區域
    questionOverride:
      placeholder: 選擇問題
    answerOverride:
      placeholder: 問題需求
  roles:
    title: 角色
    detail: 選擇查看此應用程式所需的角色
    label: 可用的角色
    radios:
      cluster: "叢集 - 該應用程式將能夠訪問和管理部署在叢集中的所有資源"
      project: "項目 - 該應用程式將能夠訪問和管理它所部署的項目中的資源"
    help: "注意: 這可能不是完整的角色列表。該列表僅限於用戶可用的角色。如果您缺少所需的角色，請詢問您的系統管理員。"
    additionalRoles: 現有的角色
    noRoles: "您不能添加新角色，因為您沒有任何可用的角色。請聯繫系統管理員獲得角色訪問權。"
    table:
      role: 角色
      name: 名稱
      builtIn: 內置
      external: 擴展
      noData: 當前沒有角色
      noMatch: 沒有角色匹配當前搜索
      prompt: "選擇角色..."
  members:
    title: 成員
    detail: 選擇可以查看此應用程式的成員
    table:
      name: 名稱
      type: 成員類型
      accessType: 訪問類型
      noData: 目前還沒有成員
      noMatch: 沒有成員匹配當前搜索
      prompt: 選擇值…
  upgradeApp:
    title: 升級策略
    disabled: 同時升級所有應用
    enabled: 滾動更新(批量更新)
    batch: 批量大小
    interval: 時間間隔

newContainer:
  add:
    container: 部署Pod
    service: 部署工作負載
    globalService: 新增全域工作負載
    sidekick: '部署Sidecar'
    sidekickName: '部署{name}的Sidecar'
  upgrade:
    container: 升級容器
    service: 升級服務
    globalService: 升級全域服務
    sidekick: 升級Sidecar
    sidekickName: '升級{name}的Sidecar'
  saveUpgrade: 升級
  saveNew: 啟動
  windows: Windows
  linux: Linux
  all: Any
  os: Target OS
  name:
    placeholder: '例如: Myapp'
  description:
    placeholder: '例如: 我的應用'
  environment:
    label: 環境變數
    from: 引用其他資源
    detail: 設置容器可見的環境變數，包括從其他資源(如密文等)注入的值。
    addAction: 新增變數
    addFrom: 新增附加資源
    keyLabel: 變數
    keyPlaceholder: '例如: FOO'
    valueLabel: 值
    valuePlaceholder: '例如: bar'
  sidekick:
    header: 升級服務
    title: 選擇下載設定的服務來升級
    detail: '“{service}”有多個容器，希望升級哪個容器?'
    primary: 主容器
    sidekick: Sidecars
  containerType:
    title: Sidecar類型
    standard: 標準容器
    init: Init容器

  errors:
    noSidekick: 選擇要新增sidecar的工作負載
    duplicateName: '工作負載{service}中已經存在名為{name}的sidecar.'
    quotaRequired: '"{key}"必需設置，因為在專案上執行資源配額。'

newPassword:
  placeholder: 新密碼
  password: 新密碼
  confirmPassword: 確認密碼
  passwordNoMatch: 密碼不匹配

newSecret:
  title:
    new: 新增密文
    edit: '編輯密文: {name}'
    view: '密文: {name}'
  name:
    placeholder: '例如: api-key'
  description:
    placeholder: '例如: S3密鑰對'
  values:
    label: 密文
  addActionLabel: 新增密文

customDrivers:
  nodes: 主機驅動
  clusters: 叢集驅動

clusterDrivers:
  add: 添加叢集驅動
  refresh: 刷新Kubernetes元數據
  builtIn: 內置
  table:
    noData: 當前叢集沒有定義任何節點
    noMatch: 沒有節點匹配當前搜索

kontainerDriver:
  displayName:
    aliyunkubernetescontainerservice: Alibaba ACK
    amazonElasticContainerService: Amazon ECS
    azureKubernetesService: Azure AKS
    googleKubernetesEngine: Google GKE
    huaweicontainercloudengine: Huawei CCE
    import: Import
    rancherKubernetesEngine: Rancher RKE
    tencentkubernetesengine: Tencent TKE
    baiducloudcontainerengine: Baidu CCE


nodeDriver:
  addTemplate: 新增主機模板
  editTemplate: "編輯主機模板: {name}"
  cloneTemplate: "從{name}克隆主機模板"
  editWarning: 編輯主機模板只會影響由主機池創建的新主機，現有主機將不會自動更新或替換。<br>如果從池中刪除主機，將使用模板中的新設置創建新主機
  externalError: "嘗試加載自定義驅動{ driverName }出錯，請驗證自定義節點驅動配置。"
  cloudCredentialError: cloud credential 必須設置。
  nameError: 名稱必須設置。
  displayName:
    aliyunecs: Alicloud ECS
    amazonec2: Amazon EC2
    amazoneks: Amazon EKS
    azure: Azure
    azureaks: Azure AKS
    cloudca: Cloud.ca
    digitalocean: DigitalOcean
    exoscale: Exoscale
    googlegke: Google GKE
    huaweicce: Huawei CCE
    linode: Linode
    metal: Equinix Metal
    openstack: OpenStack
    otc: Open Telekom Cloud
    packet: Packet
    rackspace: Rackspace
    rancherkubernetesengine: RKE
    softlayer: SoftLayer
    tencenttke: Tencent TKE
    upcloud: UpCloud
    vmwarevsphere: vSphere
    zstack: ZStack
    pinganyunecs: Pinganyun ECS
    baidu: Baidu CCE
  driverOptions: "{driver}選項"
  templateOptions: "{appName}模板"
  amazoneks:
    access:
      next: "下一步: 選擇服務角色"
      loading: 從亞馬遜載入服務角色...
    help: "在這裡黏貼AWS密鑰對。只使用IAM訪問鍵，使用根用戶生成的鍵將使叢集不可訪問。"
    clusterOption:
      title: 叢集選項
      detail: 為叢集自定義Kubernetes選項
    encryptEbs:
      label: EBS Encryption
      detail: Enables EBS encryption on worker nodes.
    kubernetesVersion:
      label: Kubernetes版本
      placeholder: 選擇要安裝的Kubernetes版本
    keyPairs:
      label: SSH Key
      prompt: 沒有選擇
      tooltip: 您可能需要編輯安全組的入站規則來啟用22端口。
    role:
      label: 服務角色
      noneSelected: "Rancher創建角色"
      help: "您可以不選擇服務角色，而Rancher會為您自動創建一個。"
      radio:
        default: "標準: Rancher生成的服務角色"
        custom: "自定義: 從現有服務角色中選擇"
      next: "下一步: 選擇 VPC & Subnet"
      loading: "從Amazon載入VPCs..."
    vpc:
      title: VPC & Subnet
      detail: 選擇將用於EKS實例的VPC
      next: "下一步: Subnet"
      loading: "載入Subnets..."
      nextRancherDefault: "下一步: 選擇實例選項"
      loadingRancherDefault: "載入實例選項..."
      noneSelected: "Rancher創建VPC和Subnet"
      radio:
        default: "標準: 通過Rancher創建VPC和子網"
        custom: "自定義: 從現有VPC和子網中選擇"
    subnet:
      title: 子網路
      help: 2 必须選擇子網路
      next: "下一步: 選擇安全組"
      loading: "載入安全組..."
    associateWorkerNodePublicIp:
      title: Worker節點的公網IP
      radio:
        default: 是
        off: '否: 僅私有ip'
    securityGroup:
      title: 安全組
      detail: 選擇將應用於EKS實例的安全組
      choose: 選擇一個或多個現有安全組
      defaultExisting: "標準: 使用現有的{groupName}組"
      defaultCreate: "標準: 自動創建新的安全組"
      next: "下一步: 設置實例選項"
      loading: 載入設置實例選項...
    ami:
      label: 自定義AMI
      help: "您可以覆蓋Rancher基於區域選擇的默認AMI"
    max:
      label: 最大平均比重
    min:
      label: 最小平均比重
    desired:
      label: 預期ASG大小
    userData:
      label: 使用者數據
      help: 將使用者數據傳遞給節點以執行自動配置任務
      placeholder: 貼上腳本
    nodeVolumeSize:
      label: 主機 volume 大小
      placeholder: '例如: 20'
    accessKey:
      label: Access Key
      placeholder: Your AWS access key
    secretKey:
      label: Secret Key
      placeholder: Your AWS secret key
      provided: Provided
    sessionToken:
      label: "Session Token<em class='text-muted'>可選</em>"
      placeholder: Your AWS session token
      provided: Provided
    region:
      label: Region
  amazonec2:
    access:
      title: 1. 帳戶訪問
      detail: 選擇將用於啟動EC2實例的區域和API密鑰
      next: "下一步: 認證 & 設置節點"
      loading: 從EC2載入可用區和VPC資訊...
      help: "在此貼上AWS密鑰對，我們將用密鑰創建新的實例"
    zone:
      title: 2. 區域和網路
      detail: 為實例選擇可用區和VPC/子網
      next: "下一步: 選擇安全組"
      loading: 從EC2載入安全組資訊...
    accessKey:
      label: 訪問密鑰
      placeholder: AWS access key
    secretKey:
      label: 加密密鑰
      placeholder: AWS secret key
      provided: 已提供
    region:
      label: 區域
      selectLabel: 選擇區域
    availabilityZone: 可用區域
    subnet: VPC/Subnet
    noSubnet: 當前沒有子網域可選擇
    securityGroup:
      title: 3. 安全組
      detail: 選擇安全組將應用到實例
      choose: 選擇一個或多個現有的組
      defaultExisting: "標準: 使用現有的<code>{groupName}</code>安全組"
      defaultCreate: "標準: 自動創建<code>{groupName}</code>安全組"
      next: "下一步: 設置實例選項"
      loading: 正在載入實例選項...
    tags:
      addActionLabel: 新增AWS標籤
      valueLabel: 標籤
      placeholder: '例如: dev'
    instance:
      title: 4. 實例
      detail: 自定義將要創建的EC2實例。
    portHelp:
      link: 了解更多
      text: 將要開放埠的詳細資訊
    needs:
      label: "為了使{appName}正常使用，安全組需要設定允許以下流量通過:"
      item1: '從{appName} 伺服器到主機的<code>TCP</code>埠<code>22</code><span class="text-muted">(SSH連接用於安裝docker)'
      item2: '主機之間需要開放<code>UDP</code>埠<code>500</code>和<code>4500</code><span class="text-muted">(ipsec網路)</span></li>'
      item3: 這些規則<b>不會</b>自動新增
    instanceType:
      label: 實例類型
    rootSize:
      label: 根磁盤大小
      unit: GB
    encryptEbsVolume:
      label: Encryption
      radioLabel: Encrypt EBS Volume
    volumeType:
      label: Amazon EBS volume 類型
    useEbsOptimizedInstance:
      label: 優化實例
      radioLabel: 創建EBS優化實例
    ami:
      label: AMI
      placeholder: Ubuntu AMI
      rancherList: RancherOS AMI列表
    sshUser:
      label: SSH 用戶
      placeholder: '例如: ubuntu'
    iam:
      label: IAM設定文件
      placeholder: my-k8s-profile
    privateIp:
      label: 私有IP
    onlyPrivate:
      label: 僅使用私有IP地址
    requestSpotInstance:
      label: 競價實例
      enable: 請求競價實例
    spotPrice:
      label: 競價價格
      unit: '$'
  digitalocean:
    droplet:
      title: Droplet選項
      detail: 設定將由此模板創建的Droplets的選項
    sizeLabel: |
      {highMem, select, true {High Memory: } other {}}{memoryGb} GB RAM, {disk} GB Disk, {vcpus, plural,
        =1 {# vCPU}
        other {# vCPUs}
      }
    authAccountButton: '下一步: 設定Droplet'
    accessToken:
      label: 訪問令牌
      placeholder: DigitalOceanAPI訪問令牌
      help: |
        '從<a href="https://cloud.digitalocean.com/settings/api/tokens" target="_blank" rel="nofollow noreferrer noopener">Applications&API</a>頁面獲取DigitalOcean的個人訪問token'
    image:
      label: 鏡像
    sshUser:
      label: SSH用戶
      placeholder: '例如: root'
    size:
      label: Droplet規格
    region:
      label: 區域
    optionsSection: 選項
    backups:
      label: 啟用備份
    ipv6:
      label: 啟用IPv6
    privateNetworking:
      label: 啟用私有網路
    monitoring:
      label: 啟用監控
    tags:
      addActionLabel: 新增Droplet標籤
      valueLabel: 標籤
      placeholder: '例如: dev'
    errors:
      hostnamePrefix: 名稱前綴不能包含"_"
  exoscale:
    accountSection: 帳號訪問
    apiKey:
      label: API Key
      placeholder: Exoscale API密鑰
    secretKey:
      label: 加密密鑰
      placeholder: Exoscale secret密鑰
      provided: 已提供
    accountHelp: 在此貼上Exoscale密鑰對，我們將用密鑰創建新的實例
    loginAction: '下一步: 驗證並選擇安全組'
    loadingSecurity: 從Exoscale載入安全組...
    securityGroupSection: 安全組
    securityGroup:
      label: 安全組
      defaultExisting: '標準: 使用現有的<code>{groupName}</code>安全組'
      defaultCreate: '標準: 自動創建<code>{groupName}</code>安全組'
      custom: '自定義: 選擇現有安全組'
      updating: 更新安全組...
      creating: 創建安全組...
    loadingZone: 從Exoscale載入區域資訊...
    zoneSection: 區域
    selectZoneAction: '下一步: 選擇安全組'
    zone:
      label: 區域
    portHelp:
      link: 了解更多
      text: 關於將要開放的埠資訊
    needs:
      label: "{appName}正常工作需要安全組允許以下通訊: "
      item1: '從{appName}伺服器到主機的<code>TCP</code>埠<code>22</code><span class="text-muted">(SSH連接用於安裝docker)'
      item2: 與其他所有主機之間的 <code>UDP</code>埠<code>500</code>和<code>4500</code><span class="text-muted">(用於IPsec網路)</span>
      item3: 這些規則<b>不會</b>自動新增
    selectSecurityGroupAction: "下一步: 設置實例選項"
    loadingInstance: 讀取可用實例設定...
    instanceSection: 實例
    instanceProfile:
      label: 實例設定文件
    diskSize:
      label: 根磁盤大小
    sshUser:
      label: SSH 用戶
      placeholder: '默認情況下由docker-machine選擇'
    template:
      label: 模板
  metal:
    accountSection: 帳號訪問
    projectId:
      label: 專案
      placeholder: Equinix Metal專案ID
    apiKey:
      label: API Key
      placeholder: Equinix Metal API Key
    apiKeyHelp: '由Equinix Metal的<a href="https://console.equinix.com/users/0/api-keys" target="_blank">API Keys</a>頁面獲取'
    instanceSection: 實例
    instanceOptionsSection: 實例選項
    loginAction: "下一步: 認證並且選擇實例"
    authentication: 驗證
    location: 所在地區
    planDetails:
      label: 實例詳情
      cpu: CPUs
      memory: 記憶體
      drives: 驅動
      network: NICs
    image:
      label: 鏡像
    size:
      label: 規格
    regionSection: 區域
    region:
      label: 區域
  packet:
    accountSection: 帳號訪問
    projectId:
      label: 專案
      placeholder: Packet專案ID
    apiKey:
      label: API Key
      placeholder: Packet API Key
    apiKeyHelp: '由Packet的<a href="https://app.packet.net/portal#/api-keys" target="_blank">API Keys</a>頁面獲取'
    instanceSection: 實例
    instanceOptionsSection: 實例選項
    loginAction: "下一步: 認證並且選擇實例"
    authentication: 驗證
    location: 所在地區
    planDetails:
      label: 實例詳情
      cpu: CPUs
      memory: 記憶體
      drives: 驅動
      network: NICs
    image:
      label: 鏡像
    size:
      label: 規格
    regionSection: 區域
    region:
      label: 區域
  rackspace:
    account:
      title: 1. 帳號訪問
      detail: 用來創建Rackspace實例的用戶名和API Key
    username:
      label: 用戶名
      placeholder: Rackspace用戶名
    apiKey:
      label: API Key
      placeholder: Rackspace APK Key
    accountHelp: 從Rackspace控制面板的帳戶設置頁面獲取
    region:
      title: 2. 區域和偏好
      detail: 選擇要創建的Rackspace實例的區域和偏好
      label: 區域
    flavor:
      label: 偏好
  vmwarevsphere:
    hostOptions:
      any:
        label: 'Any'
    cloudconfig:
      label: Cloud Config YAML
    contentLibrary: 'Content library:'
    libraryTemplate: 'Library template:'
    virtualMachine: '虛擬機:'
    template: '模板:'
    creationType:
      label: 創建方法
      library: '模板部署: Content Library'
      template: "模板部署: Data Center"
      vm: "克隆一個現有的虛擬機"
      legacy: 從boot2docker ISO 安裝(Legacy)
    access:
      title: '1. 帳戶訪問'
      detail: 配置在哪裡查找vCenter或ESXi服務器
      help: '注意: 免費的ESXi license不支持API訪問，只支持具有有效或評估許可證的服務器。 '
    scheduling:
      title: 2. 調度
      detail: 選擇將調度虛擬機的管理程序
    instance:
      title: 3. 實例配置
      detail: 選擇虛擬機的大小和操作系統
    tags:
      title: 4. 標籤
      detail: 標籤允許您將元數據附加到vSphere目錄中的對象，以便更容易地對這些對象進行排序和搜索。
      addActionLabel: Add tag
    customAttributes:
      title: 5. 自定義屬性 (legacy)
      detail: 自定義屬性允許您將元數據附加到vSphere目錄中的對象，以便更容易地對這些對象進行排序和搜索。
      addActionLabel: 添加自定義屬性
    vappOptions:
      title: '6. vApp選項'
      detail: 選擇OVF環境屬性
    vcenter:
      label: vCenter或ESXi服務器
      placeholder: 'vCenter或者ESXi主機名/IP'
    vcenterPort:
      label: 端口
    username:
      label: 用戶名
    password:
      label: 密碼
    instanceSection: 實例
    instanceOptionsSection: 實例選項
    cpuCount:
      label: CPUs
      unit: '{cores, plural, =1 {Core} other {Cores}}'
    memorySize:
      label: 記憶體
      unit: MB
    diskSize:
      label: 磁盤
      unit: MB
    boot2dockerUrl:
      label: 操作系統ISO下載地址
      placeholder: "缺省: 最新的rancheros-vmware鏡像"
    cloudConfig:
      label: Cloud config
      placeholder: '/etc/kubernetes/vsphere.conf'
    cloneFrom:
      label: VM/Template
      placeholder: '例如: http://my_host/template.yml'
    library:
      label: Library
      placeholder: dsl_linux_v4-4-10.ova
    schedulingSection: Scheduling
    dataCenter:
      label: 數據中心
      placeholder: "例如: datacenter_name"
      help: "用於創建虛擬機的數據中心（對於獨立ESXi保留空白）"
    pool:
      label: 池
      placeholder: "例如: /dc_name/host/host_name/Resources/pool_name"
      help: "用於創建VM的資源池(對於獨立ESXi保留空白)"
    host:
      label: 主機
      placeholder: "例如: cluster_name/host_name"
      help: "用於創建虛擬機的特定主機(對於獨立ESXi或具有DRS的叢集留空)"
    network:
      addActionLabel: "添加網路"
      label: 網路
      placeholder: "例如: VM網路"
      help: "VM連接到的網路"
    dataStore:
      cluster:
        tooltip: 使用數據存儲叢集?
        help: "在數據存儲叢集上創建VM"
      label: 數據存儲
      placeholder: "例如：datastore_cluster_name/datastore_name"
      help: "創建VM磁盤的數據存儲"
    cloudinitType:
      label: Cloud Init type
    cloudinit:
      label: Cloud Init
      placeholder: "例如: http://my_host/cloud-config.yml"
      help: "Cloud-init文件或url在guestinfo中設置"
    folder:
      label: Folder
      placeholder: "例如: /folder"
      help: "Folder for the VM. This folder must already exist in the datacenter"
    cfgparam:
      key:
        placeholder: "例如: guestinfo.hostname"
      value:
        placeholder: "例如: Myrancherhost"
      label: 用於guestinfo的配置參數
      addActionLabel: Add Parameter
    vappHelp: "注意:獨立的ESXI不支持vApp選項和網路協議配置文件"
    vappMode:
      disabled: "不使用vApp"
      auto: "使用vApp配置網路協議配置文件"
      manual: "提供自定義vApp配置"
    vappTransport:
      label: OVF environment transport
      placeholder: "例如: com.vmware.guestInfo"
      help: "com.vmware.guestInfo或者iso"
    vappIpprotocol:
      label: vApp IP protocol
      placeholder: "例如: IPv4"
      help: "IPv4 or IPv6"
    vappIpallocationpolicy:
      label: vApp IP分配策略
      placeholder: "例如: fixedAllocated"
      help: "dhcp, fixed, transient or fixedAllocated"
    vappProperty:
      key:
        placeholder: "例如: guestinfo.interface.0.ip.0.address"
      value:
        placeholder: "例如: ip:VM Network, expression or string"
      label: vApp屬性
      addActionLabel: 添加參數
  azure:
    placement:
      title: 位置
      detail: 選擇將由此模板創建的實例的位置。
    access:
      title: 帳號訪問
      detail: 將用於啟動Azure實例的API密鑰。
    network:
      title: 網路
      detail: 為此模板創建的實例設定網路
    instance:
      title: 實例
      detail: 自定義將要創建的Azure實例
    subscriptionId:
      label: 訂閱ID
      placeholder: Azure訂閱ID
    subscriptionCert:
      label: 訂閱證書
      placeholder: Azure訂閱證書
    image:
      label: 鏡像
      placeholder: '推薦:UbuntuServer:16.04.0-LTS:latest'
    diskSize:
      label: 磁盤大小
      placeholder: '例如: 30'
    managedDisks:
      label: 磁盤類型
      unmanaged: 非託管的磁盤
      managed: 託管的磁盤
    updateDomainCount:
      label: Update Domain Count
      placeholder: '例如: 5'
      helpText: 如果已經創建了可用性集，更新域計數將被忽略。
    faultDomainCount:
      label: Fault Domain Count
      placeholder: '例如: 3'
      helpText: 如果已經創建了可用性集，則將忽略故障域計數。
    size:
      label: 規格
    dockerPort:
      label: Docker埠
      placeholder: '2376'
    publishSettingsFile:
      label: 發布設定
      placeholder: 發布設定文件
    environment:
      label: 環境
      placeholder: 'AzurePublicCloud'
    resourceGroup:
      label: 資源組
      placeholder: 'docker-machine'
    sshUser:
      label: SSH 用戶
      placeholder: usr1
    storageType:
      label: 儲存類型
    vnet:
      label: VNet
      placeholder: '[資源組: ]名稱'
    subnet:
      label: 子網
      placeholder: 示例別名
    subnetPrefix:
      label: 子網前綴
      placeholder: 128.42.0.0/21
    availabilitySet:
      label: 可用性集
      placeholder: 可用集名稱
    openPort:
      label: 開放埠
      placeholder: '使用逗號分隔符，例如: 80，443'
    privateIpAddress:
      label: 私有IP
      placeholder: 127.0.0.1
    usePrivateIp:
      label: 使用私有IP連接
    staticPublicIp:
      label: 公網IP
    noPublicIp:
      label: 無公網IP
    clientId:
      label: 客戶端ID
      placeholder: 客戶端ID
    clientSecret:
      label: 客戶端密鑰
      placeholder: 客戶端密鑰
    region:
      label: 區域
  aliyunecs:
    accountSection:
      label: 1. 訪問令牌
      detail: 設定用於創建阿里雲主機的訪問令牌
      next: "下一步: 認證&設定網路"
      loading: 正在獲取阿里雲區域資訊...
    accessKey:
      label: 訪問密鑰
      placeholder: 阿里雲訪問密鑰
    accessKeySecret:
      label: 訪問密鑰令牌
      placeholder: 阿里雲訪問密鑰所對應的令牌
      provided: 已提供
    apiEndpoint:
      label: "(可選)阿里雲私有部署API地址"
      placeholder: 阿里雲私有部署API地址
    instanceOptionsSection:
      label: 實例
      detail: 設置即將創建的阿里雲實例
    instanceDescription:
      label: 實例描述
      placeholder: 該實例的描述
    instanceType:
      label: 實例類型
      placeholder: 實例類型
    systemImage:
      label: 系統鏡像
      placeholder: 系統鏡像
    internetMaxBandwidth:
      label: 最大網路頻寬
      placeholder: 1到100
    aliyunSLB:
      label: 阿里雲SLB ID
      placeholder: 阿里雲SLB ID
    storageSection:
      label: 儲存
      detail: 設定通過該模版創建的實例的儲存選項
      next: "下一步: 設定阿里雲實例選項"
      loading: 正在獲取主機類型和系統鏡像...
    ioOptimized:
      label: 儲存IO優化
      optimized: 優化
      none: 不優化
    systemDiskCategory:
      label: 系統盤種類
    dataDiskCategory:
      label: 數據盤種類
    dataDiskSize:
      label: 數據磁盤大小
      placeholder: 磁盤大小
    region:
      label: 區域
      placeholder: 區域
    zone:
      label: 可用區
      prompt: 選擇可用區...
    networkSection:
      label: 網路
      detail: 設定通過該模版創建的實例的網路選項
      next: "下一步: 設定儲存選項"
      loading: 正在獲取阿里雲儲存類型...
    routeCIDR:
      label: 路由CIDR
      placeholder: '例如: 192.168.1.0/24'
    vpcId:
      label: 專有網路
      prompt: 選擇專有網路...
    vswitchId:
      label: 交換機
      prompt: 選擇交換機...
    privateIp:
      label: 私有IP
      placeholder: 專用網路中的私有IP
    privateAddressOnly:
      label: 僅私網IP
    securitySection:
      label: 安全
      detail: 選擇實例所需要設定的安全組。
    securityGroup:
      label: 安全組
      placeholder: 安全組
      prompt: 選擇安全組...
      defaultCreate: "自動創建<code>{groupName}</code>安全組"
    sshPassword:
      label: SSH密碼
      placeholder: 創建實例後SSH遠程登入密碼(非必填)
      provided: 已提供
    tags:
      addActionLabel: 新增實例標籤
      valueLabel: 標籤
      placeholder: '例如: dev'
    errors:
      vpcIdRequired: 請選擇專有網路
      vswitchIdRequired: 請選擇交換機
      accessKeyRequired: 請輸入訪問密鑰
      accessSecretRequired: 請輸入訪問密鑰令牌
      sshPasswordLengthNotValid: SSH密碼的長度應為8至30之間
      sshPasswordInvalidCharacter: SSH密碼包含非法字符
      sshPasswordFormatError: "SSH密碼必須至少包括大寫字符，小寫字符，數字和特殊字符中的三種"
      nameNotValidForApp: 根據{appName}主機名規則該名稱無效。
  zstack:
    access:
      title: 1. 帳戶訪問
      detail: 選擇將用於啟動ZStack實例的endpoint，帳戶名稱和帳戶密碼
      next: "下一步: 驗證&選擇網路"
      loading: 從ZStack載入區域、叢集、網路資訊...
    endpoint:
      label: 終端
      placeholder: '例如: https://192.168.1.42:8443/'
    accountName:
      label: 帳戶名稱
      placeholder: 帳戶
    accountPassword:
      label: 帳戶密碼
      placeholder: 帳戶密碼
      provided: 已提供
    zone:
      title: 2. 區域、叢集和網路
      detail: 選擇實例的區域，叢集和網路
      next: "下一步: 設置實例選項"
      loading: 從ZStack載入實例選項...
      label: 區域
    cluster:
      label: 叢集
    network:
      defaultCreate: "標準: 自動創建<code>{groupName}</code>安全組"
      choose: 連接到現有網路
      label: 網路
    portHelp:
      link: 了解更多
      text: 將要開放的埠的詳細資訊
    instance:
      title: 3. 實例
      detail: 自定義將要創建的EC2實例
    instanceOffering:
      label: 實例類型
    systemDiskOffering:
      label: 系統碟
    imageName:
      label: 鏡像名稱
    dataDiskOffering:
      label: 數據磁盤

newConfigMap:
  title:
    new: 新增ConfigMap
    edit: '編輯設定映射: {name}'
    view: '設定映射: {name}'
  name:
    placeholder: '例如: map'
  description:
    placeholder: '例如: app'
  values:
    label: 設定映射
    binaryLabel: 配置映射值(二進制值)
  addActionLabel: 新增設定映射

projectGroup:
  label: "專案: {name}"
  none: 命名空間
  project: 不在專案中
  noNS: 此專案下沒有命名空間

optionallyNamespaced:
  scope:
    label: 作用域
    project: 此專案所有命名空間
    namespace: 單個命名空間

orchestrationWelcome:
  simple:
    title: 簡單
  enhanced:
    title: 通過Kubernetes加強

pageFooter:
  notARelease: (非正式發布)
  help: '幫助&文檔'
  issues: 提交問題
  forums: 論壇
  cnforums: 中文社區
  slack: Slack
  download:
    link: 下載Rancher CLI
    mac: macOS
    windows: Windows
    linux: Linux
  showSystem: 顯示系統容器

pagination:
  catalog: |
    {pages, plural,
    =0{無應用商店}
    =1{選中{count}{count, plural,=1{個應用商店}other{個應用商店}}}
    other{當前顯示{count}個應用商店中的{from}到{to}個}}
  certificate: |
    {pages, plural,
    =0{無證書}
    =1{選中{count}{count, plural,=1{個證書}other{個證書}}}
    other{當前顯示{count}個證書中的{from}到{to}個}}
  container: |
    {pages, plural,
    =0 {無容器}
    =1{選中{count} {count, plural, =1{個容器}other{個容器}}}
    other{當前顯示{count}個容器中的{from}到{to}個 }}
  cluster: |
    {pages, plural,
    =0{沒有叢集}
    =1{選中{count}{count, plural,=1{個叢集}other{個叢集}}}
    other{當前顯示{count}個叢集中的{from}到{to}個 }}
  dnsRecord: |
    {pages, plural,
    =0{無DNS記錄}
    =1{選中{count}{count, plural,=1{條DNS記錄}other{條DNS記錄}}}
    other {當前顯示{count}條DNS Records中的{from}到{to}條}}
  driver: |
    {pages, plural,
    =0{無驅動}
    =1{選中{count}{count, plural,=1{個驅動}other{個驅動}}}
      other {當前顯示{count}個驅動中的{from}到{to}個}}
  driverOptions: |
    {pages, plural,
    =0{無驅動選項}
    =1{選中{count}{count, plural,=1{個驅動選項}other{個驅動選項}}}
    other {當前顯示{count}個驅動選項中的{from}到{to}個}}
  destinationRules: |
    {pages, plural,
    =0 {No Options}
    =1 {{count} {count, plural, =1 {Destination Rule} other {Destination Rules}}}
    other {{from} - {to} of {count} Destination Rules}}
  entry: |
    {pages, plural,
    =0{無條目}
    =1{選中{count}{count, plural,=1{個條目}other{個條目}}}
    other {當前顯示{count}個條目中的{from}到{to}個 }}
  event: |
    {pages, plural,
    =0{無事件}
    =1{選中{count}{count, plural,=1{個事件}other{個事件}}}
    other{當前顯示{count}個事件中的{from}到{to}個}}
  features: |
    {pages, plural,
    =0 {No Features}
    =1 {{count} {count, plural, =1 {Feature} other {Features}}}
    other {{from} - {to} of {count} Features}}
  generic: |
    {pages, plural,
    =0{無條目}
    =1{選中{count}{count, plural, =1{個條目}other{個條目}}}
    other{當前顯示{count}個條目中的{from}到{to}個}}
  hpa: |
    {pages, plural,
    =0 {沒有Pod自動水平伸縮規則}
    =1 {選中{count} {count, plural, =1 {條Pod自動水平伸縮規則} other {條Pod自動水平伸縮規則}}}
    other {當前顯示{count}條Pod自動水平伸縮規則中的{from}到{to}條}}
  image: |
    {pages, plural,
    =0{無鏡像}
    =1{選中{count}{count, plural,=1{個鏡像}other{個鏡像}}}
    other {當前顯示{count}個鏡像中的{from}到{to}個 }}
  istioRule: |
    {pages, plural,
    =0 {No Traffic Rules}
    =1 {{count} {count, plural, =1 {Traffic Rule} other {Traffic Rules}}}
    other {{from} - {to} of {count} Traffic Rules}}
  link: |
    {pages, plural,
    =0{無連結}
    =1{選中{count}{count, plural,=1{個連結}other{個連結}}}
    other {當前顯示{count}個Links中的{from}到{to}個 }}
  loadBalancer: |
    {pages, plural,
    =0{無負載均衡}
    =1{選中{count}{count, plural,=1{條負載均衡}other{條負載均衡}}}
    other {當前顯示{count}條負載均衡中的{from}到{to}條 }}
  ingress: |
    {pages, plural,
    =0{無Ingresses}
    =1{選中{count}{count, plural,=1{個Ingresses}other{個Ingresses}}}
    other {當前顯示{count}個Ingresses中的{from}到{to}個 }}
  member: |
    {pages, plural,
    =0{無成員}
    =1{選中{count}{count, plural,=1{個成員}other{個成員}}}
    other {當前顯示{count}個成員中的{from}到{to}個}}
  mount: |
    {pages, plural,
    =0{無掛載}
    =1{選中{count}{count, plural,=1{個掛載}other{個掛載}}}
    other {當前顯示{count}個掛載中的{from}到{to}個 }}
  namespace: |
    {pages, plural,
    =0{無命名空間}
    =1{選中{count}{count, plural,=1{個命名空間}other{個命名空間}}}
    other {當前顯示{count}個命名空間中的{from}到{to}個 }}
  node: |
    {pages, plural,
    =0{無主機}
    =1{選中{count}{count, plural,=1{台主機}other{台主機}}}
    other {當前顯示{count}個Nodes中的{from}到{to}個}}
  nodePool: |
    {pages, plural,
    =0{無主機池}
    =1{選中{count}{count, plural,=1{個主機池}other{個主機池}}}
    other {當前顯示{count}個Node Pools中的{from}到{to}個}}
  nodeTemplate: |
    {pages, plural,
    =0{無主機模板}
    =1{選中{count}{count, plural,=1{個主機模板}other{個主機模板}}}
    other {當前顯示{count}個主機模板中的{from}到{to}個 }}
  pod: |
    {pages, plural,
    =0 {沒有Pods}
    =1{{count}{count, plural, =1{個Pod}other{個Pods}}}
    other{當前顯示{count}個Pods中的{from}到{to}個}}
  podHighlightSubset: "<b>{subset} of {count}</b> Pods"
  podNoSubset: "0 of {count} Pods"
  podLabel: |
    {count, plural,
      =1{個Pod}
      other{個Pods}
    }
  port: |
    {pages, plural,
    =0{無埠}
    =1{選中{count}{count, plural,=1{個埠}other{個埠}}}
    other{當前顯示{count}個埠中的{from}到{to}個}}
  project: |
    {pages, plural,
    =0{無專案}
    =1{選中{count}{count, plural,=1{個專案}other{個專案}}}
    other {當前顯示{count}個專案中的{from}到{to}個 }}
  rule: |
    {pages, plural,
    =0{無規則}
    =1{選中{count}{count, plural,=1{條規則}other{條規則}}}
    other {當前顯示{count}條規則中的{from}到{to}條 }}
  role: |
    {pages, plural,
    =0 {沒有角色}
    =1 {選中{count} {count, plural, =1 {條角色} other {條角色}}}
    other {當前顯示{count}條角色中的{from}到{to}條}}
  clusterTemplates: |
    {pages, plural,
    =0 {No Template Revisions}
    =1 {{count} {count, plural, =1 {Template Revision} other {Template Revisions}}}
    other {{from} - {to} of {count} Template Revisions}}
  service: |
    {pages, plural,
    =0{無服務}
    =1{選中{count}{count, plural,=1{個服務}other{個服務}}}
    other {當前顯示{count}個服務中的{from}到{to}個}}
  storageClass: |
    {pages, plural,
    =0{無儲存類}
    =1{選中{count}{count, plural,=1{個儲存類}other{個儲存類}}}
    other{當前顯示{count}個Storage Classes中的{from}到{to}個}}
  volume: |
    {pages, plural,
    =0{沒有 volumes }
    =1{選中{count}{count, plural,=1{個 volumes }other{個 volumes }}}
    other {當前顯示{count}個數據 volumes 中的{from}到{to}個}}
  virtualServices: |
    {pages, plural,
    =0 {No Options}
    =1 {{count} {count, plural, =1 {Virtual Service} other {Virtual Services}}}
    other {{from} - {to} of {count} Virtual Services}}
  gateways: |
    {pages, plural,
    =0 {No Options}
    =1 {{count} {count, plural, =1 {Gateway} other {Gateways}}}
    other {{from} - {to} of {count} Gateways}}
  workload: |
    {pages, plural,
    =0{無工作負載}
    =1{選中{count}{count, plural,=1{個工作負載}other{個工作負載}}}
    other {當前顯示{count}個工作負載中的{from}到{to}個 }}

projectRow:
  none: 無描述
  orchestration: 編排

publicEndpoints:
  endpoint: 終端
  bindIpAddress: 綁定IP
  publicPort: 映射埠
  target: 目標
  privatePort: 容器埠
  noData: 無映射埠
  noMatch: 沒有與當前搜索匹配的埠

physicalStats:
  title: 物理屬性
  detail: 物理計算機屬性

registryRow:
  address: 地址
  username: 用戶名
  created: 創建時間

reservationParameters:
  label: 資源限制
  memory:
    labelText: '記憶體'
    placeholder: '默認: 整個主機'
    unit: 'MB'
  milliCpu:
    labelText: 處理器
    placeholder: '默認: 整個主機'
    unit: 'mCPU'

saveCancel:
  saving: 保存中...
  saved: 已保存!
  edit: 保存
  next: 下一步
  create: 創建
  cancel: 取消

schema:
  inputBoolean:
    y: "是"
    n: "否"
  inputCertificate:
    prompt: 選擇證書...
  inputContainer:
    prompt: 選擇容器...
  inputConfigMap:
    prompt: 選擇ConfigMap
  inputEnum:
    option: 選擇選項...
  inputHost:
    label: 選擇主機...
  inputService:
    prompt: 選擇工作負載...
    custom: 自定義
  inputDnsRecord:
    prompt: 選擇服務...
  inputStorageClass:
    prompt: 使用默認的類
  inputSecret:
    secret: 選擇密文...
    certificate: 選擇證書...

schedulingRuleRow:
  theHost: 主機
  must: 必須
  should: 最好
  shouldNot: 最好沒有
  mustNot: 必須沒有
  haveA: 具有
  of: 其
  hostLabel: 主機標籤
  containerLabel: 容器標籤
  serviceName: 服務名稱
  containerName: 容器名稱

serverUrl:
  header:
    label: Rancher Server URL
    detail: "{appName}安裝使用的地址，叢集中的所有節點都需要能夠訪問此地址"
  button:
    save: 保存URL

siteAccess:
  header: 站點訪問
  helpText: "設定允許哪些人登入和使用{appName}"
  unrestricted: "允許所有有效的{individuals}"
  restricted: "允許叢集成員，專案成員以及授權的{individuals}和{collection}"
  required: "僅允許授權的{individuals}和{collection}"
  listHeader: "授權的{individuals}和{collection}"
  dupe: "已授權用戶訪問"
  minimum: '您必須至少新增一條授權條目'
  noIdentity: 無
  users: 用戶
  groups: 組
  organizations: 組織
  refreshGroups: 刷新組成員
  refreshHelp: 這將觸發所有組的刷新並更新它們的用戶列表。
  helpLabel: 這是什麼?

systemInfoSection:
  title: 系統資訊
  detail: 操作系統和kubernetes資訊
  key: 鍵
  value: 值
  noData: 沒有數據
  arch: 系統架構
  dockerVersion: Docker版本
  kernelVersion: 核心版本
  kubeletVersion: Kubelet版本
  kubeProxyVersion: Kube代理版本
  operatingSystem: 操作系統映像
  osType: 系統類型
  noMatch: 沒有與當前搜索匹配的系統資訊

tableCountSelect:
  header: 每頁顯示行數

telemetryOpt:
  header: 資訊統計
  subtext: |
    Rancher Labs希望能夠收集您環境的匿名設定資訊以幫助改進{appName}產品。<br/>資訊不會被提供給任何第三方，收集的資訊不包含特定的資源名稱或地址
  learnMore:
    label: 了解更多
  label: 允許收集匿名統計資訊
  eula:
    prefix: 我同意
    suffix: ''
    link: '條款和條件'

tooltipLink:
  list: 列表
  composeYaml: 編排文件

tooltipWarning:
  notConfigured: 未設置訪問控制
  dismiss: 取消

tooltipExpire:
  label: '此叢集證書即將過期。'
  link: '立即輪換證書'

tooltipToggleOverride:
  label: '是否允許用戶修改當前參數?'

upgradeBtn:
  version:
    current: '當前版本'
  status:
    none: '升級: 無'
    loading: '檢查更新...'
    current: '已經是最新版本'
    available: '有可用更新'
    inprogress: '升級進行中'
    upgraded: '已升級: 完成升級'
    notfound: '未識別模板版本'
    error: '檢查更新出錯'
    required: '需要升級'

jsonEditor:
  placeholder: "請以JSON格式輸入"

viewEditDescription:
  form:
    name:
      placeholder: '例如: lab'
    description:
      placeholder: '例如: 開發實驗環境'

volumes Page:
  title: Volume Claims
  addActionLabel: 新增Volume Claim
  noData: 沒有定義 persistent volume 聲明
  noMatch: 沒有符合當前搜索的 persistent volume
  claimName:
    label: Claim名稱
  volume:
    label: persistent volume
  storageClass:
    label: 儲存類


vmConsole:
  header: "控制台:"
  protip: "高級技巧:啟動命令行時按下{key}鍵可在新視窗中打開"
  canvas: 暫不提供Canvas支持
  footerActions:
    buttonSend: 發送Ctrl-Alt-Delete
    buttonCancel: 關閉

volumeRow:
  mounts:
    readOnly: "(唯讀)"

waitOrchestration:
  count: '({sub}/{count})'

waitKubernetes:
  addHost: '新增至少一台主機'
  activateHost: '等待主機啟動'
  createStack: '創建Kubernetes系統應用棧'
  startServices: '啟動服務'
  waitApi: '等待Kubernetes API'

searchableSelect:
  noMatch: 沒有匹配
  noOptions: 沒有可用的選項

##############################
# Mixins
##############################
containerChoices:
  hostGroup: "主機:{name}"
  hostGroupWithState: "主機:{name}{state}"
  unknownHost: "主機:???"
  containerOption: "{name}"

##############################
# Services
##############################
allWorkloads:
  namespace: "命名空間: {name}"

##############################
# Navigation
##############################
nav:
  srToggleDropdown: 切換下拉菜單
  projectDropdown:
    label: 範圍
    clusters: 叢集
    projects: 專案
    projectsIn: 叢集{cluster}中的專案。
    clustersNoData: 沒有叢集。
    projectsNoData: 選擇一個叢集來查看專案。
    projectNoData: 這個叢集沒有專案。
    clustersNoMatch: '沒有與"{searchInput}"匹配的叢集。'
    projectsNoMatch: '沒有與"{searchInput}"匹配的專案。'
    projectNotReady: '叢集未就緒。'
    projectInCluster: '在叢集{cluster}中的專案。'
    search: "搜索..."
  cluster:
    dashboard: 叢集
    members: 成員
    nodes: 主機
    namespaces: 命名空間
    storage:
      tab: 儲存
      classes: 儲存類
      volumes: persistent volume
    projects: 專案/命名空間
  containers:
    tab: 工作負載
    systemTab: 系統
    ingresses: 負載均衡
    containers: 工作負載
    dns: 服務發現
    hpa: HPA
    volumes: 數據 volumes
    pipelines: 流水線
    deploy: 部署服務
    addContainer: 新增容器
    addBalancer: 新增負載均衡
    addIngress: 新增Ingress
    addDns: 新增DNS記錄
    addHpa: 新增HPA
    addVolume: 新增 volumes
    importCompose: 匯入YAML
  group:
    none: 列表視圖
    node: 按主機分組
    workload: 按負載量分組
    namespace: 按名稱空間分組
    namespaceWorkload: 按名稱空間/工作負載分組
  hosts:
    tab: 主機
    addHost: 新增主機
  catalog:
    all: 全部
    library: 官方認證
    community: 社區貢獻
  apps:
    tab: 應用商店
    apps: 應用商店
    launch: 啟動
    noData: 目前沒有運行應用程序
    noMatch: 沒有應用程序匹配當前搜索
    manage: 管理
  infra:
    tab: 資源
    storagePage: 儲存
    certificates: 證書
    configMaps: 設定映射
    registries: 鏡像庫憑證
    secrets: 密文
    members: 成員
    hpa: HPA
    pipelines: 流水線
  admin:
    tab: 全局
    clusters:
      tab: 叢集
      rkeTemplate: RKE叢集模板
    machines: 主機
    drivers: 驅動管理
    catalogs: 商店設置
    globalDns: 全局DNS服務
    globalDnsEntries: 全局DNS服務
    globalDnsProviders: 全局DNS提供商
    globalRegistry: 全局鏡像庫
    multiClusterApps: 多叢集應用
    security:
      accounts: 使用者
      groupAccounts: 使用者群組
      cloudCredentials: cloud credentials
      tab: 安全
      roles: 角色
      members: 成員
      authentication: 認證
    settings:
      tab: 系統設置
      auth: 訪問控制
      registration: 主機註冊
      advanced: 高級
  user:
    label: "用戶菜單:{username}"
    logout: 註銷
  userPreferences:
    link: "設定"
  nodeTemplates:
    link: "主機模板"
  clusterTemplates:
    link: 叢集模板
  api:
    link: "API & Keys"
  settings:
    tab: 系統設置
    advanced: 高級
  tools:
    alerts: 警告
    backups: 快照
    catalogs: 應用商店
    logging: 日誌
    monitoring: 監控
    notifiers: 通知
    pipeline: 流水線
    tab: 工具
    istio: Istio
    cisScans: CIS掃描
  project:
    none: 專案/命名空間
    namespaces: 命名空間
  dashboard:
    try: 儀錶板


##############################
# Resource Actions
##############################
action:
  activate: 啟動
  addContainer: 部署Pod
  addSidekick: 新增Sidecar
  backupEtcd: 備份
  backupEtcdMessage:
    success:
      title: 備份成功
      message: "{ clusterId }已備份到{ backupType }provider"
  clone: 克隆
  cloneRevision: 克隆修訂
  console: 打開控制台
  convertToService: 轉換為服務
  cordon: 暫停
  deactivate: 停用
  downloadYaml: 下載YAML
  download: 下載
  drain: 驅散
  edit: 編輯
  editConfig: 編輯設定檔
  editService: 編輯服務
  editYaml: 查看/編輯YAML
  evacuate: evacuate
  execute: 執行命令行
  exportConfig: 導出設定
  garbageCollect: 清理
  logs: 查看日誌
  makeDefault: 設置為缺省
  move: 移動
  mute: mute
  nodeConfig: 下載密鑰
  pause: 暫停編排
  pauseAll: 全部暫停
  redeploy: 重新部署
  refreshAuthProviderAccess:
    label: 刷新組成員
    success:
      title: 刷新成功
      message: 已觸發組成員更新
    allSuccess:
      title: 刷新成功
      message: 已為所有用戶觸發組成員更新。
  remove: 刪除
  replay: 重播
  resetDefault: 恢復默認質
  restart: 重启
  restoreFromEtcdBackup: 恢復
  resume: 恢復編排
  resumeCronjob: 重新開始
  retry: 重試
  revert: 恢復默認質
  revision: 新修訂的默認質
  rollback: 回復
  rotate: 更新證書
  rerun: 重新運行
  run: 運行
  runCISScan: 運行CIS掃描
  saveAsTemplate: 另存為RKE模板
  setDefault: 設置為默認質
  setDefaultRevision:
    success:
      title: 成功
      message: '已在{ctName}的默認修訂中設置了{name}。'
  setting: 設置
  start: 啟動
  startAll: 全部開始
  stop: 停止
  stopAll: 全部停止
  stopDrain: 停止Drain
  suspend: 暫停
  test: 測試
  uncordon: 啟動
  unmute: 取消靜默
  upgrade: 升級
  upgradeOrEdit: 升級/編輯
  viewConfig: 查看設定
  viewGraph: 查看圖形
  viewInApi: API查看
  viewInGrafana: 查看Grafana
  viewInstance: 查看實例
  viewYaml: 查看YAML
  enableAutoInject: 啟用Istio自動注入
  disableAutoInject: 禁用Istio自動注入

##############################
# Resource Actions
##############################
validation:
  required: '"{key}"必須設置'
  requiredOrOverride: '"{key}"是必須的或者允許覆蓋'
  arrayLength:
    exactly: '"{key}"應當包含{count, plural,=1{#個條目}other{#個條目}}'
    between: '"{key}"應當介於{min}和{max}之間{max, plural,=1{個條目}other{個條目}}'
    min: '"{key}"應當至少為{count}{count, plural,=1{個條目}other{個條目}}'
    max: '"{key}"應當至多為{count}{count, plural,=1{個條目}other{個條目}}'
  stringLength:
    exactly: '"{key}"應當為{count, plural,=1{#個字符}other{#個字符}}'
    between: '"{key}"應當介於{min}和{max}之間{max, plural,=1{個字符}other{個字符}}'
    min: '"{key}"應當至少為{count}{count, plural,=1{個字符}other{個字符}}'
    max: '"{key}"應當至多為{count}{count, plural,=1{個字符}other{個字符}}'
  number:
    exactly: '"{key}"應當為{val}'
    between: '"{key}"應當介於{min}和{max}之間'
    min: '"{key}"應當至少為{val}'
    max: '"{key}"應當至多為{val}'
  chars: '"{key}"包含{count, plural,=1{個無效字符}other{#個無效字符}}:{chars}'
  dns:
    doubleHyphen: 不能包含兩個連續的連字符
    hostname:
      startDot: '“{key}”不能以點開頭'
      endDot: '"{key}"不能以點結尾'
      empty: '“{key}”至少需一個字符'
      tooLong: '“{key}”不能超過{max}個字符'
      startNumber: '"{key}"不能以數字開頭'
      startHyphen: '“{key}”必須以字母或數字開頭'
      endHyphen: '“{key}”必須以字母或數字結尾'
      emptyLabel: '“{key}”不能有兩個連續的點'
      tooLongLabel: '“{key}”不能超過{max}個字符'
    label:
      startHyphen: '“{key}”必須以字母或數字開頭'
      endHyphen: '“{key}”必須以字母或數字結尾'
      startNumber: '"{key}"不能以數字開頭'
      emptyLabel: '"{key}"不能為空'
      tooLongLabel: '"{key}"不能超過{max}字符'
  k8s:
    identifier:
      startLetter: '“{key}”必須以字母或數字開頭'
      endLetter: '“{key}”必須以字母或數字結尾'
      emptyPrefix: '“{key}”不能有空白的前綴'
      tooLongPrefix: '“{key}”的前綴不能超過{max}個字符'
      emptyLabel: '“{key}”不能有空格鍵'
      tooLongKey: '“{key}”的長度不能超過{max}個字符'
  targets:
    missingProjectId: 必須選擇目標項目。

##############################
# Model Properties
##############################
model:
  account:
    kind:
      registeredAgent: 已註冊代理
      agent: 代理
      service: 服務
      user: 用戶
      admin: 管理員
      project: 環境
  cluster:
      name: 叢集名
  identity:
    displayType:
      user: 用戶
      team: 團隊
      group: 組
      org: 組織
      localUser: 本地用戶
      unknown: "{type}？"
  ingress:
    displayKind: L7 Ingress
  machine:
    role:
      worker: Worker
      etcd: etcd
      controlPlane: Control
  openldapconfig:
    server:
      label: 主機名或IP地址
    serviceAccountUsername:
      label: 服務帳號用戶名
    serviceAccountPassword:
      label: 服務帳號密碼
    domain:
      label: '用戶搜索起點:'
      placeholder: "例如: ou=Users,dc=Mycompany,dc=com"
      help: "僅該搜索起點下的用戶能夠訪問"
  projectMember:
    role:
      member: 成員
      owner: 所有者
      readonly: 唯讀
      restricted: 受限
  service:
    displayKind:
      generic: 服務
      loadBalancer: L4層負載平衡

growl:
  dismiss: 禁止所有通知
  webSocket:
    connecting:
      title: 連接至伺服器時發生錯誤！
      warning: 無法建立到伺服器的WebSocket連接。如果伺服器位於代理或SSL終端設備後面，則瀏覽器無法連接到WebSocket。如果您在代理後面運行伺服器，請確保代理支持WebSockets。在解決問題之前，流量統計、日誌、shell/控制台和資源狀態的自動更新可能無法正常工作。
      safariCertWarning: 另一個可能的原因是Safari不允許使用無法識別的證書進行WebSocket連接，即使您繼續繞過警告也是如此。伺服器必須擁有由Safari自動信任的認可機構簽署的證書。
      disconnectedWarning: "斷開與伺服器的連接，嘗試重新連接..."

storageClass:
  aws-ebs:
    title: Amazon EBS Disk
  azure-disk:
    title: Azure Disk
  azure-file:
    title: Azure File
  local-storage:
    title: Local Storage
  cinder:
    title: Openstack Cinder Volume
  gce-pd:
    title: Google Persistent Disk
  glusterfs:
    title: Gluster Volume
  local:
    title: 本地
  longhorn:
    title: Longhorn
  portworx-volume:
    title: Portworx Volume
  quobyte:
    title: Quobyte Volume
  rbd:
    title: Ceph RBD
  scaleio:
    title: ScaleIO Volume
  storageos:
    title: StorageOS
  vsphere-volume:
    title: VMWare vSphere Volume

volumes ource:
  aws-ebs:
    title: Amazon EBS Disk
  azure-disk:
    title: Azure Disk
  azure-file:
    title: Azure Filesystem
  csi:
    title: CSI
  cephfs:
    title: Ceph Filesystem
  config-map:
    title: Config Map Volume
  cinder:
    title: Openstack Cinder Volume
  secret:
    title: Secret Volume
  empty-dir:
    title: 空目錄 volumes
  fc:
    title: 光纖通道
  flex-volume:
    title: Flex Volume
  csi-volume-longhorn:
    title: Longhorn
  flocker:
    title: Flocker
  gce-pd:
    title: Google Persistent Disk
  glusterfs:
    title: Gluster Volume
  host-path:
    title: 本地路徑
    path:
      label: 主機路徑
      placeholder: '例如: /data'
    kind:
      label: 主機路徑類型檢查
      Any: "任意: 不檢查目標路徑"
      DirectoryOrCreate: '目錄: 不存在則創建'
      FileOrCreate: '文件: 不存在則創建'
      Directory: '現有目錄'
      File: '現有文件'
      Socket: '現有socket文件'
      CharDevice: '現有character設備'
      BlockDevice: '現有block設備'
  iscsi:
    title: iSCSI Target
  local:
    title: 本地
  nfs:
    title: NFS Share
  photon:
    title: Photon Volume
  portworx:
    title: Portworx Volume
  quobyte:
    title: Quobyte Volume
  rbd:
    title: Ceph RBD
  scaleio:
    title: ScaleIO Volume
  storageos:
    title: StorageOS
  vsphere-volume:
    title: VMWare vSphere Volume
  customLogPath:
    mountPath:
      label: 日誌路徑
      placeholder: '例如: /var/www'
      helpText: 容器中的日誌路徑
    logFormat:
      label: 日誌格式
      useCustomRegex: 使用一個自定義Fluentd regex
      useExistingLogFormat: 使用現有的日誌格式
      helpText: 您可以在</a>這裡<a href="http://fluentular.herokuapp.com/" target="_blank">測試正則表達式。

yamlPage:
  errors: yaml文件中存在錯誤

rkeConfigComment:
  ingress: |
    ""
    "  # 當前僅支持nginx的ingress"
    "  # 設置`provider: none`從而禁用ingress控制器"
    "  # 通過node_selector可以指定在某些節點上運行ingress控制器，例如: "
    "     provider: nginx"
    "     node_selector:"
    "       app: ingress"
  network: |
    ""
    "  # 如果您在AWS上使用calico"
    ""
    "     network:"
    "       plugin: calico"
    "       calico_network_provider:"
    "         cloud_provider: aws"
    ""
    "  # 指定flannel的網路接口"
    ""
    "     network:"
    "       plugin: flannel"
    "       flannel_network_provider:"
    "         iface: eth1"
    ""
    "  # 指定canal網路插件的flannel網路接口"
    ""
    "     network:"
    "       plugin: canal"
    "       canal_network_provider:"
    "         iface: eth1"
  services: |
    ""
    " # 自定義服務參數，僅適用於Linux環境"
    " services:"
    " kube-api:"
    " service_cluster_ip_range: 10.43.0.0/16"
    " extra_args: "
    " watch-cache: true "
    " kube-controller:"
    " cluster_cidr: 10.42.0.0/16"
    " service_cluster_ip_range: 10.43.0.0/16"
    " extra_args: "
    " # 修改每個節點子網大小(cidr掩碼長度)，默認為24，可用IP為254個；23，可用IP為510個；22，可用IP為1022個；"
    " node-cidr-mask-size: 24 "
    " # 控制器定時與節點通信以檢查通信是否正常，週期默認5s "
    " node-monitor-period: '5s' "
    " # 當節點通信失敗後，再等一段時間kubernetes判定節點為notready狀態。這個時間段必須是kubelet的nodeStatusUpdateFrequency(默認10s)的N倍，其中N表示允許kubelet同步節點狀態的重試次數，默認40s 。"
    " node-monitor-grace-period: '20s' "
    " # 再持續通信失敗一段時間後，kubernetes判定節點為unhealthy狀態，默認1m0s。"
    " node-startup-grace-period: '30s' "
    " # 再持續失聯一段時間，kubernetes開始遷移失聯節點的Pod，默認5m0s。"
    " pod-eviction-timeout: '1m' "
    " kubelet:"
    " cluster_domain: cluster.local"
    " cluster_dns_server: 10.43.0.10"
    " # 擴展變量 "
    " extra_args:"
    " # 與apiserver會話時的並發數，默認是10 "
    " kube-api-burst: '30' "
    " # 與apiserver會話時的 QPS,默認是5 "
    " kube-api-qps: '15' "
    " # 修改節點最大Pod數量"
    " max-pods: '250' "
    " # secrets和configmaps同步到Pod需要的時間，默認一分鐘"
    " sync-frequency: '3s'"
    " # kubelet默認一次拉取一個鏡像，設置為false可以同時拉取多個鏡像，前提是存儲驅動要為overlay2，對應的Docker也需要增加下載並發數 "
    " serialize-image-pulls: false "
    " # 拉取鏡像的最大並發數，registry-burst不能超過registry-qps ，僅當registry-qps大於0(零)時生效，(默認10)。如果registry-qps為0則不限制(默認5) 。"
    " registry-burst: '10' "
    " registry-qps: '0' "
    " # 以下配置用於配置節點資源預留和限制 "
    " cgroups-per-qos: 'true' "
    " cgroup-driver: cgroupfs "
    " # 以下兩個參數指明為相關服務預留多少資源，僅用於調度，不做實際限制"
    " system-reserved: 'memory=300Mi' "
    " kube-reserved: 'memory=2Gi' "
    " enforce-node-allocatable: 'pods' "
    " # 硬驅逐閾值，當節點上的可用資源少於這個值時，就會觸發強制驅逐。強制驅逐會強制kill掉POD，不會等POD自動退出。"
    " eviction-hard: 'memory.available<300Mi,nodefs.available<10%,imagefs.available<15%,nodefs.inodesFree<5%' "
    " # 軟驅逐閾值 "
    " ## 以下四個參數配套使用，當節點上的可用資源少於這個值時但大於硬驅逐閾值時候，會等待eviction-soft-grace-period設置的時長；"
    " ## 等待中每10s檢查一次，當最後一次檢查還觸發了軟驅逐閾值就會開始驅逐，驅逐不會直接Kill POD，先發送停止信號給POD，然後等待eviction-max-pod-grace-period設置的時長； "
    " ## 在eviction-max-pod-grace-period時長之後，如果POD還未退出則發送強制kill POD"
    " eviction-soft: 'memory.available<500Mi,nodefs.available<50%,imagefs.available<50%,nodefs.inodesFree<10%' "
    " eviction-soft-grace-period: 'memory.available=1m30s' "
    " eviction-max-pod-grace-period: '30' "
    " ## 當處於驅逐狀態的節點不可調度，當節點恢復正常狀態後"
    " eviction-pressure-transition-period: '5m0s' "
    " extra_binds: "
    " - "/usr/libexec/kubernetes/kubelet-plugins:/usr/libexec/kubernetes/kubelet-plugins" "
    " - "/etc/iscsi:/etc/iscsi" "
    " - "/sbin/iscsiadm:/sbin/iscsiadm" "
    " etcd: "
    " # 修改空間配額為$((4*1024*1024*1024))，默認2G,最大8G "
    " extra_args:"
    " quota-backend-bytes: '4294967296' "
    " auto-compaction-retention: 240 #(單位小時) "
    " kubeproxy: "
    " extra_args: "
    " # 默認使用iptables進行數據轉發 "
    " proxy-mode: "" # 如果要啟用ipvs，則此處設置為`ipvs` "
  rancher_kubernetes_engine_config: |
    ""
    "Rancher Config"
  clusterConfig: |
    ""
    "Cluster Config"

units:
  percent: '%'
  cpu: milli CPUs

windowsCluster:
  logging:
    vxlanWarning: |
      由於<a href="https://github.com/kubernetes/kubernetes/issues/79359" target="_blank">kubernetes/kubernetes#79359</a>這個問題，{appName} Logging目前無法運行在VxLan模式下。我們正在與微軟合作， 以修復Kubernetes相關的問題。
    kafka:
      brokerTypeHelpText: 使用Broker列表作為Kafka連接入口點。
    helpText: '我們將使用fluentd從每個容器中收集stdout/stderr日誌，以及收集每個<b>Linux</b>主機<code >/var/log/containers/</code>路徑和每個< b>Windows</b>主機<code >c:/var/log/containers/</code>路徑下的日誌文件，並且可以將日誌發送到下面配置的目標日誌收集服務。 '
  istio: 在Windows叢集中不支持Istio。
  pipelines: 在Windows叢集中不支持pipelines。

pipelinesPage:
  table:
    status: 狀態
    noData: 沒有配置流水線
    noMatch: 沒有符合當前搜索的流水線規則
  pipelines: 流水線
  lastActivity: 最後運行

pipelinesSetting:
  globalConfigChangeLabel: 使用OAuth應用程序去認證
  customConfigChangeLabel: 使用另一個OAuthe應用程序
  userGlobalConfig: GitHub身份驗證已啟用，您可以使用它來直接啟用Pipline。
  gitAuthentication: Git驗證
  authenticateWithGit: 用Git進行身份驗證
  authenticatedUsers: 已授權的用戶
  sureToDisableOAuth: 您確定要取消授權嗎？
  disableOAuth: 取消授權
  dataClear: 清除數據
  resetData: 重置所有與流水線相關的數據
  clearing: 清除中
  sureToClearData: 確定要清除數據嗎？
  clearData: 清除數據
  error:
    limit: 保存限制和預留發生錯誤
  info:
    noPermission: "您沒有配置流水線的權限。"

repositories:
  header: 代碼庫
  enable: 設置代碼庫
  message: 選擇示例代碼庫或者使用您自己的代碼庫來設置流水線。
  table:
    repository: 代碼庫
    noData: 沒有任何代碼庫
    noMatch: 沒有代碼庫符合當前搜索

newPipeline:
  steps:
    label: 流水線配置
  save: 保存

newPipelineStage:
  errors:
    name:
      required: 請輸入名稱。
  header:
    create: 添加階段
    edit: 編輯階段
  name:
    placeholder: "例如: compile"
  addStep: 添加步驟
  trigger:
    webhook: 推送
    webhookPR: 拉取請求
    webhookTag: 標籤

newPipelineStep:
  header:
    create: 添加步驟
    edit: 編輯步驟
  stepType:
    label: 步驟類型
    image: 基礎鏡像
    env: 環境變量
    enableBranch: 設置流水線
    publishCatalog:
      label: 發布應用模版
      secret:
        label: 密文
        missingKey: 所選的密文沒有{key}字段.
      auth:
        http: '密文中的<code>USERNAME</code>和<code>PASSWORD</code>將被作為用戶名和密碼。 '
        ssh: '密文中的<code>DEPLOY_KEY</code>將被作為Deploy Key'
      stepName: 發布應用模版
      targets:
        label: 協議
        http: 通過HTTP協議發佈到Git
        ssh: 通過SSH協議發佈到Git
      path:
        label: Chart目錄
        placeholder: '例如: ./charts/wordpress/latest'
        helpText: '代碼庫中<code style="padding: 2px 5px;">Chart.yaml</code>所在的目錄'
      catalogTemplate:
        label: 應用模版名稱
        placeholder: '例如: wordpress'
        helpText: 所發布應用模版的名稱。
      version:
        label: 應用模版版本
        placeholder: '例如: latest'
        helpText: 所發布應用模版的版本。
      gitUrl:
        label: Git地址
        placeholder:
          ssh: '例如: git@github.com:myrepo/charts.git'
          http: '例如: https://github.com/myrepo/charts.git'
        helpText: 把應用模版發佈到這個Git地址。
        error: Git地址必須以http或https開頭。
      gitBranch:
        label: Git分支
        placeholder: '例如: dev'
        helpText: 把應用模版發佈到這個Git分支。
      gitAuthor:
        label: 作者
        placeholder: '例如: user'
        helpText: 提交信息中所包含的作者信息。
      gitEmail:
        label: 作者郵箱
        placeholder: user@example.com
        helpText: 提交信息中所包含的作者郵箱信息。


    applyApp:
      label: 部署應用
      stepName: 部署應用
      catalog:
        label: 應用商店
      catalogTemplate:
        label: 應用模版
        helpText: 你可以選擇已有應用模版或者輸入新的模版。
      version:
        label: 模版版本
        helpText: 你可以選擇已有版本或者輸入新的版本。
      name:
        label: 應用名稱
        placeholder: '例如: myapp'
      targetNamespace:
        label: 命名空間
        helpText: 部署應用的命名空間。

    applyYaml:
      label: 部署YAML
      yaml: YAML路徑
      env:
        header: 環境變量
        addActionLabel: 添加變量
        keyPlaceholder: IMAGE_TAG
      errors:
        path:
          required: 請輸入YAML路徑。
    scm:
      noYaml: 代碼庫中沒有發現<code>.rancher-pipeline.yml</code>文件。
      demoGroup: 示例代碼庫
      selectRepository: 代碼庫
      add: 選擇代碼庫
      refresh: 刷新代碼庫
      user: 用戶
      trigger: 流水線觸發
      noWebhook: 沒有設置代碼庫Webhook的權限
    build:
      imageName:
        placeholder: '例如: example/app:v1'
      errors:
        tag:
          required: 請輸入鏡像名稱
        dockerfilePath:
          required: 請輸入Dockerfile的路徑。
        registry:
          required: 請選擇鏡像倉庫。
      noRegistry: 沒有配置鏡像倉庫。您可以點擊<a href="{route}" target="_blank" rel="nofollow noreferrer">這裡</a>配置鏡像倉庫。
      pushRemote: 推送鏡像到遠端鏡像倉庫。
      label: 構建並發布鏡像
      dockerFilePath: Dockerfile路徑
      buildContext: 構建上下文
    task:
      label: 運行腳本
      shellScript: 腳本
      customEntryPoint: 自定義EntryPoint
      secret: 從密文中註入環境變量
      errors:
        image:
          required: 請輸入基礎鏡像。
        shellScript:
          required: 請輸入要運行的腳本。
      privileged:
        label: 以特權模式運行該步驟。
      shell:
        label: 腳本
      command:
        label: 命令
        placeholder: EntryPoint的參數
      entryPoint:
        label: EntryPoint
        placeholder: 該項留空將使用默認的EntryPoint

pipelineDetailPage:
  header: '構建項目: {name}'
  repository: '代碼庫:'
  lastRun: 最後運行
  triggered: '觸發時間'
  commitMessage: 提交信息
  activity:
    title: 構建記錄
    detail: 流水線的歷史構建記錄
    table:
      noData: 沒有任何運行任務。
      noMatch: 沒有運行任務符合當前搜索。
      status: 狀態
      branch: '分支:'
      runNumber: 運行編號
      commit: 提交信息
      triggered: 觸發時間

runPipeline:
  title: '運行{name}'
  noBranch: '該代碼庫沒有發現<code>.rancher-pipeline.yml</code>文件。您可以點擊<b>編輯配置</b>通過嚮導的方式配置流水線，也可以點擊<b>查看/編輯YAML</b>直接修改配置。 '
  branch:
    label: '分支'

pipelineSetting:
  title: '流水線設置: "{name}"'

buildDetailPage:
  header: '流水線運行: #{name}'
  duration: 構建時間
  stillRunning: 仍在運行
  log:
    title: 詳細日誌
    detail: 當前流水線運行的詳細日誌。
    waiting: 請等待...
    loading: 加載中...


enablePipeline:
  header: 啟用代碼庫認證
  configNow: 立即設置
  helpText:
    代碼庫認證尚未開啟,需要先開啟代碼庫認證。
  noPermission:
    代碼庫認證尚未開啟,需要聯繫項目管理員設置認證。

editYamlPipeline:
  title: '查看/編輯YAML{name}'
  branch:
    label: '分支'

editPipelineConfig:
  header: 修改流水線配置
  pushToReop: 將如下的流水線配置自動推送到遠端代碼庫。
  download: 僅下載流水線配置。
  timeout:
    label: 超時時間
    helpText: 如果構建在該時間內沒有執行完成，則終止本次構建。
pipelineSelector:
  header: 觸發規則
  table:
    type: 類型
    value: 值
  title:
    include: '當滿足條件時運行該{type}'
    exclude: '當滿足條件時不運行該{type}'
  addRule: 添加規則
  branch: 分支
  event: 事件
  pr: 拉取請求
  push: 推送
  tag: Tag

fromSecret:
  addFrom: 從密文中添加
  secret:
    label: 密文
  prefixOrKey:
    label: 鍵
  prefix:
    label: 別名
  keyLabel: 變量
  keyPlaceholder: '例如: Foo'
  valueLabel: 值
  valuePlaceholder: '例如: bar'

pipelineNotification:
  header: 通知
  when: 當構建狀態為
  condition:
    success:
      label: 成功
    changed:
      label: 改變
    failed:
      label: 失敗
    required: 構建狀態必選
  recipients:
    required: 接受者必填
  asMessage: 發送信息到

selectValueCheck:
  message: |
    {values, plural,
      =1 {請選擇新的值。以下內容不再有效:​​}
      other {請選擇新的值。以下內容不再有效:​​}
    }
