languageName: "English"
languageContribute: "Help Translate Rancher"

##############################
# Really generic things used in multiple places (use sparingly)
##############################
generic:
  actions: Actions
  activate: Activate
  add: Add
  all: All
  any: Any
  as: as
  cancel: Cancel
  closeModal: Close
  cluster: Cluster
  collapseAll: Collapse All
  command: Command
  comingSoon: Coming Soon
  confirm: Confirm
  containers: Containers
  created: Created
  createdDate: "Created {date}"
  default: Default
  description: Description
  details: Details
  disable: Disable
  disabled: Disabled
  displayName: Display Name
  dockerId: Docker ID
  domainName: Domain Name
  done: Done
  edit: Edit
  emptyString: ""
  enable: Enable
  enabled: Enabled
  entrypoint: Entrypoint
  environment: Environment
  expandAll: Expand All
  gigabyte: 'GB'
  hardware: Hardware
  healthy: Healthy
  help: Help
  id: ID
  image: Image
  internal: Internal
  ipAddress: IP Address
  key: Key
  limit: Limit
  limits: Limits
  loading: "Loading..."
  mibibyte: 'MiB'
  missing: "*%MISSING%*"
  member: Member
  moreActions: More Actions
  na: 'n/a'
  name: Name
  namespace: Namespace
  namespaces: Namespaces
  never: Never
  no: "No"
  node: Node
  noRating: No Rating
  none: None
  owner: Owner
  paste: Paste
  port: Port
  ports: Ports
  project: Project
  remove: Remove
  role: Role
  random: Random
  save: Save
  saved: Saved
  saving: Saving
  search: Search
  searching: 'Searching...'
  searchOrCustomInput: Search or input your custom value.
  seconds: seconds
  select: Select
  service: Service
  services: Services
  size: Size
  state: State
  tags: Tags
  test: Test
  testing: Testing
  to: To
  total: Total
  type: Type
  unknown: Unknown
  user: User
  upload: Upload
  uuid: UUID
  url: URL
  value: Value
  yes: "Yes"

realmNames:
  all: All
  usWest: US West
  usEast: US East
  asia: Asia
  euWest: EU West
  euEast: EU East

##############################
# Routes
##############################
accountsPage:
  detail:
    header: User Details
    table:
      headers:
        permission: Permission
        role: Role
        clusterName: Cluster
        projectName: Project
        active: Active
        created: Granted
      global:
        title: Global Permissions
        description: Access to manage things that affect the entire installation
        admin: This user is an administrator and has all permissions.
        noRoles: This user has no global roles
      cluster:
        title: Cluster Roles
        description: Roles granted to this user for individual clusters
        noRoles: This user has no cluster roles
      project:
        title: Project Roles
        description: Roles granted to this user for individual project
        noRoles: This user has no project roles
      roles:
        title: Roles
  index:
    header: Users
    localLink: Add User
    table:
      id: ID
      kind: Kind
      username: Username
      identity: Identity
      noData: There are no users yet
      noName: None
  new:
    header: Add User
    errors:
      usernameReq: Username is required.
      usernameInExists: Username is already in use. Please choose a new username.
      pwReq: Password is required.
      role: New users are required to have a role. Select a role from the list.
    form:
      username:
        labelText: Username
        placeholder: "e.g. jsmith"
      password:
        labelText: Password
      name:
        labelText: Display Name
        placeholder: "e.g. John Smith"
      type:
        labelText: Account Type
      description:
        labelText: Description
        placeholder: "e.g. This account is for John Smith"
  modal:
    password: Change Password

podSecurityPoliciesPage:
  index:
    header: Pod Security Policies
    description: Apply Policies to Pods created by a user with this Role
    table:
      name: Name
      created: Created Time
      noData: There are no pod security policies yet
      noMatch: No pod security policies match the current search
  addPodSecurityPolicy: Add Policy
  editPodSecurityPolicy: Edit Policy
  detail:
    header: Policy
  saveEdit: Edit
  saveNew: Create
  new:
    errors:
      nameReq: Name is required.
      nameInExists: Name is already exists. Please use a new pod security policy name.
    form:
      name:
        labelText: Name
        placeholder: "e.g. policy"

rolesPage:
  title: Role
  index:
    localLink: Add Role
    table:
      name: Name
      created: Created Time
      builtin: Built-In
      noData: There are no roles yet
      noMatch: No roles match the current search
      userId: User
      subjectKind: Kind
      template: Template
  addRole: Add Role
  editRole: Edit Role
  saveEdit: Edit
  saveNew: Create
  new:
    errors:
      nameReq: Name is required.
      memberReq: Member is required.
      nameInExists: Name is already exists. Please use a new role name.
      ruleResourceReq: Resource is required for a rule.
      roleTemplate: Role Template is required.
    form:
      name:
        labelText: Name
        placeholder: "e.g. Developers"
      context:
        labelText: Context
      allow:
        create: Create
        delete: Delete
        deletecollection: 'Delete Collection'
        get: Get
        list: List
        patch: Patch
        update: Update
        watch: Watch
        labelText: Allow
        resource: Resource
        addAction: Add Resource
      otherRole:
        labelText: Include other roles
        role: Role
        addAction: Add Role
      policy:
        policy: Policy
        addAction: Add Policy

apiPage:
  header: API & Keys
  actionButton: Add Key
  currentEndpoint: 'Endpoint:'
  detail: API Keys are tied to your specific user ({name}) and can create, delete, and manipulate all Clusters and Projects which you have access to.
  table:
    state: State
    name: Access Key
    description: Description
    created: Created
    expires:
      label: Expires
      never: Never
    noData: You do not have any API keys yet.

authPage:
  shibboleth:
    enabled:
      header: "{providerName} is enabled"
      required: |
        {appName} is configured to allow access to {orgs, plural,
          =0 {no organizations}
          =1 {# organization}
          other {# organizations}
        } and {users, plural,
          =0 {no users}
          =1 {# user}
          other {# users}
        }.
      restricted: |
        {appName} is configured to allow access to environment members, {orgs, plural,
          =0 {no organizations}
          =1 {# organization}
          other {# organizations}
        } and {users, plural,
          =0 {no users}
          =1 {# user}
          other {# users}
        }.
      unrestricted: "{appName} is configured to allow access to any {providerName} user."
      authenticated:
        header:
          text: Authentication
      disableAccess:
        header: "Danger Zone&trade;"
        warning: '<b class="text-danger">Caution:</b> Disabling access control will give complete control over {appName} to anyone that can reach this page or the API.'
        confirmDisable: "Are you sure?  Click again to really disable access control"
        disable: Disable access control
      groupsField: 'Groups:'
      displayName: 'Display Name:'
      userName: 'Username:'
      userId: 'User ID:'
    disabled:
      header: '1. Configure Shibboleth Account'
      label: "{providerName} is not configured"
      warning: "{appName} can be configured to restrict access to a set of {providerName} users and groups.  This is not currently set up, so anybody that reach this page (or the API) has full control over the system."
      name:
        labelText: Display Name Field
      username:
        labelText: User Name Field
      uid:
        labelText: UID Field
      groups:
        labelText: Groups Field
      testAuth:
        header: '2. Test and enable authentication'
        subtext: 'Check that your application is configured correctly by testing authentication with it:'
        buttonText:
          pre: Authenticate with IDP
          post: Waiting to hear back from IDP


    providerName:
      shibboleth: Shibboleth
  root:
    header: Access Control
  github:
    standard: GitHub
    enterprise: GitHub Enterprise
    header:
      enabled:
        label: "{github} is enabled"
        required: "{appName} is configured to allow access to authorized users and organizations."
        restricted: "{appName} is configured to allow access to project members, authorized users and organizations."
#        required: |
#          {appName} is configured to allow access to {orgs, plural,
#            =0 {no organizations}
#            =1 {# organization}
#            other {# organizations}
#          } and {users, plural,
#            =0 {no users}
#            =1 {# user}
#            other {# users}
#          }.
#        restricted: |
#          {appName} is configured to allow access to project members, {orgs, plural,
#            =0 {no organizations}
#            =1 {# organization}
#            other {# organizations}
#          } and {users, plural,
#            =0 {no users}
#            =1 {# user}
#            other {# users}
#          }.
#        unrestricted: "{appName} is configured to allow access to any {github} user."
      disabled:
        label: GitHub is not configured
        warning: "{appName} can be configured to restrict access to a set of GitHub users and organization members."

    authenticated:
      header:
        text: Authentication
        enterpriseHostName: "Enterprise Host:"
        clientId:
          text: "Client ID:"
          helpText: "To change the configured GitHub application, disable access control below and then set it up again."
      disableAccess:
        header: "Danger Zone&trade;"
        warning: '<b class="text-danger">Caution:</b> Disabling access control will give complete control over {appName} to anyone that can reach this page or the API.'
        confirmDisable: "Are you sure?  Click again to really disable access control"
        disable: Disable Github access
    notAuthenticated:
      header: "1. Setup a GitHub Application"
      ul:
        li1:
          text: 'For standard GitHub, <a href="https://github.com/settings/developers" target="_blank">click here</a> to go applications settings in a new window.'
          ul:
            li1: "For Github Enterprise, login to your account.  Click on Settings, then Applications."
        li2:
          text: 'Click "Register new application" and fill out the form:'
          ul:
            li1: '<b>Application name:</b> <span class="text-muted">Anything you like, e.g. My {appName}</span>'
            li2: Homepage URL
            li3: '<b>Application description:</b> <span class="text-muted">Anything you like, optional</span>'
            li4: Authorization callback URL
        li3:
          text: 'Click "Register Application" '
      form:
        header: '2. Configure {appName} to use your application for authentication'
        subtext: 'Copy and paste the Client ID and Secret from the upper-right corner of your newly-created application.'
        clientId:
          labelText: Client ID
        clientSecret:
          labelText: Client Secret
        ghEnterprise:
          labelText: Use a private GitHub Enterprise installation
        isGHEnterprise:
          labelText: Use a secure connection
        enterpriseHost:
          labelText: Enterprise Host
          placeholder: 'e.g. github.example.com'
    testAuth:
      header: '3. Test and enable authentication'
      subtext: 'Check that your application is configured correctly by testing authentication with it:'
      buttonText:
        pre: Authenticate with GitHub
        post: Waiting to hear back from GitHub

  azuread:
    header:
      enabled: 'Azure AD Authentication is <b>enabled</b>'
      disabled: 'Azure AD Authentication is not configured'
    subtext:
      enabled: '{appName} is configured to allow access to accounts in Azure AD'
      disabled: '{appName} can be configured to restrict access to a set of accounts defined in the {appName} database.  This is not currently set up, so anybody that reach this page (or the API) has full control over the system.'
    enabled:
      header: 'Danger Zone&trade;'
      warning: '<b class="text-danger">Caution:</b> Disabling access control will give complete control over {appName} to anyone that can reach this page or the API.'
      reallyDisable: 'Are you sure?  Click again to really disable access control'
      promptDisable: Disable access control
    configure:
      header: '1. Configure Azure AD Account'
      tenantId:
        label: Tenant ID
        placeholder: A long UUID string
        help: From the Azure AD portal
      clientId:
        label: Client ID
        placeholder: A long UUID string
      domain:
        label: Domain
        placeholder: e.g. youcompany.onmicrosoft.com
      adminAccountUsername:
        label: Admin Account Username
        placeholder: e.g. rancher-admin
        help: A user that can read information about other users
      adminAccountPassword:
        label: Admin Account Password
    test:
      header: '2. Test and enable authentication'
      help: 'Check that everything is configured correctly by testing authentication with your account:'
      username:
        label: Login Username
        placeholder: 'e.g. jsmith'
      password:
        label: Login Password
      pre: Authenticate with Azure
      post: Waiting to hear back from Azure


  localAuth:
    header:
      enabled: 'Local Authentication is enabled'
      disabled: 'Local Authentication is not configured'
    subtext:
      enabled:
        text: '{appName} is configured to allow access to accounts in its local database.'
        alwaysOn: 'Local Authentication will always be enabled but you may select another authentication scheme to use in addtion to local.'
        linkText: Manage Accounts
      disabled: '{appName} can be configured to restrict access to a set of accounts defined in the {appName} database.  This is not currently set up, so anybody that reach this page (or the API) has full control over the system.'
    accessEnabled:
      header: 'Danger Zone&trade;'
      warning: '<b class="text-danger">Caution:</b> Disabling access control will give complete control over {appName} to anyone that can reach this page or the API.'
      buttonText:
        disable: 'Are you sure?  Click again to really disable access control'
        prompt: Disable access control
    accessDisabled:
      header: '1. Setup an Admin user'
      helpText: 'This user will become the admin that has full control over {appName}.'
      form:
        login:
          labelText: Login Username
          placeholder: 'e.g. jsmith'
        name:
          labelText: Full Name
          placeholder: 'e.g. John Smith'
        password:
          labelText: Password
        confirmPassword:
          labelText: Confirm Password
    accessControl:
      header: '2. Enable Access Control'
      helpText: 'Click to enable access control and log in.'
      buttonText:
        pre: Enable Local Auth
        post: 'Enabling...'

balancerPage:
  noMatch: No balancers match the current search
  noData: There are no balancers to show.
  table:
    target: Target

catalogPage:
  index:
    header: Catalog
    refreshBtn: Refresh
    all: All Catalogs
    manage: Manage
    search:
      label: Search
    filters:
      label: Catalog Filter
    certified:
      rancher:
        rancher: Rancher Labs
        partner: Official
      pl:
        rancher: Core
        partner: Official
    noData:
      singular: There are no compatible templates.
      plural: There are no compatible templates in this catalog.
    action:
      launch: View Details
      notCompatible: Not Compatible
      alreadyDeployed: Already Deployed

certificatesPage:
  cn: Domain Name
  expiresDate: Expires
  fingerprint: Fingerprint
  valid: Valid Beginning
  expires: Expires
  algorithm: Algorithm
  issuer: Issuer
  serialNumber: Serial Number
  domainNames:
    labelText: Domain Names
    single: '<a href="https://{cn}" target="_blank" rel="nofollow nefererrer noopener">{cn} <i class="icon icon-sm icon-external-link"/></a>'
    withSan: |
      <a href="https://{cn}" target="_blank" rel="nofollow nefererrer noopener">{cn} <i class="icon icon-sm icon-external-link"/></a> +
      {sans, plural,
      =1 {1 other}
      other {# others}
      }
    wildcardSingle: '{cn}'
    wildcardWithSan: |
      {cn} +
      {sans, plural,
      =1 {1 other}
      other {# others}
      }
  detail:
    header: 'Certificate: {name}'
  index:
    header: Certificates
    linkTo: Add Certificate
    noData: You do not have any certificates yet.
  new:
    header: Add Certificate
    form:
      name:
        placeholder: e.g. mydomain.com
      description:
        placeholder: e.g. EV cert for mydomain.com

membersPage:
  title: Members
  add:
    title: 'Add {type} Member'
    form:
      member: Member
      role: Role
      kind: Kind
  index:
    localLink: 'Add Member'
    table:
      name: Name
      created: Created Time
      noData: There are no members yet
      noMatch: No members match the current search
      userId: User
      subjectKind: Kind
      template: Role

namespacesPage:
  header: Namespaces
  addNamespace: Add Namespace
  noMatch: No namespaces match the current search.
  noData: This cluster doesn't have any namespaces yet.
  table:
    name:
      label: Namespace
    description:
      label: Description
    project:
      label: Project
    pods:
      label: Pods
    workloads:
      label: Workloads
    created:
      label: Created

clusterPage:
  edit: Edit Cluster

projectsPage:
  header: Projects
  addProject: Add Project
  editProject: Edit Project
  noMatch: No projects match the current search.
  noData: This cluster doesn't have any projects yet.
  name:
    label: Project Name
    placeholder: e.g. lab
  created:
    label: Created
  psp:
    label: Pod Security Policy
  members:
    user: User
    group: Group
    serviceaccount: Service Account
    labelText: Members
    addMember: Add Member
    addUser: Add User
    noAddUser: You are the only active registered user.
    addGroup: Add Group
    addServiceAccount: Add Service Account
    multipleRoles: Multiple Roles
    customRoles: Custom Roles
    kind:
      label: Kind
    name:
      label: Name
    role:
      label: Role
    errors:
      nameReq: Name is required.
      nameInExists: Name is already exists. Please use a new project name.
      memberNameReq: Name is required for a member
      memberRoleReq: Role is required for a member

clustersPage:
  header: Clusters
  newCluster: Add Cluster
  newClusterName: "Add Cluster: {name}"
  editClusterName: "Edit Cluster: {name}"
  cluster:
    label: Cluster Name
  provider:
    label: Provider
  nodes:
    label: Nodes
  cpu:
    label: CPU
  memory:
    label: RAM
  pod:
    label: Pods
  storage:
    label: Disk

ingressPage:
  header: 'Ingress: {name}'
  table:
    noMatch: No ingresses match the current search.
containerPage:
  header: 'Container: {name}'
  portsTab:
    header: Ports
    detail: 'Mappings of container listening ports to host ports on public IP addresses'
    hostPrimaryIp: '({ip})'
  linksTab:
    header: Links
    detail: 'These properties show the links between containers in this container.'
    noData: This Container has no links
  volumesTab:
    header: Volumes
    detail: 'These properties show the volumes attached to your container.'
    table:
      path: Mount Point
      shared: Shared With
      writable: Writable
      noData: This container has no volumes mounted
      noMatch: No volumes match the current search
      noContainers: No other containers
podPage:
  header: 'Pod: {name}'
  nodeIp: Node IP
  podIp: Pod IP

containersPage:
  table:
    sparkPrefixCpu: "CPU: "
    sparkPrefixMemory: "Memory: "
    sparkPrefixNetwork: "Network: "
    sparkPrefixStorage: "Storage: "
    noData: There are no containers to show.
    noMatch: No containers match the current search.
  welcome:
    container: Get started right away
    containerLink: Add a container
    orchestrator: Install another orchestrator
    kubernetesLink: Install Kubernetes

clusterDashboard:
  cpu: CPU
  memory: Memory
  pods: Pods
  subtitle: "{used} of {total} used"
  node: Nodes
  etcd: Etcd
  scheduler: Scheduler
  controllerManager: Controller Manager
  value: Value
  notActive: This cluster is currently <b>{state}</b>.
  notReady: This cluster is currently <b>{state}</b>; areas that interact directly with it will not be available until the API is ready.
  noNodes: There are no nodes.
  alert:
    node: "Alert: Node {node} is not active."
    component: "Alert: Component {component} is unhealthy."

dnsPage:
  noMatch: No records match the current search
  noData: There are no DNS records to show
  type:
    arecord: External IP
    cname: Hostname
    alias: Alias
    workload: Workload
    selector: Selector
    clusterIp: Cluster IP
    unknown: Unknown
  table:
    target: Target
    clusterIpDetail: 'Cluster IP: {ip}'

editDns:
  title:
    new: Add DNS Record
    edit: Edit DNS Record
    view: "DNS Record: {name}"
  name:
    placeholder: e.g. myapp
  description:
    placeholder: e.g. Current version of MyApp
  selector:
    label: Container Label Selector
    keyLabel: Label
    addActionLabel: Add Selector
  recordType:
    label: "Resolves To"
    arecord: One or more external IP addresses
    cname: An external hostname
    alias: Alias of another DNS record's value
    workload: One or more workloads
    selector: The set of pods which match a selector
  target:
    arecord: Target IP Addresses
    cname: Target Hostname
    alias: Target DNS Records
    workload: Target Workloads
    selector: Target Pod Selectors
  add:
    arecord: Add Target IP
    alias: Add Target Record
    workload: Add Target Workload
    selector: Add Target Selector
  placeholder:
    arecord: e.g. 19.82.2.24
    cname: e.g. example.com
  prompt:
    alias: Select a DNS Record...
    workload: Select a Workload...
  errors:
    targetRequired: 'One or more "Targets" are required'
    selectorRequired: 'One or more "Pod selectors" are required'
    mixedAlias: An Alias cannot target a mix of CNAME and other records
    multipleCname: An Alias cannot target more than one CNAME record

cruPersistentVolumeClaim:
  title:
    define: Define Volume Claim
    new: Add Volume Claim
    edit: 'Edit Volume Claim: {name}'
    view: 'Persistent Volume: {name}'
  define:
    addActionLabel: Define
  capacity:
    label: Capacity
    unit: GiB
  name:
    placeholder: e.g. myvol
  source:
    label: Source
    pv: Use an existing persistent volume
    storageClass: Use a Storage Class to provision a new persistent volume
  pv:
    label: Persistent Volume
    prompt: Select a persistent volume...
  storageClass:
    label: Storage Class
    prompt: Use the default class

cruVolume:
  title:
    new: Define Ephemeral Volume
  define:
    addActionLabel: Define
  name:
    placeholder: e.g. myvol
  source:
    label: Source
    title: Source Configuration
    detail: Configure options for the selected volume source
    prompt: Choose a volume source...

# If you change translations here also change the translation in app/utils/constants.js under the FALLBACK_TRANSLATIONS key
# those are present in case we have an error in the app and can not load the translations file
# the error page will at least make a little sense
failWhalePage:
  header: Error
  reloadButton: |
    <a href="#" onclick="window.location.href = window.location.href; return false;">Reload</a> to try again or
  logoutButton: log out

time:
  now: Now
  mins: |
    {mins, plural,
    =1 {# min}
    other {# mins}
    }
  minsAgo: |
    {mins, plural,
    =1 {# min ago}
    other {# mins ago}
    }
  secsAgo: |
    {secs, plural,
    =1 {# second ago}
    other {# seconds ago}
    }

haPage:
  header: High Availability
  setup:
    prefix: "Multiple server containers can be deployed on different hosts so that {appName} keeps running even if one of the hosts fail.  "
    link: See documentation
    suffix: " for information on setup and usage."
  table:
    address: Advertised  Address
    port: Port
    heartbeat: Last Seen
    clustered: Clustered

nodesPage:
  header: Nodes
  editCluster: Edit Cluster
  nodePoolGroup: "Pool: {name}"
  table:
    clusterName: Cluster
    role: Roles
    cpu: CPU
    memory: RAM
    disk: Disk
    pod: Pods
    docker: Docker
    instanceState: Container States
    instanceStateWithIcon: States
    noData: This cluster does not have any nodes yet
    noMatch: No nodes match the current search

hostsPage:
  cloudHostsPage:
    addPage:
      launch: Launch
      header: Add Node
      name:
        label: Node Name
        placeholder: e.g. node01
      transferUnit: TB
      instance: 'Type:'
      storage: 'Storage:'
      transfer: 'Transfer:'
      zone: 'Zone:'
      env: 'Environment:'
      size: 'Size:'
      os: 'OS:'
      driver: 'Driver:'
      template: 'Template Name:'
  addContainer: Add Container
  new:
    header:
      customText: Add Custom Host
      text: Add Node
    manageLink: Manage available machine drivers
    custom: Add Custom Host
    name:
      placeholder: e.g. node01
    addCluster:
      label: "Cluster Options"
      description: Attach this new node to a cluster, delegate roles, etc.
      cluster:
        label: Cluster
      roles:
        label: Roles
      table:
        label:
          etcd: Use for etcd
          control: Use for management
          worker: Use as worker node

  hostPage:
    header:
      title: 'Node: {name}'
    hostname: Hostname
    ipAddress: IP Address
    conditions:
      diskSpace: Disk Space
      diskPressure: Disk Pressure
      memoryPressure: Memory Pressure
      ready: Kubelet
    limits:
      cpu: 'CPU Limit:'
      memory: 'Memory Limit:'
      storage: 'Volumes Local Limit:'
    infoMultiStats:
      ip: 'IP'
      cpu: 'CPU'
      memory: 'Memory'
      storage: 'Volumes'
      provider:
        labelText: 'Provider:'
        noHost: Custom
      kernel: 'Kernel'
      docker: 'Docker:'
      os: 'OS'
      milliCpu:
        labelText: mCPU
    containersTab:
      header: Containers
      detail: A list of containers running on this host
    portsTab:
      header: Ports
      detail: 'These properties show what ports have been mapped and where.'
      table:
        header:
          ip: IP Address
          port: Port
          service: Service
          container: Container
        body:
          noData: This host does not have any ports
    storageTab:
      header: Volumes
      detail: 'These properties show the volume details of your host.'
      table:
        header:
          state: State
          hostPath: Host Path
          mounts: Mounts
        body:
          noData: This host does not have any volumes

k8sImport:
  header: Import Existing Kubernetes
  name:
    label: Cluster Name
    placeholder: e.g. my-imported-cluster
  kubeConfig:
    label: Kubeconfig file to import
    placeholder: Import or paste in the Kubeconfig file of the cluster to use.
  actionLabel: Import

k8sPage:
  header: Kubernetes
  dashboard:
    title: Dashboard
    detail: Access the native Kubernetes dashboard.
    button: Launch Dashboard
  shell:
    title: Shell
    detail: Run <code>kubectl</code> commands from your browser.
    button: Launch kubectl
  configFile:
    title: Config File
    detail: Generate a Kubernetes config file to use <code>kubectl</code> on your desktop.
    button: Kubeconfig File
    generating: Generating...
    usage:
      helpText: |
        Put this into <code>~/.kube/config</code>:
      downloadText: |
        Then <a href="{downloadUrl}" target="_blank">download</a> (if needed) and run <code>kubectl</code>

loginPage:
  greeting: "Howdy!<br><span>Welcome to {appName}</span>"
  githubMessage: "{appName} uses GitHub to manage accounts and teams.  Click the button below to log in and give us read-only access to your basic GitHub account information."
  shibbolethMessage: "{appName} uses Shibboleth to manage accounts.  Click the button below to log in to the configured Shibboleth IDP."
  shibbolethError:
    401: "Unauthorized"
    500: "Internal Server Error"
    generic: "There was an error ({errorCode}) while trying to log you in. Please try again."
  error:
    authFailedCreds: "Logging in failed: Check credentials, or your account may not be authorized to log in."
    authFailed: "Logging in failed: Your account may not be authorized to log in."

machinePage:
  header: Node Drivers
  inactive: Inactive
  subtext: "Additional <code>docker-machine</code> drivers can be loaded here and used in the Add Node screen."
  add: Add Node Driver
  builtin: Built-In
  url: Location

# If you change translations here also change the translation in app/utils/constants.js under the FALLBACK_TRANSLATIONS key
# those are present in case we have an error in the app and can not load the translations file
# the error page will at least make a little sense
notFoundPage:
  header: "The page you were looking for doesn't exist!"
  linkTo: Go Home

registriesPage:
  index:
    header: Registry Credentials
    linkTo: Add Registry
    table:
      header:
        state: State
        address: Address
        username: Username
        created: Created
      body:
        noData: "You don't have any registry credentials yet"
  new:
    header: Add Registry
    form:
      custom:
        labelText: Address
        placeholder: e.g. registry.example.com
        help: Just the hostname or IP address, do not include the protocol (https://)
      username:
        labelText: Username
        placeholder: e.g. username
      password:
        labelText: Password
        placeholder: e.g. password

secretsPage:
  index:
    header: Secrets
    linkTo: Add Secret
    noData: You do not have any secrets yet
    noMatch: No Secrets match the current search
  table:
    keys: Keys

configMapsPage:
  index:
    header: Config Maps
    linkTo: Add Config Map
    noData: You do not have any config maps yet
    noMatch: No Config Maps match the current search
  table:
    keys: Keys

servicePage:
  header: 'Workload: {name}'
  globalScale: '{scale} per host'
  multistat:
    type: 'Workload Type:'
    fqdn: 'FQDN:'
    scale: 'Scale:'
    image: 'Image:'
    namesapce: 'Namesapce:'
    created: 'Created:'
    daemonSetScale: '1 per node'
  serviceType:
    deployment: Deployment
    replicaSet: Replica Set
    statefulSet: Stateful Set
    daemonSet: Daemon Set
    replicationController: Replication Controller
    job: Job
    cronJob: Cron Job
    pod: Standalone Pod
  external:
    externalIp: |
      {count, plural,
        =1 {External IP:}
        other {External IPs:}
      }
    externalHostname: 'External Hostname:'
  selector:
    label: 'Selector:'
  containersTab:
    title: 'Containers'
    detail: 'The containers that make up this service.'
  linksTab:
    header: Links
    detail: 'These properties show the links between containers in this service.'
    noData: This Service has no links
  certsTab:
    title: Certificates
    detail: 'Certificates used for TLS-termination of requests.'
    default: Default Certificate
    additional: Additional SNI Certificates
  new:
    form:
      name:
        placeholder: e.g. myapp
      description:
        placeholder: e.g. My application
  newBalancer:
    upgradeImage: "The balancer software image will be upgraded from <code>{from}</code> to <code>{to}</code>."
    form:
      name:
        placeholder: e.g. website
      description:
        placeholder: e.g. Balancer for mycompany.com
  newIngress:
    form:
      name:
        placeholder: e.g. website
      description:
        placeholder: e.g. Ingress for mycompany.com
  portsTab:
    title: Ports
    detail: 'Ports mapped from a host IP to the listening ports of a container.'
    notActive: Ports are only available while the service is Active.
  logTab:
    title: Service Log
    detail: 'Recent orchestration events that have occurred for this service'
  type:
    service: Service
    selectorservice: Selector
    loadbalancerservice: Load Balancer
    dnsservice: Alias
    externalservice-ip: External IP
    externalservice-host: External Name
    kubernetesservice: K8s Service
    composeservice: Compose Service
    networkdriverservice: Network Service
    storagedriverservice: Storage Service
  sidekick:
    tabHeader: Sidecars
    header: Workload & Sidecars
    helpBlock: Select the main container or one of the sidecars

signupPage:
  header: 'Signup for {appName}'
  form:
    button: Register
    labels:
      loginUsername: Name
      email: Email
  emailSuccess:
    header: 'Welcome to {appName}'
    confirm:
      subtext: Confirm your email by clicking the verification link we just sent to your inbox.
      resend: Resend Email

stackPage:
  header:
    singleBanner: Viewing a single Stack
    backLink: Back to all stacks
  basics:
    tagsCopy: Copy Tags as comma seperated list
  containers:
    header: Containers
    detail: Standalone Containers and Services contained in this stack
    status: |
      {count, plural,
      =0 {No containers}
      =1 {# container}
      other {# containers}
      }
  loadBalancers:
    header: Load Balancers
    detail: 'Load Balancer containers that are apart of this stack'
    status: |
      {count, plural,
      =0 {No balancers}
      =1 {# balancer}
      other {# balancers}
      }
  dnsServices:
    header: DNS Entries
    detail: 'Load Balancers that are apart of this stack'
    status: |
      {count, plural,
      =0 {No entries}
      =1 {# entry}
      other {# entries}
      }
  scalingGroups:
    header: Scaling groups
    detail: 'Containers existing in this scaling group'
    status: |
      {count, plural,
      =0 {No containers}
      =1 {# container}
      other {# containers}
      }
  volumesTab:
    header: Volumes
    detail: 'These properties show the volumes attached to your container.'
    table:
      path: Mount Point
      shared: Shared With
      writable: Writable
      noData: This stack has no volumes mounted
      noMatch: No volumes match the current search

newStack:
  header: Import from YAML
  name:
    placeholder: e.g. myapp
  description:
    placeholder: e.g. MyApp Stack
  files:
    label: Files
    addActionLabel: Add a File
    uploadActionLabel: Read from Disk
    namePlaceholder: File Name
    valuePlaceholder: File Contents
    protipLabel: Supports {appName} <code>compose.yml</code>, <code>docker-compose.yml</code>, and Kubernetes manifest files
  answers:
    label: Answers (variable substitutions)
    addActionLabel: Add Answer

nodeTemplatesPage:
  header: Node Templates
  actionButton: Add Template
  detail: Node Templates are used to deploy the nodes that make up a Cluster on an infrastructure provider.
  table:
    state: State
    name: Name
    provider: Provider
    location: Location
    size: Size
    usedBy: Used By
    noData: You do not have any node templates yet.
    usedByNone: No Clusters
    unknown: Unknown

storageClassPage:
  header: Storage Classes
  addActionLabel: Add Class
  noData: You do not have any storage classes yet.
  noMatch: No storage classes match the current search
  provisioner:
    label: Provisioner
  default:
    label: Default

persistentVolumePage:
  header: Persistent Volumes
  addActionLabel: Add Volume
  noData: You do not have any persistent volumes yet.
  noMatch: No persistent volumes match the current search
  source:
    label: Source

userPreferencesPage:
  header: Preferences
  theme:
    header: Theme
    light: Light
    auto: Auto
    autoDetail: Auto will transition to dark from 6pm-6am
    dark: Dark
  generalInfo:
    header: My Account
    name:
      label: Name
    username:
      label: Username
    email:
      label: Email
    password:
      text: Change Password

verifyPage:
  header: "You've successfully verified your email!"
  subtext: We need a few more pieces of information before we can finalize your account.
  account:
    header: Account Created
    subtext: Click the link below to be to taken to the login page.
    linkText: Login

verifyResetPasswordPage:
  header: Reset Password
  button: Update password
  success:
    header: Password Reset!
    subtext: Click the link below to be to taken to the login page.
    linkText: Login


waitingPage:
  hosts:
    setup:
      kubernetes: Setting up Kubernetes

notifierPage:
  notifiers: Notifiers
  testedBtnLabel: OK
  testingBtnLabel: Testing
  notifierTypes:
    slack: Slack
    email: Email
    pagerduty: Pagerdudy
    webhook: Webhook
  slack:
    url: URL
    urlPlaceholder: e.g. https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX
    defaultRecipient: Default Recipient (Channel)
    defaultRecipientPlaceholder: 'e.g. #example'
    helpText: |
        Here's how you <a href="https://get.slack.help/hc/en-us/articles/115005265063-Incoming-WebHooks-for-Slack">create incoming WebHooks</a> for slack.

  smtp:
    server: Smtp Server
    host: Host
    hostPlaceholder: e.g. 192.168.1.121
    port: Port
    portPlaceholder: e.g. 465
    userName: Username
    userNamePlaceholder: e.g. John
    password: Password
    passwordPlaceholder: Your Password
    defaultRecipient: Default Recipient (Address)
    defaultRecipientPlaceholder: e.g. admin@example.com
  pagerduty:
    serviceKey: Service Key
    serviceKeyPlaceholder: Your pagerduty serviceKey
    helpText: |
      Here's how you <a href="https://support.pagerduty.com/docs/webhooks">create incoming WebHooks</a> for slack.

  webhook:
    url: URL
    urlPlaceholder: Your webhook URL
  testAction:
    testing: TESTING
    testOk: Please check your chosen application for the notifier.
    testFailed: Something's not quite right. Check your inputs.
    test: TEST
  clone: Clone
  index:
    addActionLabel: Add Notifier
    table:
      created: Created
      noData: No Notifiers
      noMatch: No Match

##############################
# Partials
##############################
ldap:
  providerName:
    openldap: OpenLDAP
    ad: Active Directory
  header:
    enabled:
      label: "{providerName} is enabled"
      required: |
        {appName} is configured to allow access to {groups, plural,
          =0 {no groups}
          =1 {# group}
          other {# groups}
        } and {users, plural,
          =0 {no users}
          =1 {# user}
          other {# users}
        }.
      restricted: |
        {appName} is configured to allow access to environment members, {groups, plural,
          =0 {no groups}
          =1 {# group}
          other {# groups}
        } and {users, plural,
          =0 {no users}
          =1 {# user}
          other {# users}
        }.
      unrestricted: "{appName} is configured to allow access to any {providerName} user."
    disabled:
      label: "{providerName} is not configured"
      warning: "{appName} can be configured to restrict access to a set of {providerName} users and groups.  This is not currently set up, so anybody that reach this page (or the API) has full control over the system."

  accessEnabled:
    header: Authentication
    subtext: "To change the server configuration, disable access control below and then set it up again."
    general:
      header: General
      server: "Server:"
      tls: "TLS:"
      serviceAccount: "Service Account:"
      searchBase: "Search Base:"
      defaultDomain: "Default Domain:"
    users:
      header: Users
      objectClass: "Object Class:"
      login: "Login Field:"
      name: "Name Field:"
      search: "Search Field:"
      enabled: "Status Field:"
      disabledBitMask: "Disabled BitMask:"
    group:
      header: Group
      objectClass: "Object Class:"
      name: "Name Field:"
      search: "Search Field:"
    disable:
      header: "Danger Zone&trade;"
      warning: '<b class="text-danger">Caution:</b> Disabling access control will give complete control over {appName} to anyone that can reach this page or the API.'
      confirmDisable:
        pre: Disable access control
        post: "Are you sure?  Click again to really disable access control"
  accessConfig:
    header: "1. Configure an {providerName} server"
    subtext1: "Enter the address, port, and protocol to connect to your {providerName} server.  <code>389</code> is the standard port for insecure, <code>636</code> for TLS."
    subtext2: "{appName} needs a service account that has (read-only) access to all of the domains that will be able to login, so that we can determine what groups a user is a member of when they make a request with an API key."
    port:
      labelText: Port
      checkbox: TLS
    groupSearchBase:
      labelText: Group Search Base
      placeholder: "e.g. ou=Groups,dc=mycompany,dc=com"
      helpText: "If set, groups will be searched for only under this base instead of under the User Search Base."
    userSearchBase:
      labelText: User Search Base
      placeholder: "e.g. ou=users,dc=mycompany,dc=com"
    defaultDomain:
      helpText: "This domain will be used if a user logs in without specifing one."
      labelText: Default Login Domain
      placeholder: "e.g. mycompany"
  customizeSchema:
    header: "2. Customize Schema"
    helpText: "If your schema does not match the standard ActiveDirectory format, you can customize it here."
    cert:
      labelText: CA Certificate
      helpText: If needed, enter a CA certificate
      placeholder: "Paste in the certificate, starting with -----BEGIN CERTIFICATE-----"
    users:
      header: Users
      objectClass:
        labelText: Object Class
      login:
        labelText: Login Attribute
      name:
        labelText: Username Attribute
      search:
        labelText: Search Attribute
      searchBase:
        labelText: User Search Base
      enabledAttribute:
        labelText: User Enabled Attribute
      disabledBitMask:
        labelText: Disabled Status Bitmask
      userMemberAttribute:
        labelText: User Member Attribute
    groups:
      header: Groups
      objectClass:
        labelText: Object Class
      name:
        labelText: Name Attribute
      search:
        labelText: Search Attribute
      groupMemberUser:
        labelText: Group Member User Attribute
        placeholder: uid
      groupMemberMapping:
        labelText: Group Member Mapping Attribute
      groupDN:
        labelText: Group DN Attribute
        placeholder: distinguishedName
  testAuth:
    header: "3. Test and enable authentication"
    helpText: "Check that everything is configured correctly by testing authentication with your {providerName} account:"
    userName:
      labelText: Your Username
    password:
      labelText: Your Password
    authenticate:
      pre: Authenticate
      post: "Testing..."

servicePartial:
  noContainers:
    label: No containers yet.
    inactive:
      start: Start

##############################
# Components
##############################
accordionRow:
  status:
    none: None
    incomplete: Incomplete
    error: Error
    notConfigured: Not Configured
    configured: Configured
    countConfigured: "{count} Configured"
    standard: Default
    custom: Customized
    specific: Specific
    any: Any
    rule: "{count, plural, =1 {# Rule} other {# Rules}}"

advancedSection:
  showText: Show advanced options
  hideText: Hide advanced options

annotationsSection:
  title: Annotations
  detail: Key/value metadata.
  key: Key
  value: Value
  noData: No Annotations
  noMatch: No annotations match the current search

billingInfo:
  header: Billing Info
  addNew: Add Payment Method
  card: "{brand}: ...{last}"
  noSub: You do not have an active payment method
  table:
    title:
      cardType: "Brand: {brand}"
      last4: "Last Four: {last}"
      exp: "Exp Date: {exp}"
      name: "Name On Card: {name}"
      actions: Actions

caasLogin:
  resetHeader: Reset Password
  new: Create Account
  reset: Reset Password
  resetSuccess: Success! Check your email for a link to change your password.
  error: There was an error retrieving your email. Ensure your email is correct and try again.
  invalidEmail: You input is not a valid email address. Please enter a valid email address and try again.
  login: Login Page
  form:
    email: Email

catalogSettings:
  header: Catalogs
  notAvailable: "Not available: there is a custom catalog called <code>{name}</code>"
  helpText: Currently only Helm catalogs are supported
  helm:
    stable:
      label: Helm Stable
      detail: Official repository of curated application definitions. Application definitions from Stable meet all technical requirements criteria.
    incubator:
      label:  Helm Incubator
      detail: Official repository of curated application definitions. Application definitions from Incubator do not meet the technical requirements criteria and are essentially beta.
  certified:
    header:
      rancher: "{appName} Certified Library"
      pl: Certified Library
    detail:
      rancher: Templates required for core Rancher features such as Kubernetes orchestration support.  Maintained and supported by Rancher Labs.
      pl: Officially maintained templates required for core features such as Kubernetes.
  community:
    header:
      rancher: Community Contributed
      pl: Community Contributed
    detail:
      rancher: Templates created and maintained by community members.  Not certified by Rancher Labs.
      pl: Templates created and maintained by community members.
  more:
    header: Custom
    helpText: You can define your own additional custom catalog sources.  Each one needs a unique name and a URL that <code>git clone</code> can handle (see <a href="https://git-scm.com/docs/git-clone#_git_urls_a_id_urls_a" target="_blank" rel="nofollow noopener noreferrer">docs</a> for more info).
    addActionLabel: Add Catalog
    noMatch: No catalogs match the current search.
    noData: There are no custom catalogs defined.
    addHeader: Add Catalog
    editHeader: Edit Catalog
    name:
      label: Name
      placeholder: e.g. mycatalog
    url:
      label: URL
      placeholder: 'e.g. https://github.com/mycompany/mycatalog.git'
    kind:
      label: Kind
      native: Native
      helm: Helm
    branch:
      label: Branch
      placeholder: 'e.g. master'

clusterRow:
  noMatch: No environments match the current search.
  noData: This cluster doesn't have any environments yet.
  noHosts: External cluster has no nodes
  noClusterMatch: No clusters match the current search.
  noClusterData: There are no clusters yet.
  addHost: Add Nodes
  importCluster: Use existing Kubernetes
  loginDefault: Login

clusterWelcome:
  welcome: Welcome
  noHost: There are no hosts in this cluster yet.  Do you want to add hosts or use an existing Kubernetes installation?
  addHost: Add Nodes
  select: Select
  importCluster: Use existing Kubernetes
  importClusterDescription: |
    <p>Deploy containers into an existing Kubernetes installation using the hosts and networking it provides.</p>
    <p>Infrastructure resources are managed outside of {appName}.</p>
    <p>Supports on-premise installations, or hosted services like:</p>
  embeddedDescription: |
    <p>{appName} automatically deploys and manages Kubernetes.</p>
    <p>Deploy hosts with popular providers inside of {appName}, or use any existing hosts with Docker installed.</p>
    <p>Supports any combination of virtual machines or bare-metal, running on-premise or cloud-hosted.</p>
    <p>Provides secure overlay network for containers to communicate with each other across hosts.</p>

clusterNew:
  name:
    label: Cluster Name
    placeholder: e.g. sandbox
  description:
    placeholder: e.g. Cluster for dev and test workloads
  members:
    label: Member Roles
    detail: Control who has access to the cluster and what permission they have to change it.
  config:
    label: Provider
    detail: Choose where the nodes for the cluster will come from
  nodes:
    title: Nodes
    detail: Customize the nodes that will be created
  customize:
    title: Cluster Options
    detail: Customize the cluster that will be created
  psp:
    label: Default Pod Security Policy
    prompt: Select a Pod Security Policy...
    none: No policies are defined
    required: A Default Pod Security Policy is required when support is enabled.
  azureaks:
    label: Azure Container Service
    shortLabel: Azure AKS
    access:
      title: Account Access
      detail: Configure the credentials that will be used to talk to Azure
      help: 'You can find instructions on how to create a Client ID and Secret <a href="https://www.packer.io/docs/builders/azure-setup.html" target="_blank">here</a>.'
    placement:
      label: Placement
    count:
      label: Node Count
    location:
      label: Location
      prompt: Choose a location...
    accountAccessSection:
      label: Account Access
    subscriptionId:
      label: Subscription ID
      placeholder: Your Azure subscription ID
    machineType:
      label: VM Size
      prompt: Choose a size...
    diskSizeGb:
      label: OS Disk Size
    ssh:
      label: SSH Public Key
    security:
      label: Security
    members:
      label: Member Roles
    pod:
      label: Pod Security Policies
    kubernetesVersion:
      label: Kubernetes Version
      prompt: Choose a Version...
    admin:
      label: Admin Username
      placeholder: user-1
    tenant:
      label: Tenant ID
      placeholder: Your Azure tenant ID
    image:
      label: Image
      placeholder: 'canonical:UbuntuServer:16.04.0-LTS:latest'
    size:
      label: Size
    dockerPort:
      label: Docker Port
      placeholder: '2376'
    publishSettingsFile:
      label: Publish Settings
      placeholder: Your Publish Settings file
    environment:
      label: Environment
    resourceGroup:
      label: Resource Group
      placeholder: 'docker-machine'
    sshUser:
      label: SSH User
      placeholder: usr1
    storageType:
      label: Storage Type
    vnet:
      label: VNet
      placeholder: '[resourcegroup:]name'
    subnet:
      label: Subnet
      placeholder: example-sub-name
    subnetPrefix:
      label: Subnet Prefix
      placeholder: 128.42.0.0/21
    availabilitySet:
      label: Availability Set
      placeholder: availability-set-name
    openPort:
      label: Open Port
      placeholder: 'Comma-separated, e.g. 80,443'
    privateIpAddress:
      label: Private IP
      placeholder: 127.0.0.1
    usePrivateIp:
      label: Use Private IP To Connect
    staticPublicIp:
      label: Public IP
    noPublicIp:
      label: No Public IP
    clientId:
      label: Client ID
      placeholder: Your Client ID
    clientSecret:
      label: Client Secret
      placeholder: Your Client Secret
    region:
      label: Region
  googlegke:
    label: Google Kubernetes Engine
    shortLabel: Google GKE
    checkServiceAccount: "Next: Configure Nodes"
    checkingServiceAccount: Authenticating...
    credential:
      label: Service Account
      placeholder: Service account private key JSON file
      configured: Configured for {project} project
      helpText: |
        Create a <a href="https://console.cloud.google.com/projectselector/iam-admin/serviceaccounts" target="_blank" rel="nofollow noopener noreferrer">Service Account</a> with a JSON private key and provide the JSON here.  See <a href="https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances" target="_blank" rel="nofollow noopener noreferrer">Google Cloud docs</a> for more info about creating a service account. Three IAM roles are required: <code>project/viewer</code>, <code>kubernetes-engine/admin</code> and <code>service-account/user</code>, more info on roles can be found <a href="https://cloud.google.com/kubernetes-engine/docs/how-to/iam-integration" target="_blank" rel="nofollow noopener noreferrer">here.</a>
    zone:
      label: Zone
      prompt: Choose a Zone...
    project:
      label: Project
      placeholder: e.g. my-project
    machineType:
      label: Machine Type
      prompt: Choose a Type...
    nodeCount:
      label: Node Count
      prompt: Choose a Type...
    diskSizeGb:
      label: Root Disk Size
    masterVersion:
      label: Kubernetes Version
      prompt: Choose a Version...
    clusterIpv4Cidr:
      label: Container Address Range
      placeholder: e.g. 10.42.0.0/16
    alphaFeatures:
      label: Alpha Features
  rke:
    label: '{appName} Kubernetes Engine'
    shortLabel: RKE
    customize:
      label: Cluster Options
      detail: "Customize Kubernetes options for the cluster"
    nodes:
      title: Node Pools
      detail: Configure the machines that will make up the cluster
      add: Add Node Pool
      addTemplate: Add Node Template
      templatePrompt: "Choose a Template..."
      hostnamePrefix: Name Prefix
      count: Count
      template: Template
    detected: |
      {count, plural,
        =1 {# new node has registered}
        other {# new nodes have registered}
      }
    done: Done
    command:
      instructions: 'Run this command on one or more existing machines already running a supported version of Docker.'
    auth:
      label: Auth Provider
      x509: x509
    network:
      label: Network Provider
      flannel: Flannel
      calico: Calico
      canal: Canal
    version:
      label: Kubernetes Version
    registry:
      label: Pull Kubernetes Images From
      default: The default registry (DockerHub)
      custom: "A custom registry:"
      url:
        label: URL
        placeholder: e.g. quay.io
      user:
        label: Username
      password:
        label: Password
    ignoreDockerVersion:
      label: Docker version on nodes
      enabled: Allow unsupported versions
      disabled: Require a supported Docker version
    podSecurityPolicy:
      label: Pod Security Policy Support
    role:
      title: Node Role
      detail: Choose what roles the node will have in the cluster
      header:
        etcd: etcd
        controlplane: Control
        worker: Worker
      requirements:
        label: "Number of nodes required:"
        etcd: 1, 3, or 5
        controlplane: 1 or more
        worker: 1 or more
    kubeApi:
      label: Kube API
      ipRange: Service Cluster IP Range
      podSecurityPolicy: Pod Security Policy
    kubeController:
      label: Kube Controller
      cidr: Cluster CIDR
      ipRange: Service Cluster IP Range
    kubelet:
      label: Kubelet
      domain: Cluster Domain
      dns: Cluster DNS Server
    errors:
      etcd: Please select 1, 3, or 5 nodes to use for etcd.
      controlPlane: Please select at least one node to use for for management.
      worker: Please select at least one node to use as a worker.
  custom:
    label: Custom
    shortLabel: Custom
  import:
    label: Imported
    shortLabel: Imported
    command:
      instructions: "Run the kubectl command below on an existing Kubernetes 1.8.x cluster to import it into {appName}:"
      instructionsInsecure: "If you get an error about 'certificate signed by unknown authority' because your {appName} installation is running with an untrusted/self-signed SSL certificate, run the command below instead to bypass the certificate check:"

conditionSections:
  title: Conditions
  detail: Current conditions
  table:
    type: Type
    status: Status
    lastUpdate: Last Update
    reason: Reason
    message: Message
  noData: No Conditions
  noMatch: No conditions match the current search

confirmDelete:
  title: 'Are you sure you want to delete'
  environmentNote: 'Note: All resources inside this Project will be permanently removed, including any namespaces that were created through {appName}.'
  protip: 'ProTip: Hold the {key} key while clicking Delete to bypass this confirmation.'
  confirmAction: Delete
  cancelAction: Cancel
  largeDeleteText: '{key} and {othersCount} others'

containerLogs:
  title: "Logs: {instanceName}"
  onlyCombined: "<b>Note:</b> Only combined stdout/stderr logs are available for this container because it was run with the TTY (-t) flag."
  combined: Combined
  stdout: Standard Out
  stderr: Standard Error
  protip: "ProTip: Hold the {key} key when opening logs to launch a new window."
  scrollTop: Scroll to Top
  scrollBottom: Scroll to Bottom
  clear: Clear Screen
  status:
    initializing: Initializing...
    connecting: Connecting...
    connected: Connected
    disconnected: Disconnected
    closed: Closed

containerShell:
  protip: "ProTip: Hold the {key} key when opening shell access to launch a new window."
  status:
    initializing: Initializing...
    error: "Error: {error}"
    connecting: Connecting...
    connected: Connected
    disconnected: Disconnected
    closed: Closed

copyToClipboard:
  tooltip: Copy to Clipboard
  copied: Copied!

cruRegistry:
  title:
    new: Add Registry
    edit: 'Edit Registry: {name}'
    view: 'Registry: {name}'
  address:
    label: Address
    dockerhub: DockerHub
    quay: Quay.io
    custom: Custom
    placeholder: e.g. registry.example.com
  multiple: Multiple
  auth:
    label: Auth token
    saved: Saved
  username:
    label: Username
  password:
    label: Password
    saved: Saved

cruPersistentVolume:
  name:
    placeholder: e.g. myvolume
  description:
    placeholder: e.g. Volume for production database
  title:
    new: Add Persistent Volume
    edit: 'Edit Persistent Volume: {name}'
    view: 'Persistent Volume: {name}'
  storageClass:
    label: Assign to Storage Class
    prompt: None
  capacity:
    label: Capacity
    unit: GiB
  source:
    label: Volume Plugin
    title: Plugin Configuration
    detail: Configure options for the selected volume plugin
    prompt: Choose a volume plugin...
  customize:
    title: Customize
    detail: Customize Advanced options
  mountOptions:
    label: Mount Options
    addActionLabel: Add Option
    noData: No Mount Options
  awsElasticBlockStore:
    fsType:
      label: Filesystem Type
      placeholder: "e.g. ext4"
    readOnly:
      label: Read Only
    partition:
      label: Partition
      placeholder: "e.g. 1; 0 for entire device"
    volumeID:
      label: Volume ID
      placeholder: "e.g. volume1"
  azureDisk:
    cachingMode:
      label: Caching Mode
      placeholder: "e.g. None"
    diskName:
      label: Disk Name
      placeholder: "e.g. kubernetes-pvc"
    diskURI:
      label: Disk URI
      placeholder: "e.g. https://example.com/disk"
    fsType:
      label: Filesystem Type
      placeholder: "e.g. ext4"
    kind:
      label: Kind
      placeholder: "e.g. PersistentVolumeClaim"
    readOnly:
      label: Read Only
  secret:
    defaultMode:
      label: Default Mode
      placeholder: "e.g. 256"
    optional:
      label: Optional
    secretId:
      label: Secret
    items:
      label: Items
  configMap:
    defaultMode:
      label: Default Mode
      placeholder: "e.g. 256"
    optional:
      label: Optional
    name:
      label: Config Map Name
      placeholder: "e.g. map"
  emptyDir:
    medium:
      label: Medium
      default: Node's Default Medium
      memory: Memory
    sizeLimit:
      label: Size Limit
      placeholder: "e.g. 300Mi"
  azureFile:
    secretName:
      label: Secret Name
      placeholder: "e.g. secret"
    secretNamespace:
      label: Secret Namespace
      placeholder: "e.g. default"
    shareName:
      label: Share Name
      placeholder: "e.g. abc"
    readOnly:
      label: Read Only
  cephfs:
    monitors:
      label: Monitors
      addActionLabel: Add
    path:
      label: Path
      placeholder: "e.g. /var"
    readOnly:
      label: Read Only
    secretFile:
      label: Secret File
      placeholder: "e.g. secret"
    secretRef:
      name:
        label: Name
        placeholder: "e.g. abc"
      namespace:
        label: Namespace
        placeholder: "e.g. default"
      label: Secret
    user:
      label: User
      placeholder: "e.g. root"
  rbd:
    fsType:
      label: Filesystem Type
      placeholder: "e.g. ext4"
    image:
      label: Image
      placeholder: "e.g. image"
    keyring:
      label: Key Ring
      placeholder: "e.g. /etc/ceph/keyring"
    monitors:
      label: Monitors
      addActionLabel: Add
    pool:
      label: Pool
      placeholder: "e.g. rbd"
    readOnly:
      label: Read Only
    secretRef:
      label: Secret
      placeholder: "e.g. secret"
    user:
      label: User
      placeholder: "e.g. root"
  fc:
    fsType:
      label: Filesystem Type
      placeholder: "e.g. ext4"
    lun:
      label: Lun
      placeholder: "e.g. 2"
    readOnly:
      label: Read Only
    targetWWNs:
      label: Target WWNs
      addActionLabel: Add
    wwids:
      label: Wwids
      addActionLabel: Add
  flexVolume:
    driver:
      label: Driver
      placeholder: "e.g. driver"
    fsType:
      label: Filesystem Type
      placeholder: "e.g. ext4"
    options:
      label: Options
      addActionLabel: Add
    readOnly:
      label: Read Only
    secretRef:
      label: Secret
      placeholder: "e.g. secret"
  flocker:
    datasetName:
      label: Dataset Name
      placeholder: "e.g. dataset"
    datasetUUID:
      label: Dataset UUID
      placeholder: "e.g. uuid"
  glusterfs:
    endpoints:
      label: Endpoints
      placeholder: "e.g. 10.240.106.152:1"
    path:
      label: Path
      placeholder: "e.g. kube_vol"
    readOnly:
      label: Read Only
  gcePersistentDisk:
    fsType:
      label: Filesystem Type
      placeholder: "e.g. ext4"
    partition:
      label: Partition
      placeholder: "e.g. 1; 0 for entire device"
    pdName:
      label: Persistent Disk Name
      placeholder: "e.g. abc"
    readOnly:
      label: Read Only
  iscsi:
    chapAuthDiscovery:
      label: Chap Auth Discovery
    chapAuthSession:
      label: Chap Auth Session
    fsType:
      label: Filesystem Type
      placeholder: "e.g. ext4"
    initiatorName:
      label: Initiator Name
      placeholder: "e.g. abc"
    iqn:
      label: IQN
      placeholder: "e.g. 2"
    iscsiInterface:
      label: iSCSI Interface
      placeholder: "e.g. interface"
    lun:
      label: Lun
      placeholder: "e.g. 2"
    portals:
      label: Portals
      addActionLabel: Add
    readOnly:
      label: Read Only
    secretRef:
      label: Secret
      placeholder: "e.g. secret"
    targetPortal:
      label: Target Portal
      placeholder: "e.g. portal"
  local:
    path:
      label: Path
      placeholder: "e.g. /var"
  nfs:
    path:
      label: Path
      placeholder: "e.g. /var"
    readOnly:
      label: Read Only
    server:
      label: Server
      placeholder: "e.g. 10.244.1.4"
  cinder:
    fsType:
      label: Filesystem Type
      placeholder: "e.g. ext4"
    readOnly:
      label: Read Only
    volumeID:
      label: Volume ID
      placeholder: "e.g. vol"
  photonPersistentDisk:
    fsType:
      label: Filesystem Type
      placeholder: "e.g. ext4"
    pdID:
      label: PD ID
      placeholder: "e.g. abc"
  portworxVolume:
    fsType:
      label: Filesystem Type
      placeholder: "e.g. ext4"
    readOnly:
      label: Read Only
    volumeID:
      label: Volume ID
      placeholder: "e.g. abc"
  quobyte:
    group:
      label: Group
      placeholder: "e.g. abc"
    readOnly:
      label: Read Only
    registry:
      label: Registry
      placeholder: "e.g. abc"
    user:
      label: User
      placeholder: "e.g. root"
    volume:
      label: Volume
      placeholder: "e.g. vol"
  scaleIO:
    fsType:
      label: Filesystem Type
      placeholder: "e.g. ext4"
    gateway:
      label: Gateway
      placeholder: "e.g. https://localhost:443/api"
    protectionDomain:
      label: Protection Domain
      placeholder: "e.g. pd01"
    readOnly:
      label: Read Only
    secretRef:
      name:
        label: Name
        placeholder: "e.g. secret"
      namespace:
        label: Namespace
        placeholder: "e.g. default"
      label: Secret
    sslEnabled:
      label: SSL Enabled
    storageMode:
      label: Storage Mode
      placeholder: "e.g. ThinProvisioned"
    storagePool:
      label: Storage Pool
      placeholder: "e.g. sp01"
    system:
      label: System
      placeholder: "e.g. scaleio"
    volumeName:
      label: Volume Name
      placeholder: "e.g. vol-0"
  storageos:
    fsType:
      label: Filesystem Type
      placeholder: "e.g. ext4"
    readOnly:
      label: Read Only
    secretRef:
      name:
        label: Name
        placeholder: "e.g. secret"
      namespace:
        label: Namespace
        placeholder: "e.g. default"
      label: Secret
    volumeName:
      label: Volume Name
      placeholder: "e.g. vol"
    volumeNamespace:
      label: Volume Namespace
      placeholder: "e.g. default"
  vsphereVolume:
    fsType:
      label: Filesystem Type
      placeholder: "e.g. ext4"
    storagePolicyID:
      label: Storage Policy ID
      placeholder: "e.g. sp1"
    storagePolicyName:
      label: Storage Policy Name
      placeholder: "e.g. sp"
    volumePath:
      label: Volume Path
      placeholder: "e.g. /"
cruStorageClass:
  name:
    placeholder: e.g. storage
  description:
    placeholder: e.g. AWS EBS Storage
  title:
    new: Add Storage Class
    edit: 'Edit Storage Class: {name}'
    view: 'Storage Class: {name}'
  allowVolumeExpansion:
    label: Allow users to expand volumes
  mountOptions:
    label: Mount Options
    addActionLabel: Add Option
    noData: No Mount Options
  parameters:
    title: Parameters
    detail: Configure the provider-specific parameters for the storage class
    addActionLabel: Add Parameter
  customize:
    title: Customize
    detail: Customize Advanced options
  provisioner:
    label: Provisioner
  reclaimPolicy:
    label: Reclaim Policy
    Delete: Delete volumes and underlying device when released by workloads
    Retain: Retain the volume for manual cleanup
    Recycle: "Recycle: Empty the contents and then preserve the volume for future workloads"
  aws-ebs:
    type:
      label: Volume Type
      gp2: 'GP2 - General Purpose SSD'
      io1: 'IO1 - Provisioned IOPS SSD'
      st1: 'ST1 - Throughput-Optimized HDD'
      sc1: 'SC1 - Cold-Storage HDD'
    zone:
      label: Availability Zone
      automatic: "Automatic: Zones the cluster has a node in"
      manual: "Manual: Choose specific zones"
      placeholder: "us-east-1d, us-east-1c"
    iopsPerGB:
      label: Provisioned IOPS
      unit: per second, per GB
    encrypted:
      label: Encryption
    kmsKeyId:
      label: KMS Key ID for Encryption
      automatic: "Automatic: Generate a key"
      manual: "Manual: Use a specific key (full ARN)"
  gce-pd:
    type:
      label: Volume Type
      pd-standard: 'Standard'
      pd-ssd: 'SSD'
    zone:
      label: Availability Zone
      automatic: "Automatic: Zones the cluster has a node in"
      manual: "Manual: Choose specific zones"
      placeholder: "us-central1-a, us-central1-b"
  cinder:
    type:
      label: Volume Type
      placeholder: "e.g. fast"
    availability:
      label: Availability Zone
      automatic: "Automatic: Zones the cluster has a node in"
      manual: "Manual: Choose specific zones"
      placeholder: "e.g. nova"
  vsphere-volume:
    diskformat:
      label: Disk Format
      thin: Thin
      zeroedthick: Zeroed Thick
      eagerzeroedthick: Eager Zeroed Thick
    storagePolicyName:
      label: Storage Policy Name
      placeholder: "e.g. gold"
    datastore:
      label: Datastore
      placeholder: "e.g. VSANDatastore"
    fstype:
      label: Filesystem Type
      placeholder: "e.g. ext3"
    hostFailuresToTolerate:
      label: Host Failures To Tolerate
      placeholder: "e.g. 2"
    cachereservation:
      label: Cache Reservation
      placeholder: "e.g. 20"
  azure-disk:
    new: New Azure Disk
    unmanaged: Azure Unmanaged Disk
    skuName:
      label: Sku Name
      placeholder: "e.g. Standard_LRS"
    location:
      label: Location
      placeholder: "e.g. eastus"
    storageAccount:
      label: Storage Account
      placeholder: "e.g. azure_storage_account_name"
    storageaccounttype:
      label: Storage Account Type
      placeholder: "e.g. Standard_LRS"
    kind:
      label: Kind
      shared: Shared
      dedicated: Dedicated
      managed: Managed
      placeholder: "e.g. Shared"
  azure-file:
    skuName:
      label: Sku Name
      placeholder: "e.g. Standard_LRS"
    location:
      label: Location
      placeholder: "e.g. eastus"
    storageAccount:
      label: Storage Account
      placeholder: "e.g. azure_storage_account_name"
  portworx-volume:
    fs:
      label: Filesystem
      placeholder: "e.g. ext4"
    block_size:
      label: Block Size
      placeholder: "e.g. 32"
    repl:
      label: Repl
      placeholder: "e.g. 1; 0 for entire device"
    io_priority:
      label: I/O Priority
      placeholder: "e.g. low"
    snap_interval:
      label: Snapshots Interval
      placeholder: "e.g. 70"
    aggregation_level:
      label: Aggregation Level
      placeholder: "e.g. 0"
    ephemeral:
      label: Ephemeral
      placeholder: "e.g. true"
  scaleio:
    gateway:
      label: Gateway
      placeholder: "e.g. https://192.168.99.200:443/api"
    system:
      label: System
      placeholder: "e.g. scaleio"
    protectionDomain:
      label: Protection Domain
      placeholder: "e.g. pd0"
    storagePool:
      label: Storage Pool
      placeholder: "e.g. sp1"
    storageMode:
      label: Storage Mode
      ThinProvisioned: Thin Provisioned
      ThickProvisioned: Thick Provisioned
    secretRef:
      label: Secret Ref
      placeholder: "e.g. sio-secret"
    readOnly:
      label: Read Only
      placeholder: "e.g. false"
    fsType:
      label: Filesystem Type
      placeholder: "e.g. xfs"
  storageos:
    pool:
      label: Pool
      placeholder: "e.g. default"
    description:
      label: Description
      placeholder: "e.g. Kubernetes volume"
    adminSecretNamespace:
      label: Admin Secret Namespace
      placeholder: "e.g. default"
    adminSecretName:
      label: Admin Secret Name
      placeholder: "e.g. storageos-secret"
    fsType:
      label: Filesystem Type
      placeholder: "e.g. ext4"
  longhorn:
    numberOfReplicas:
      label: Number Of Relicas
      placeholder: "e.g. 3"
    staleReplicaTimeout:
      label: Stale Replica Timeout
      placeholder: "e.g. 30"
    fromBackup:
      label: From Backup
      placeholder: ""
  quobyte:
    quobyteAPIServer:
      label: Quobyte API Server
      placeholder: "e.g. http://138.68.74.142:7860"
    registry:
      label: Registry
      placeholder: "e.g. 138.68.74.142:7861"
    adminSecretNamespace:
      label: Admin Secret Namespace
      placeholder: "e.g. kube-system"
    adminSecretName:
      label: Admin Secret Name
      placeholder: "e.g. quobyte-admin-secret"
    user:
      label: User
      placeholder: "e.g. root"
    group:
      label: Group
      placeholder: "e.g. root"
    quobyteConfig:
      label: Quobyte Config
      placeholder: "e.g. BASE"
    quobyteTenant:
      label: Quobyte Tenant
      placeholder: "e.g. DEFAULT"
  rbd:
    monitors:
      label: Monitors
      placeholder: "e.g. 10.16.153.105:6789"
    adminId:
      label: Admin ID
      placeholder: "e.g. kube"
    adminSecretNamespace:
      label: Admin Secret Namespace
      placeholder: "e.g. kube-system"
    adminSecret:
      label: Admin Secret
      placeholder: "e.g. secret"
    pool:
      label: Pool
      placeholder: "e.g. kube"
    userId:
      label: User ID
      placeholder: "e.g. kube"
    userSecretName:
      label: User Secret Name
      placeholder: "e.g. ceph-secret-user"
    fsType:
      label: Filesystem Type
      placeholder: "e.g. ext4"
    imageFormat:
      label: Image Format
      placeholder: "e.g. 2"
    imageFeatures:
      label: Image Features
      placeholder: "e.g. layering"
  glusterfs:
    resturl:
      label: REST URL
      placeholder: "e.g. http://127.0.0.1:8081"
    restuser:
      label: REST User
      placeholder: "e.g. admin"
    restuserkey:
      label: REST User Key
      placeholder: "e.g. password"
    secretNamespace:
      label: Secret Namespace
      placeholder: "e.g. default"
    secretName:
      label: Secret Name
      placeholder: "e.g. heketi-secret"
    clusterid:
      label: Cluster ID
      placeholder: "e.g. 630372ccdc720a92c681fb928f27b53f"
    gidMin:
      label: GID MIN
      placeholder: "e.g. 40000"
    gidMax:
      label: GID MAX
      placeholder: "e.g. 50000"
    volumetype:
      label: Volume Type
      placeholder: "e.g. replicate:3"

dangerZone:
  header: Advanced Settings
  subtext: "Typical users will not need to change these.  Proceed with caution, incorrect values can break your {appName} installation.<br/>Settings which have been customized from default settings  are shown in <b>bold</b>."
  showLabel: I understand that I can break things by changing advanced settings.
  description:
    'access$log': 'Path to write access logs to (HA installation only)'
    'api$auth$jwt$token$expiry': 'Authorization token/UI session lifetime (milliseconds)'
    'api$auth$realm': 'HTTP Basic Auth realm for requests without Authorization header'
    'api$auth$restrict$concurrent$sessions': 'Limit active session tokens to one per account.  This mainly prevents users from logging in to the UI from multiple computers simultaneously.  Note: Existing sessions may continue to be valid until they expire when this is initially enabled.'
    'api$interceptor$config': 'JSON configuration for API Interceptor'
    'api$proxy$allow': 'Allow use of /v1/proxy to talk to whitelisted domains, for custom Add Host UIs'
    'api$proxy$whitelist': 'Whitelist of domains to that can be proxied through /v1/proxy to, for custom Add Host UIs'
    'api$ui$css$url': 'CSS location for the API UI'
    'api$ui$js$url': 'JavaScript location for the API UI'
    'audit_log$purge$after$seconds': 'Auto-purge Audit Log entries after this long (seconds)'
    'catalog$refresh$interval$seconds': 'Refresh Catalog git repos after this long (seconds)'
    'container$event$max$size': 'Maximum number of outstanding container events allowed per host before dropping events'
    'default$cluster$template': 'Template to use when creating a new cluster.  This includes the default catalog items which are deployed to the System environment and the configurations of each item.'
    'db$cattle$maxidle': 'Database pool: maximum idle connections (change requires restart)'
    'db$cattle$maxtotal': 'Database pool: maximum total connections (change requires restart)'
    'db$prep$stmt$cache$size': 'Database pool: Prepared statement cache size (per connection; change requires restart)'
    'events$purge$after$seconds': 'Auto-purge Event entries after this long (seconds)'
    'graphite$host': 'Graphite: Server hostname or IP (change requires restart)'
    'graphite$options': 'Graphite: Additional options'
    'graphite$port': 'Graphite: Server port'
    'host$remove$delay$seconds': 'Automatically remove hosts that are disconnected for more than this long (seconds)'
    'lb$instance$image': 'Default docker image for Load Balancer Services'
    'main_tables$purge$after$seconds': 'Auto-purge deleted entries from most tables after this long (seconds)'
    'newest$docker$version': 'The newest supported version of Docker at the time of this release.  A Docker version that does not satisfy supported docker range but is newer than this will be marked as untested'
    'project$create$default': 'Automatically create an Environment for users on first login, if they have access to no other Environments.'
    'registry$default': 'Pull images with no registry specified from this registry instead of DockerHub'
    'registry$whitelist': 'Allow containers images only from the specified registries (if specified; comma-separated)'
    'secrets$backend': 'Backend storage provider for secrets'
    'service_log$purge$after$seconds': 'Auto-purge Service Log entries after this long (seconds)'
    'settings$public': 'The settings that are visible to non-admin users.  These are primarily needed for the UI.'
    'supported$docker$range': 'Semver range for suported Docker engine versions.  Versions which do not satisfy this range will be marked unsupported in the UI'
    'ui$pl': 'Private-Label company name'
    'ui$show$custom$host': 'Show the Custom host option on the Add Host screen.  Note that disabling this does not prevent a user from using the API to add custom hosts.'
    'ui$sendgrid$api_key': 'SendGrid API key'
    'ui$sendgrid$template$password_reset': 'SendGrid template for initiating password reset'
    'ui$sendgrid$template$create_user': 'SendGrid template for confirming email'
    'ui$sendgrid$template$verify_password': 'SendGrid template for confirming password reset'
    'upgrade$manager': 'Automatic upgrades of infrastructure stacks'

editAccount:
  title: Edit Account
  form:
    name:
      label: Display Name
      placeholder: e.g. John Smith
    kind:
      label: Account Type
      user: Normal User
      admin: "Admin: Full access to manage everything in all clusters"
    description:
      label: Description
      placeholder: e.g. This account is for John Smith
    publicValue:
      label: Username
    oldPassword:
      label: Current Password
    newPassword:
      label: New Password
    confirmPassword:
      label: Confirm Password
    identity:
      label: Identity

editApiKey:
  title:
    justCreated: API Key Created
    editing: Edit API Key
    new: Add API Key
  accessKey: Access Key (username)
  secretKey: Secret Key (password)
  basicAuth: "Access Key and Secret Key can be sent as the username and password for HTTP Basic auth to authorize requests.  You can also combine them to use as a Bearer token:"
  token: Bearer Token
  ttl:
    label: Automatically Expire
    never: Never
    day: A day from now
    month: A month from now
    year: A year from now
  description:
    placeholder: "Optional: e.g. This key is used by the app servers to deploy containers"
  saveWarning1: Save the info above!  This is the only time you'll be able to see it.
  saveWarning2: If you lose it, you'll need to create a new API key.
  noteOptional: Description is optional to help you remember what this key will be used for.

editCertificate:
  title: Edit Certificate
  name:
    placeholder: e.g. mydomain.com
  description:
    placeholder: e.g. EV cert for mydomain.com
  noteKeyWriteOnly: "Note: The Private Key is intentionally blank because the field is write-only.  You will do not need to provide the Private Key unless you are intending on changing it."

editCluster:
  title:
    new: Add Cluster
    edit: Edit Cluster
  name:
    label: Name
    placeholder: e.g. Sandbox
  description:
    label: Description
    placeholder: e.g. Shared cluster for development
  systemStacks:
    hr: Cluster Options
    title: System Catalog Stacks
    detail: These stacks will be automatically deployed into the System environment for the cluster.
    noData: No stacks will be deployed into the System environment.
    add: Add Stack
    cancel: Cancel Add System Stack
  modal:
    onCluster: "Attention: You are trying to delete the cluster that owns your current environment. Please select a new environment in a different cluster before deleting this cluster."

editContainer:
  title:
    vm: Edit VM
    container: Edit Container
  name:
    placeholder: e.g. myapp
  description:
    placeholder: e.g. My Application

editHost:
  title: Edit Node
  hostname:
    label: Hostname
    help: As reported by the node operating system.
  customName:
    label: Custom Name
    placeholder: e.g. dev1
    help: If this is left empty, the Hostname will be shown as the Name.
  description:
    label: Description
    placeholder: e.g. My development node
  labels:
    label: Labels
  ips:
    label: Scheduler IPs
    valueLabel: IP Address
    valuePlaceholder: e.g. 1.2.3.4
    addActionLabel: Add IP
    help:  If provided, the scheduler will select and bind published ports to one of the given public IP addresses.
  requireAny:
    label: Require Container Label
    help: If provided, containers must have one or more of the given labels in order to be eligible for scheduling onto this node.  If the value is left empty, a container with a matching key is eligible regardless of value.  <code>io.rancher.container.system</code> is required to allow system containers on to the node.
    addActionLabel: Add Required Label

editService:
  title: Edit Service

editStack:
  title: Edit Namespace
  name:
    label: Name
    error: Namespace name is already in use. Please choose a new namespace name.
    placeholder: e.g. myapp
  project:
    label: Project
    prompt: Select a Project...
  description:
    label: Description
    placeholder: e.g. MyApp namespace
  group:
    label: Tags
    placeholder: e.g. frontend, production
    help: Comma-separated list of tags for the new Stack.  The workload lists can be filtered by individual tags.

editUser:
  title: Edit User
  form:
    name:
      label: Display Name
      placeholder: e.g. John Smith
    username:
      label: Username
    otherRoles:
      label: Remove Roles
    password:
      label: Change Password
      new: New Password
      confirm: Confirm Password
      error: Passwords must match
      mustChangePassword:
        new: Ask user to change their password on first login
        edit: Ask user to change their password on next login

envCatalog:
  header: Catalog
  subtext: You can define your own custom catalog sources here. Catalogs added here will only be availabel to the environemnt in which they were added. Each one needs a unique name and a URL that <code>git clone</code> can handle (see <a href="https://git-scm.com/docs/git-clone#_git_urls_a_id_urls_a" target="_blank" rel="nofollow noopener noreferrer">docs</a> for more info).
  addActionLabel: Add Catalog

moveNamespace:
  title: |
    Move {count, plural,
    =1 {namespace: {name}}
    other {# namespaces:}}
  to: "To project:"
  actionLabel: Move

stackHeader:
  title: 'Namespace: {name}'
  outputs: Outputs

stacksPage:
  table:
    standalone: Standalone
    endpoints: Endpoints
    scale: Scale
    instanceState: Container States
    instanceStateWithIcon: States

formatIp:
  noIp: None

formBalancerConfig:
  title: Custom Config File
  detail: Provide your own custom configuration file to be applied on top of the config generated by {appName}
  custom: |
    See <a href="https://cbonte.github.io/haproxy-dconv/1.6/configuration.html" target="_blank" rel="nofollow noopener noreferrer">haproxy documentation</a> fore more info about specific options that can go into the the config file.  When overriding the <code>backend</code> or similar lines which include the IP address of the target container, use <code>$IP</code> where the address goes and {appName} will generate the appropriate line(s).
  config:
    prompt: Custom haproxy.cfg content

formIngress:
  defaultBackend:
    label: Set this rule as default backend
    mark: Default backend
  label: Rules
  addRuleLabel: Add Rule
  removeRuleLabel: Remove this Rule
  noRules: No Rules
  host:
    label: Request Host
    placeholder: "e.g. example.com"
  backendType:
    label: Backend Type
  mode:
    workload: Workload
    service: DNS Record
formIngressBackends:
  label: Target Backend
  noRules: No Backends
  addServiceLabel: Service
  addWorkloadLabel: Workload
  service:
    label: service
  workload:
    label: workload
  targetPort:
    label: Port
    placeholder: e.g. 80
  path:
    label: Path
    placeholder: e.g. /foo
  target: Target

formBalancerListeners:
  label: Listeners & Target Rules
  detail: Control the mapping of requests coming into the balancer to the desired target.
  status: |
    {count, plural,
    =0 {No rules}
    =1 {# rule}
    other {# rules}
    }
  noRules: No Ports
  addPortLabel: Add a Listening Port
  removePortLabel: Remove this Listening Port
  showBackendLabel: "Customize backend names"
  access:
    label: Access
    public: Public
    internal: Internal
  protocol:
    label: Protocol
  sourceIp:
    label: Host IP
    placeholder: "e.g. 1.2.3.4; Default: All"
  sourcePort:
    label: Listening Port
    placeholder: e.g. 80
  help: "Host and Path rules are matched top-to-bottom in the order shown.  Backends will be named randomly by default; to customize the generated backends, provide a name and then refer to that name in your custom haproxy.cfg."

formBalancerRules:
  label: Target Rules
  detail: Map requests to different targets depending on host, port, path, or IP address.
  status: |
    {count, plural,
    =0 {No rules}
    =1 {# rule}
    other {# rules}
    }
  noRules: No Rules
  addServiceLabel:  Add a Service
  addInstanceLabel: Add a Container
  addSelectorLabel: Add a Selector
  addTargetLabel:   Add a Rule
  access:
    label: Access
    public: Public
    internal: Internal
  protocol:
    label: Protocol
  sourceIp:
    label: Host IP
    placeholder: "e.g. 1.2.3.4; Default: All"
  sourcePort:
    label: Listening Port
    placeholder: e.g. 80
  path:
    label: Path
    placeholder: e.g. /foo
  hostname:
    label: Request Host
    placeholder: e.g. example.com
  backendName:
    label: Backend
    placeholder: e.g. webapp
  targetPort:
    label: Port
    placeholder: e.g. 80
  priority:
    label: Priority
  target: Target
  selector:
    label: Selector
    placeholder: e.g. foo=bar

formCommand:
  title: Command
  detail: Configuration of the executable that will be run when the container is started.
  command:
    label: Command
    placeholder: e.g. /usr/sbin/httpd -f httpd.conf
  entryPoint:
    label: Entrypoint
    placeholder: e.g. /bin/sh
  environment:
    label: Environment Labels
  workingDir:
    label: Working Dir
    placeholder: e.g. /myapp
  uid:
    label: User ID
    placeholder: e.g. 501
  console:
    label: Console
    both: 'Interactive &amp; TTY <span class="text-muted">(-i -t)</span>'
    interactive: 'Interactive <span class="text-muted">(-i)</span>'
    terminal: 'TTY <span class="text-muted">(-t)</span>'
    none: None
  autoRestart:
    label: Auto Restart
    no: Never
    onFailure: 'On failure <span class="text-muted">(non-0 exit code)</span>, forever'
    onFailureCondPrefix: On failure, up to
    onFailureCondSuffix: |
      {limit, plural,
        =1 {time}
        other {times}
      }
    always: Always
  terminationGracePeriodSeconds:
    label: Stop Timeout
    helpText: The container will have this long to stop on its own before it is forcefully terminated.
  fsgid:
    label: Filesystem Group
    placeholder: e.g. 501


formContainerLinks:
  title: Links
  detail: Define relationships between this and other containers.
  addActionLabel: Add Link
  name:
    label: Target Container
  alias:
    label: As Name
    placeholder: e.g. database
  noData: There are no container links
  noMatch: No links match the current search

formCount:
  label: Count

formDisks:
  addDiskLabel: Add Disk
  addRootDiskLabel: Add Root Disk
  name:
    rootDisk: Root Disk
    label: Name
    placeholder: e.g. data
  size:
    label: Size
    rootDisk: Determined by root image
  readIops:
    label: Read Iops
    placeholder: e.g. 1000
  writeIops:
    label: Write Iops
    placeholder: e.g. 1000
  driver:
    label: Driver

formEngineOpts:
  title: Engine Options
  detail: Customize the configuration of the Docker daemon
  engineInstallUrl:
    label: Docker Install URL
    placeholder: e.g. http://get.docker.com/
    recommended: Recommended
    latest: Latest
  engineStorageDriver:
    label: Storage Driver
    placeholder: e.g. overlay
  engineOpts:
    label: Engine Options
    addActionLabel: Add Engine Option
    keyPlaceholder: e.g. log-driver
    valuePlaceholder: e.g. syslog
  engineLabels:
    label: Engine Labels
    addActionLabel: Add Engine Label
    keyLabel: Label
  engineEnv:
    label: Engine Environment
    addActionLabel: Add Environment Variable
    keyLabel: Variable
    keyPlaceholder: e.g. HTTP_PROXY
    valuePlaceholder: e.g. http://your-proxy:8080
  engineInsecureRegistry:
    label: Insecure Registries
    addActionLabel: Add Insecure Registry
    valueLabel: Registry Domain
    valuePlaceholder: e.g. registry.example.com
  engineRegistryMirror:
    label: Registry Mirrors
    addActionLabel: Add Registry Mirror
    valueLabel: Mirror URL
    valuePlaceholder: e.g. https://my-mirror.example.com:5000

formEnvVar:
  title: Environment Variables
  detail: Enviroment Variables that were added at creation.
  noData: No Environment Variables
  status: |
    {count, plural,
    =0 {Not Configured}
    =1 {# variable}
    other {# variables}
    }
  labels:
    key: Key
    value: Value

formGlobalRoles:
  title: Global Permissions
  description: Controls what access the user has to administer the overall {appName} installation.
  mode:
    admin:
      label: Administrator
      detail: Administrators have full control over the entire installation and all resources in all clusters.
    user:
      label: Standard User
      detail: Standard Users can create new clusters and manage clusters and projects they have been granted access to.
    custom:
      label: Custom
      detail: Choose individual permissions for the user.
  role:
    create-clusters:
      label: Create new Clusters
      detail: Allows the user to create new clusters and become the owner of them.  Standard Users have this permission by default.
    manage-authn:
      label: Configure Authentication
      detail: Allows the user to enable, configure, and disable all Authentication provider settings.
    manage-catalogs:
      label: Configure Catalogs
      detail: Allows the user to add, edit, and remove Catalogs
    manage-clusters:
      label: Manage all Clusters
      detail: Allows the user to manage all clusters, including ones they are not a member of.
    manage-node-drivers:
      label: Configure Node Drivers
      detail: Allows the user to enable, configure, and remove all Node Driver settings
    manage-node-templates:
      label: Manage Node Templates
      detail: Allows the user to define, edit, and remove Node Templates
    manage-roles:
      label: Manage Roles
      detail: Allows the user to define, edit, and remove Role definitions
    manage-users:
      label: Manage Users
      detail: Allows the user to create, remove, and set passwords for all Users
    use-catalogs:
      label: Use Catalogs
      detail: Allows the user to see and deploy Templates from the Catalog.  Standard Users have this permission by default.
    use-node-templates:
      label: Use Node Templates
      detail: Allows the user to deploy new Nodes using any existing Node Templates.
    base:
      label: Login Access
formMembers:
  members:
    user: User
    group: Group
    serviceaccount: Service Account
    labelText: Members
    addMember: Add Member
    addUser: Add User
    noAddUser: You are the only active registered user.
    addGroup: Add Group
    addServiceAccount: Add Service Account
    multipleRoles: Multiple Roles
    customRoles: Custom Roles
    kind:
      label: Kind
    name:
      label: Name
    role:
      label: Role
    errors:
      nameReq: Name is required.
      nameInExists: Name is already exists. Please use a new project name.
      memberNameReq: Name is required for a member
      memberRoleReq: Role is required for a member
      ownerReq: There must be at least one member with the Owner role.

formScopedRoles:
  title: '{type} Permissions'
  description: 'Controls what access users have to the {type}.'
  mode:
    admin:
      label: Owner
      detail: Owners have full control over the {type} and all resources inside it.
    user:
      label: Member
      detail: Members can manage the resources inside the {type} but not change the {type} itself.
    custom:
      label: Custom
      detail: Choose individual roles for this user
    readOnly:
      label: Read Only
      detail: Members can view the resources inside the {type} but not change the {type} itself.
    userDef:
      detail: User defined role.
    role:
      read-only:
        label: Read-Only
        detail: Allows seeing everything, but not changing anything.

formHealthCheck:
  title: Health Check
  detail: Periodically make a request to the container to see if it is alive and responding correctly.
  readiness: Readiness Check
  liveness: Liveness Check
  separateLivenessCheck: Define a separate liveness check
  combinedLivenessCheck: Use the same check for liveness and readiness
  checkType:
    none: None
    tcp: TCP connection opens successfully
    http: HTTP request returns a successful status (2xx or 3xx)
    https: HTTPS request returns  a successful status (2xx or 3xx)
    command: Command run inside the container exits with status 0
  command:
    label: Command
    placeholder: e.g. cat /tmp/health
  path:
    label: Request Path
    placeholder: e.g. /healthcheck
  httpHeaders:
    label: Additional Headers
    addActionLabel: Add Header
    keyLabel: Header Name
    keyPlaceholder: e.g. User-Agent
    valuePlaceholder: e.g. Health-Check
  host:
    label: Host Header
    placeholder: e.g. example.com
  port:
    label: Target Container Port
    placeholder: e.g. 80
  initialDelaySeconds:
    label: Start Checking After
  reinitializingTimeout:
    label: Reinitializing Timeout
  periodSeconds:
    label: Check Interval
  timeoutSeconds:
    label: Check Timeout
  successThreshold:
    label: Healthy After
    unit: successes
  failureTheshold:
    label: Unhealthy After
    unit: failures

formKeyToPath:
  addAction: Add Item
  header: Items
  default: All Keys
  specific: Select Specific Keys
  key:
    label: Key
    placeholder: "e.g. username"
  path:
    label: Path
    placeholder: "e.g. my-group/my-username"
  mode:
    label: Mode
    placeholder: "e.g. 400"

formKeyValue:
  addAction: Add Pair
  key:
    label: Key
    placeholder: Key
  separator: "="
  value:
    label: Value
    placeholder: Value
  protip: 'ProTip: Paste lines of key=value pairs into any key field for easy bulk entry.'

formImage:
  label: Docker Image
  container:
    placeholder: "e.g. ubuntu:xenial"

formNameDescription:
  name:
    label: Name
    placeholder: Name
  description:
    label: Description
    placeholder: Description
    expand: Add a Description

formNetwork:
  title: Networking
  detail: Configure the networking and DNS options for the container.
  netMode:
    label: Use Host's Network Namespace
    disable: "No"
    enable: "Yes"
  dnsPolicy:
    label: DNS Policy
    clusterFirstWithHostNet: "Cluster first with host network"
    clusterFirst: "Cluster first"
  container:
    label: Container
  requestedIp:
    label: Request IP
    placeholder: Optional; e.g. 10.42.2.24
    help: Request a specific IP in the 10.42.0.0/16 block.  If already in use, a random one will be assigned.
  retainIp:
    label: Retain IP
    reuse: Reuse existing IP on upgrade or replace
  dns:
    label: Service Discovery
    enable: Enable discovery and use local caching resolver
    disable: Disable discovery and directly use remote resolving servers
  hostname:
    label: Hostname
    placeholder: e.g. web
    dockerId: Use the Docker container ID
    hostName: Use the host's hostname
    containerName: Use the container name
    custom: Set a specific hostname
  domainName:
    label: Domain Name
    placeholder: e.g. example.com
  resolvingServers:
    label: Resolving Servers
    addActionLabel: Add Server
    placeholder: e.g. 8.8.4.4
  searchDomains:
    label: Search Domains
    placeholder: e.g. prod.example.com
    addActionLabel: Add Domain
  subdomain:
    label: Subdomain
    placeholder: e.g. foo
  hostAlias:
    addActionLabel: Add Host Alias
    label: Host Aliases (/etc/hosts entries)
    host:
      label: Hostname
      placeholder: e.g. database
    ip:
      label: IP Address
      placeholder: e.g. 192.168.0.1

formPorts:
  header: Port Mapping
  addAction: Add Port
  kind:
    label: Publish on
    NodePort: Every node
    HostPort: Nodes running a pod
    ClusterIP: Internal cluster IP
    LoadBalancer: Load Balancer
  sourcePort:
    label: Source Port
    placeholder: "e.g. 80"
    ipPlaceholder: "e.g. 80 or 19.82.2.24:80"
    clusterIpDefault: "Same as container port"
  nodePort:
    placeholder: "e.g. 30000"
  containerPort:
    label: Container Port
    placeholder: "e.g. 8080"
  protocol:
    label: Protocol
  name:
    label: Name
    placeholder: "e.g. backend"
  dnsName:
    label: DNS Name
    placeholder: "e.g. example"
  noPorts: This container has no port maps.
  error:
    privateRequired: Private Container Port is required for each port rule.
    publicRequired: Source Port is required if Host IP is specified.
    sourcePortRequired: Source Port is required for Nodes running a pod.
    mixedIpPort: "Port {ip}:{port}/{proto} has more than one mapping."
    mixedPort: "Port {port}/{proto} has more than one mapping."
  showAdvanced: Show Port Naming Options

formScale:
  label: Workload Type
  showAdvanced: More options
  scaleMode:
    deploymentPrefix: "Scalable deployment of"
    replicationControllerPrefix: "Replication Controller of"
    replicaSetPrefix: "Replica Set of"
    statefulSetPrefix: "Stateful set of"
    scaleSuffix: |
      {scale, plural,
        =1 {pod}
        other {pods}
      }
    daemonSet: "Run one pod on each node"
    cronJob: "Run on a cron schedule"
    job: Job
    sidekickInactive: "Sidecar: Add a container to an existing workload"
    sidekickPrefix: "Sidecar: Add a container to"
    sidekickSuffix: ""

formScheduling:
  title: Node Scheduling
  detail: Configure what nodes the pods can be deployed to.
  status: |
    {count, plural,
    =0 {No rules}
    =1 {# rule}
    other {# rules}
    }
  canRequestHost:
    vm: Run <b>all</b> virtual machines on a specific node
    containers: Run <b>all</b> pods for this workload on a specific node
  runSpecific: Run this pod on a specific node
  noRules: No rules.
  noToleration: No tolerations.
  autoRun: "Automatically run on every node matching scheduling rules:"
  autoPick:
    vm: "Automatically pick nodes for each virtual machine matching scheduling rules:"
    container: "Automatically pick nodes for each pod matching scheduling rules:"
    host: "Automatically pick a node matching scheduling rules:"
  addRule: Add Rule
  addCustom: Add Custom Rule
  condition: Condition
  field: Field
  key: Label Key
  value: Value
  operator: Operator
  effect: Effect
  time: Time
  toleration:
    title: Toleration
    add: Add Toleration
  scaling:
    minMaxDetail: If set, the scale will not be allowed to be adjusted by user or API call above or below these limits.
    incrementDetail: If set, the scale must be a multiple of the increment
    hostMaxDetail: If set, schedule containers for this service to a maximum of this many hosts.
  scaleMin: Minimum Scale
  scaleMax: Maximum Scale
  scaleIncrement: Scale Increment
  hostMax: Maximum Nodes
  perHost: per host
  priority:
    label: Priority
    placeholder: e.g. 3
  priorityClassName:
    label: Priority Class Name
    placeholder: e.g. high
  scheduler:
    label: Scheduler
    placeholder: e.g. myScheduler
  nodeSelector:
    requireAll: "Require ALL of:"
    requireAny: "Require Any of:"
    preferred: "Prefer Any of:"
    operator:
      lt: '<'
      le: |
        &le;
      eq: '='
      ne: |
        &ne;
      gt: '>'
      ge: |
        &ge;
      in: 'in list'
      notIn: 'not in list'
      exists: 'is set'
      notExists: 'is not set'
    multiple:
      placeholder: 'e.g. foo, bar, baz'
    custom:
      placeholder: 'e.g. foo > 42 && bar != baz'

formSecrets:
  title: Secrets
  detail: Secrets allow you to inject passwords, keys, or other sensitive information into the containers that need them.
  noneDefined: You do not have any secrets to use.
  noData: No Secrets
  addLabel: Add Secret
  name:
    label: As Name
    placeholder: e.g. db_password
  secret:
    label: Secret
  type:
    label: Type
  source:
    label: Source
  prefixOrKey:
    label: Key
  prefix:
    label: Prefix or Alias
  uid:
    label: User ID
    placeholder: e.g. 0 (root)
  gid:
    label: Group ID
    placeholder: e.g. 0 (wheel)
  mode:
    label: File Mode (octal)
    placeholder: e.g. 0444 (octal)
  help:
    prefix: "Secrets will be available in <code>/run/secrets/</code> inside the Container with the given filename.  "
    showPermissionsLink: "Customize file ownership & permissions"
    suffix: ""

formSecurity:
  title: Security & Host Config
  detail: Grant or limit the abilities of the container to affect the host it is running on.
  pullImage:
    label: Pull Image
    always: Always
    ifNotPresent: Only if not already on the node
  privileged:
    label: Privileged
    disable: "No"
    enable: "Yes: container has full access to the host"
  allowPrivilegeEscalation:
    label: Privilege Escalation
    disable: "No"
    enable: "Yes: container can gain more privileges than its parent process"
  ipcMode:
    label: Use Host's IPC Namespace
    disable: "No"
    enable: "Yes"
  runAsNonRoot:
    label: Run as Non Root
    disable: "No"
    enable: "Yes: container must run as a non-root user"
  readOnlyRootFilesystem:
    label: ReadOnly Root Filesystem
    disable: "No"
    enable: "Yes: container has a read-only root filesystem"
  pidMode:
    label: Use Host's PID Namespace
    disable: "No"
    enable: "Yes"
  memoryLimit:
    label: Memory
    unlimited: Unlimited
    set: Limit to
  cpuLimit:
    label: CPU
    unlimited: Unlimited
    set: Limit to
    unit: milli CPUs
  gpuLimit:
    label: Nvidia GPU
    unlimited: Unlimited
    set: Limit to
    unit: milli GPUs
  swapLimit:
    label: Swap Memory
    unlimited: Unlimited
    set: Limit to
    default: Limit to double the physical limit
    none: Do not allow swap
  swappiness:
    label: Swappiness
    default: Use the host's default
    none: Minimum
    set: Custom (1-100)
  cpuPinning:
    label: CPU Pinning
    placeholder: "e.g. 0,1,3; Default: All"
  shares:
    label: CPU Shares
    placeholder: e.g. 1024
  capabilities:
    add: Add Capabilities
    drop: Drop Capabilities
    helpBlock:
      text: Capabilities allow you to provide fine-grained control over superuser privileges available to the container.
      link: More information
  deviceBinding:
    label: Device Binding
    addActionLabel: Add Binding
    pathHost:
      label: Path in Host
      placeholder: e.g. /dev/sdc
    pathContainer:
      label: Path in Container
      placeholder: e.g. /dev/xsdc
    permissions:
      label: Permissions
  memoryReservation:
    label: Memory Reservation
    placeholder: reserve this much RAM
  milliCpuReservation:
    label: CPU Reservation
    placeholder: reserve this much CPU
    unit: milli CPUs
  milliGpuReservation:
    label: GPU Reservation
    placeholder: reserve this much GPU
    unit: milli GPUs
  isolation:
    label: Isolation
    default: Default (Container)
    hyperv: HyperV (VM)

formSslTermination:
  title: SSL/TLS Certificates
  detail: Configure the certificates that will be presented for requests to encrypted ports.
  defaultCertificate:
    prompt: Choose a Certificate...
  alternateCertificate:
    prompt: Choose a Certificate...
  certificate: Certificate
  alternateCerts: Alternate Certs
  addAlternate: Add Alternate Certificate
  noCertificates: There are no certificates to use.
  noCertificatesConfiged: No Certificates.
  noAlternateCertificates: There are no other certificates to use.
  hosts: Nodes
  noHosts: No Nodes
  host:
    label: Host
    placeholder: e.g. example.com
  addHostLabel: Add Node
  helpBlock: |
    "Note: Some older SSL/TLS clients do not support <a href="https://en.wikipedia.org/wiki/Server_Name_Indication" target="_blank">Server Name Indication (SNI)</a>; these clients will always be offered the main Certificate.  Modern clients will be offered an appropriate certificate from the Alternate Certificates list if a match is found."
  notNeeded: There are no SSL/TLS Listening Ports configured with a valid Target Rule.
  removeCertLabel: Remove this Certificate
  addCertLabel: Add Certificate

formNamespace:
  label:
    reuse: Namespace
    create: Namespace
  toggle:
    simple: Customize
    reuse: Use an existing namespace
    create: Add to a new namespace
  reuse:
    prompt: Choose a Namespace...
  create:
    placeholder: e.g. myapp
  errors:
    noneChosen: You must choose a namespace.
    validation: "Namespace: {error}"

formUserData:
  placeholder: "e.g. Configuration information for the container"
  isVmPlaceholder: "e.g. Configuration information for the virtual machine"
formLabelsAnnotations:
  title: Labels & Annotations
  detail: Key/Value pairs that can be used to label/annotate containers and make scheduling decisions.
formUserLabels:
  title: Labels
  detail: Labels are key/value pairs that can be used to annotate containers and make scheduling decisions.
  nodeDetail: Labels are key/value pairs that can be applied to nodes and used to make scheduling decisions for containers.
  addAction: Add Label
  key:
    label: Key
    placeholder: e.g. foo
  separator: "="
  value:
    label: Value
    placeholder: e.g. bar
  protip: "ProTip: Paste one or more lines of key=value pairs into any key field for easy bulk entry."

formAccessModes:
  label: Access Modes
  accessRWO: Single Node Read-Write
  accessROX: Many Nodes Read-Only
  accessRWX: Many Nodes Read-Write

formAnnotations:
  addActionLabel: Add Annotation
  title: Annotations
  detail: Configure annotations (key/value metadata) for the container.
  errors:
    invalidJSON: Annotation JSON format is invalid.
    topLevelValueInvalid: Annotation JSON top-level value must be an object.

formUpgrade:
  title: Scaling/Upgrade Policy
  detail: Configure how pods are replaced when performing an upgrade.
  strategy:
    label: Upgrade Strategy
    orderedReady: Strict serial update in order and wait for readiness
    parallel: Start all new and stop all old pods in parallel
    onDelete: Start upgraded pods only when old ones are manually deleted
    recreate: Kill ALL pods, then start new
    rollingUpdate: Rolling Update
    startFirst: 'Rolling: start new pods, then stop old'
    stopFirst: 'Rolling: stop old pods, then start new'
    custom: Custom
    batchSize:
      label: Batch Size
      detail: Pods will be started and stopped this many at a time
    maxSurge:
      label: Max Surge
      detail: The maximum number of pods allowed beyond the desired scale at any given time.
    maxUnavailable:
      label: Max Unavailable
      detail: The maximum number of pods which can be unavailable at any given time.
    minReadySeconds:
      label: Minimum Ready Time
      detail: Containers in the pods must be up for at least this long before the pod is considered available.
    progressDeadlineSeconds:
      label: Progress Deadline
      detail: How long to wait without seeing progress before marking the deployment as stalled.


formValueArray:
  addActionLabel: Add Value
  valueLabel: Value
  valuePlaceholder: Value
  noData: No Data
  protip: "ProTip: Paste one or more lines of values into any field for easy bulk entry."

formVolumeRow:
  name:
    label: Volume Name
    placeholder: e.g. vol1
  mode:
    label: Volume Type
    newVolume: Ephemeral Volume
    existingVolume: Existing Volume
    newPvc: New Volume Claim
    existingPvc: Persistent Volume Claim
    bindMount: Bind-Mount
    tmpfs: Tmpfs
    secret: Secret
  remove: Remove Volume
  subPath: Sub Path in Volume
  readOnly: Read-Only
  noVolume: The volume will not be mounted in the current container.  It may be used by other containers in the pod.
  addMount: Add Mount
formVolumes:
  title: Volumes
  detail: Persist and share data separate from the lifecycle of an individual container.
  value:
    prompt: Select a Container...
  volumes: Volumes
  volumesFrom: Volumes From
  volumeDriver:
    label: Driver for custom volumes
    placeholder: 'e.g. rancher-nfs; Default: local'
    suggestion: 'Volume drivers in use:'
  noLaunchConfigs: There are no other launch configs in this service to share volumes with.
  noHostContainers: This host has no containers to use the volumes from.
  onlySingleHost: Only available when adding a container to a particular host.
  errors:
    incomplete: Incomplete volume definition
    absoluteMountPoint: Volume mount points must be absolute paths
  add:
    label: Add Volume...
    newVolume: Add an ephemeral volume
    existingVolume: Existing ephemeral volume
    newPvc: Add a new persistent volume (claim)
    existingPvc: Use an existing persistent volume (claim)
    bindMount: Bind-mount a host directory
    tmpfs: Add an in-memory tmpfs
    secret: Use a secret
  table:
    kind: Kind
    source: Source
    mountPoint: Mount Point
    opts: Access/Options

formCapabilityPodSecurityPolicy:
  title: Capability Policies
  detail: Config set of capability Policies
  capabilities:
    allow: Allowed Capabilities
    add: Default Add Capabilities
    drop: Required Drop Capabilities

formVolumePodSecurityPolicy:
  title: Volume Policy
  detail: Control the usage of volume types
  volumes: Volumes

formAllowedHostPathsPodSecurityPolicy:
  title: Allowed Host Paths Policy
  detail: Whitelist of allowed host paths
  path:
    addLabel: Add Path Prefix
    placeholder: e.g. /foo

formFsGroupPodSecurityPolicy:
  title: FS Group Policy
  detail: Allocating an FSGroup that owns the pod’s volumes
  rule:
    mustRunAs: MustRunAs - Requires at least one range to be specified. Uses the minimum value of the first range as the default. Validates against the first ID in the first range.
    runAsAny: RunAsAny - No default provided. Allows any fsGroup ID to be specified.
  range:
    addLabel: Add Range
    max:
      label: Max
      placeholder: e.g. 6
    min:
      label: Min
      placeholder: e.g. 1

formHostPortsPodSecurityPolicy:
  title: Host Ports Policy
  detail: The use of host ports
  port:
    addLabel: Add Port Range
    max:
      label: Max
      placeholder: e.g. 7000
    min:
      label: Min
      placeholder: e.g. 6000

formRunAsUserPodSecurityPolicy:
  title: Run As User Policy
  detail: The user ID
  rule:
    mustRunAs: MustRunAs - Requires a range to be configured. Uses the first value of the range as the default. Validates against the configured range.
    mustRunAsNonRoot: MustRunAsNonRoot - Requires that the pod be submitted with a non-zero runAsUser or have the USER directive defined in the image. No default provided.
    runAsAny: RunAsAny - No default provided. Allows any runAsUser to be specified.
  range:
    addLabel: Add Range
    max:
      label: Max
      placeholder: e.g. 6
    min:
      label: Min
      placeholder: e.g. 1

formSeLinuxodSecurityPolicy:
  title: SELinux Policy
  detail: The SELinux context of the container
  rule:
    mustRunAs: MustRunAs - Uses seLinuxOptions as the default. Validates against seLinuxOptions.
    runAsAny: RunAsAny - Allows any seLinuxOptions to be specified
  level:
    label: Level
    placeholder: e.g. level
  role:
    label: Role
    placeholder: e.g. role
  user:
    label: User
    placeholder: e.g. user

formSupplementalGroupsPodSecurityPolicy:
  title: Supplemental Groups Policy
  detail: Configuring allowable supplemental groups
  rule:
    mustRunAs: MustRunAs - Requires at least one range to be specified. Uses the minimum value of the first range as the default. Validates against all ranges.
    runAsAny: RunAsAny - No default provided. Allows any supplementalGroups to be specified.
  range:
    addLabel: Add Range
    max:
      label: Max
      placeholder: e.g. 6
    min:
      label: Min
      placeholder: e.g. 1

formBasicPodSecurityPolicy:
  title: Basic Policies
  detail: Config basic pod security policies
  allowPrivilegeEscalation:
    label: Allow Privilege Escalation
    enable: "Yes: Running of a container that allow privilege escalation from its parent"
    disable: "No"
  defaultAllowPrivilegeEscalation:
    label: Default Allow Privilege Escalation
    enable: "Yes: Control whether a process can gain more privileges than its parent process"
    disable: "No"
  hostIPC:
    label: Host IPC
    enable: "Yes: The use of host’s IPC namespace"
    disable: "No"
  hostNetwork:
    label: Host Network
    enable: "Yes: The use of host networking"
    disable: "No"
  hostPID:
    label: Host PID
    enable: "Yes: The use of host’s PID namespace"
    disable: "No"
  privileged:
    label: Privileged
    enable: "Yes: Running of privileged containers"
    disable: "No"
  readOnlyRootFilesystem:
    label: Read Only Root Filesystem
    enable: "Yes: Requiring the use of a read only root file system"
    disable: "No"

hostSettings:
  header: Host Registration URL
  subtext: What base URL should hosts use to connect to the {appName} API?
  hostUrl:
    local: "This site's address:"
    new:
      labelText: "Something else:"
      placeholder: "e.g. http://example.com:8080"
  helpText:
    static1: "Don't include <code>/v1</code> or any other path, but if you are doing"
    static2: "in front of {appName}, be sure to use <code>https://</code>."
    isRancher: '<a href="{docsBase}/installing-rancher/installing-server/basic-ssl-config/" target="_blank">SSL termination</a>'
    sslTerm: SSL termination
  notPublic:
    alert: |
      Are you sure all the hosts you will create will be able to reach <code>{activeValue}</code> ?<br/>It looks like a private IP or local network.
  badTld:
    alert: |
      The <code>.local</code> Top-Level Domain is reserved by RFC6762 for Multicast DNS.  Using this as your Registration URL is not recommended and may cause DNS resolution issues.  Please choose a different hostname or IP.

hostPod:
  supportState:
    unsupported: Unsupported Docker version
    untested: Untested Docker version
  groupedInstances:
    namespace: 'Namespace:'
    stack: 'Stack:'
    standalone: Standalone Containers

identityBlock:
  loading: Loading...

infoMultiStats:
  connecting: Connecting...
  utilizationStats: Utilization stats are only available while active/running.
  cpuSection:
    labelText: CPU
    system: System
    user: User
  networkSection:
    labelText: Network
    transmit: Transmit
    receive: Receive
  memorySection:
    labelText: Memory
    used: Used
  storageSection:
    labelText: Storage
    read: Read
    write: Write

inputAnswers:
  config: Configuration Options
  unknownType: "Unrecognized question type:"
  noConfig: This template has no configuration options
  protip: "Paste and Read actions require their repective answers to be in a yml/yaml format"

inputIdentity:
  placeholder:
    github: Add a GitHub user or organization name
    generic: Add a user or group by name
  dropdownLabel:
    teams: Your Teams and Organizations
    groups: Your Groups

inputPassword:
  buttonText: Generate

inputTextFile:
  tooltip: Read from a file

podsSection:
  title: Pods
  detail: Pods in this workload

labelsSection:
  kind: Kind
  title: Labels
  detail: Key/Value data that can be used in Node Scheduling rules or as part of configuring other advanced options.
  status: |
    {count, plural,
    =0 {No labels}
    =1 {# label}
    other {# labels}
    }
  key: Key
  value: Value
  noData: No labels

loginShibboleth:
  buttonText: Log In with Shibboleth

loginGithub:
  buttonText: Log In with GitHub

loginUserPass:
  local: Use a Local User
  provider: "{kind}"
  userLabel: Username
  caasLabel: Email
  remember: Remember
  userPlaceholder: e.g. jsmith
  loginLabel: Log In  with {provider}
  loggingInLabel: Logging In...
  passwordLabel: Password

machineTemplatesPage:
  title: Add Node
  new:
    helpText: Launch a new node or import one already running Docker via SSH.
    btn: Configure
  custom: Custom add an existing node that is already running Docker
  templateBox:
    button: Select
    labels:
      region: Region
      zone: Zone

newCertificate:
  title:
    new: Add Certificate
    edit: 'Edit Certificate: {name}'
    view: 'Certificate: {name}'
  key:
    label: Private Key
    placeholder: "Paste in the private key, starting with -----BEGIN RSA PRIVATE KEY-----"
  cert:
    label: Certificate
    placeholder: "Paste in the certificate and any necessary chain certificates, starting with -----BEGIN CERTIFICATE-----"
    protip: Please include any chain certificates that are needed.
  certChain:
    label: Chain Certs
    placeholder: "Optional; Paste in the additional chained certificates, starting with -----BEGIN CERTIFICATE-----"
  metaXML:
    label: Metadata XML
    placeholder: "Paste in the IDP Metadata XML"

modalAboutComponent:
  component: Component
  version: Version
  cattle: Cattle
  cli: CLI
  ui: User Interface
  helm: Helm
  machine: Machine

modalAddPayment:
  header: Add New Payment Method
  save: Save
  errors:
    cc: Invalid credit card number
    exp: Invalid Expiry
    cvc: Invalid CVC number
    street: A street is required.
    city: A city is required.
    state: A state is required.
    zip: A zipcode is required.
  form:
    currency:
      label: Select your currency
    cc:
      label: Credit Card Number
      placeholder: '•••• •••• •••• ••••'
    default:
      label: Default Card
    name:
      label: Name On Credit Card
      placeholder: 'John Smith'
    exp:
      label: Expiration
      placeholder: '••/••'
    cvc:
      label: CVC
      placeholder: '•••'
    address:
      addressLine1:
        label: Address
        placeholder: 742 Evergreen Terrace
      addressLine2:
        label: Address (cont)
        placeholder: Apt. 123
      city:
        label: City
        placeholder: Springfield
      state:
        label: State
        placeholder: OR
      zip:
        label: Zip Code
        placeholder: '99999'
      country:
        label: Country
        placeholder: United States
  currencies:
    yuan: "Chinese Yuan (¥)"
    euro: "Euro (€)"
    dollar: "US Dollar ($)"


modalContainerStop:
  header: "Are you sure you want to stop"
  helpText: "The container will be forcibly terminated if it does not stop itself before the timeout expires"
  protip: "ProTip: Hold the {key} key while clicking stop to bypass this confirmation."
  label: Timeout
  button: Stop

modalConfirmDeactivate:
  header: Are you sure you want to
  protip: "ProTip: Hold the {key} key while clicking {isServiceButton} to bypass this confirmation."
  cancel: Cancel
  buttons:
    project:
      message: deactivate your environment
      button: Deactivate
    environment:
      message: stop services for
      button: Stop Services
    default:
      message: deactivate
      button: Deactivate

modalConfirmRemovePayment:
  header: 'Confirm Payment Removal'
  title: 'Are you sure you want to delete'
  card: 'Card ending in {card}'

modalEditDriver:
  header:
    create: Add Node Driver
    edit: Edit Node Driver
  url:
    label: Download URL
    help: The URL to download the machine driver binary for 64-bit Linux.
  uiUrl:
    label: Custom UI URL
    help: "Optional: The URL to load for customized Add Nodes screen for this driver."
    link: See <a href="https://github.com/rancher/ui-driver-skel" target="_blank">ui-driver-skel</a> for more info.
  checksum:
    label: Checksum
    help: "Optional: Verify that the downloaded driver matches the expected checksum."
  whitelist:
    label: Whitelist Domains
    addActionLabel: Add Domain
    noData: No Domains


modalEditSetting:
  title: Edit Advanced Setting
  name:
    label: Name
  value:
    label: Value
    prompt: Select a Value...
  reset:
    label: Reset to Default

modalEditPassword:
  newInstall:
    title: Welcome to {appName}
    help: The first order of business is to set a strong password for the default <code>admin</code> user.
  edit:
    title: Change Password
    help: Please choose a new password
  current: Current Password
  new: New Password
  confirm: Confirm Password
  mismatch: Passwords do not match
  actionButton: Change
  mode:
    generate: 'Use a new randomly generated password:'
    manual: 'Set a specific password to use:'

modalFeedback:
  header: Welcome to {appName}!
  subtitle: "Before you get started, please tell us a little about yourself..."
  send: Get Started

modalHostEvacuate:
  header: "Are you sure you want to evacuate"
  helpText: "This will deactivate the host(s) and delete all non-infrastructure containers running on it."
  protip: "ProTip: Hold the {key} key while clicking stop to bypass this confirmation."
  button: Evacuate

modalProcessError:
  header: Exception Info
  cause: "Cause:"
  none: N/A
  stackTrace: "Stack Trace:"
  close: Close

modalRollbackService:
  title: 'Rollback "{instanceName}"'
  titleWithSidekicks: 'Rollback "{instanceName}" & {count, plural, =1 {# sidecar} other {# sidecar}}'
  action: Rollback
  current:
    label: Current Revision
  revisionId:
    label: Rollback to Revision
    prompt: Choose a Revision...
  difference:
    label: Differences

modalShell:
  title: "Shell: {instanceName}"

modalShortcuts:
  world: World
  time: Time
  title:
    rancher: "WELCOME TO WARP ZONE!"
    pl: Keyboard Shortcuts
  global: Global
  cluster: Cluster
  project: Project
  other: Other Stuff
  shift: Shift-{key}
  delete: Delete selected (in table views)
  shell: Shell

  viewGroup: Toggle view grouping
  nextTab: Next page tab
  search: Focus the search field
  shortcuts: You are here

modalWelcome:
  header: Welcome to {appName}!
  closeModal: Got It

namespaceGroup:
  label: "Namespace: {name}"
  none: Standalone
  project: All Namespaces in this Project

nodeGroup:
  label: "Node: {name}"

newIngress:
  header:
    add: Add Ingress
    edit: Edit Ingress
  error:
    noRules: "You must have one or more rules"
newBalancer:
  header:
    add: Add Load Balancer
    edit: Edit Load Balancer
    upgrade: Upgrade Load Balancer
  error:
    noRules: "You must have one or more listening ports and target rules"
    noSourcePort: "Source Port is required on each rule"
    invalidSourcePort: "Invalid source port: '{num}'"
    invalidTargetPort: "Invalid target port: '{num}'"
    mixedPort: "Port {num} has multiple rules with conflicting access/protcols"
    noTarget: "Target is required on each rule"
    noTargetPort: "Target Port is required on each rule"
    needsCertificate: "A certificate is required because there are SSL/TLS port rules"
    stackName: "A new stack needs a name"

newCatalog:
  answers:
    label: Answers
    addAction: Add Answer
  catalog: "Catalog:"
  category: "Category:"
  config: Configuration Options
  helm:
    label: Configuration Options
    protip: Helm templates accept a comma seperated list of strings
  kind: "Catalog Kind:"
  license: "License:"
  maintainedBy: Maintained by community members
  maintainer: "Maintainer:"
  newNamespace: New Namespace
  newApp: New Application
  noConfig: This template has no configuration options
  official: Officially Certified
  preview: Preview
  saveConfigure: Configure
  saveNew: Launch
  saveUpgrade: Upgrade
  selectVersionAdd: Select a version of the template to deploy
  selectVersionConfigure: Select a version of the template to configure
  selectVersionUpgrade: Select a version of the template to upgrade to
  startService: Start services after creating
  support: "Support:"
  templateVersion: Template Version
  titleAdd: "Add {name} App"
  titleConfigure: "Configure {name} App"
  titleUpgrade: "Upgrade {name} App"
  txt: answers.txt
  unknownType: "Unrecognized question type:"
  upgrade: "Upgrade:"
  url: "Project URL:"
  version:
    prompt: Choose a version...
    default: The default at the time (currently {version})

newContainer:
  add:
    container: Deploy Pod
    service: Deploy Workload
    globalService: Deploy Global Workload
    sidekick: 'Deploy Sidecar'
    sidekickName: 'Deploy Sidecar of "{name}"'
  upgrade:
    container: Upgrade Container
    service: Upgrade Service
    globalService: Upgrade Global Service
    sidekick: Upgrade Sidecar
    sidekickName: 'Upgrade Sidecar of "{name}"'
  selectUpgrade: Select one or more services to upgrade.
  saveUpgrade: Upgrade
  saveNew: Launch
  name:
    placeholder: e.g. myapp
  description:
    placeholder: e.g. My Application
  environment:
    label: Environment Variables
    from: Inject Values From Another Resource
    detail: Set the environment that will be visible to the container, including injecting values from other resources like Secrets.
    addAction: Add Variable
    addFrom: Add From Source
    keyLabel: Variable
    keyPlaceholder: e.g. FOO
    valueLabel: Value
    valuePlaceholder: e.g. bar
  sidekick:
    header: Upgrade service
    title: Select service launch config to upgrade
    detail: '"{service}" has sidecars.  Which container do you want to upgrade?'
    primary: Primary
    sidekick: Sidecar

  errors:
    noSidekick: Choose a workload to add the sidecar to
    duplicateName: 'There is already a sidecar named "{name}" in the workload "{service}"'

newPassword:
  placeholder: New Password
  password: New Password
  confirmPassword: Confirm Password
  passwordNoMatch: Passwords do not match

newSecret:
  title:
    new: Add Secret
    edit: 'Edit Secret: {name}'
    view: 'Secret: {name}'
  name:
    placeholder: e.g. api-key
  description:
    placeholder: e.g. S3 key pair
  values:
    label: Secrets Values
  addActionLabel: Add Secret Value

nodeDriver:
  addTemplate: Add Node Template
  displayName:
    aliyunecs: Aliyun ECS
    amazonec2: Amazon EC2
    azure: Azure
    digitalocean: DigitalOcean
    exoscale: Exoscale
    openstack: OpenStack
    otc: Open Telekom Cloud
    packet: Packet
    rackspace: RackSpace
    softlayer: SoftLayer
    vmwarevsphere: vSphere
  driverOptions: "{driver} Options"
  templateOptions: "{appName} Template"
  amazonec2:
    access:
      title: 1. Account Access
      detail: Choose the region and API Key that will be used to launch EC2 Instances
      next: "Next: Authenticate & select a network"
      loading: Loading Availablility Zone and VPC info from EC2...
      help: "Paste in your AWS key pair here. We'll use this key to create your new Instances."
    zone:
      title: 2. Zone and Network
      detail: Select the Availability Zone and VPC/Subnet for Instances
      next: "Next: Select a Security Group"
      loading: Loading security group info from EC2...
    accessKey:
      label: Access Key
      placeholder: Your AWS access key
    secretKey:
      label: Secret Key
      placeholder: Your AWS secret key
      provided: Provided
    region:
      label: Region
    availabilityZone: Availability Zone
    subnet: VPC/Subnet
    securityGroup:
      title: 3. Security Groups
      detail: Choose the security groups that will be applied to Instances
      choose:  Choose one or more existing groups
      defaultExisting: "Standard: Use the existing <code>{groupName}</code> group"
      defaultCreate: "Standard: Automatically create a <code>{groupName}</code> group"
      next: "Next: Set Instance options"
      loading: Loading Instance options...
    instance:
      title: 4. Instance
      detail: Customize the EC2 Instance that will be created.
    portHelp:
      link: Learn more
      text: about the ports that will be opened.
    needs:
      label: "For {appName} to work correctly your security group will need to allow traffic:"
      item1: From the {appName} server to <code>TCP</code> port <code>22</code> <span class="text-muted">(SSH to install and configure Docker)</span>
      item2: From and To all other hosts on <code>UDP</code> ports <code>500</code> and <code>4500</code> <span class="text-muted">(for IPsec networking)</span></li>
      item3: These rules will <b>not</b> be added automatically.
    instanceType:
      label: Instance Type
    rootSize:
      label: Root Disk Size
      unit: GB
    ami:
      label: AMI
      placeholder: An Ubuntu AMI
      rancherList: RancherOS AMI List
    sshUser:
      label: SSH User
      placeholder: e.g. ubuntu
    iam:
      label: IAM Profile
    privateIp:
      label: Private IP
    onlyPrivate:
      label: Use only private IP address
  digitalocean:
    droplet:
      title: Droplet Options
      detail: Configure the options for the Droplets that will be created by this template.
    sizeLabel: |
      {highMem, select, true {High Memory: } other {}}{memoryGb} GB RAM, {disk} GB Disk, {vcpus, plural,
        =1 {# vCPU}
        other {# vCPUs}
      }
    authAccountButton: 'Next: Configure Droplet'
    accessToken:
      label: Access Token
      placeholder: Your DigitalOcean API access token
      help: |
        Paste in a Personal Access Token from the DigitalOcean
        <a href="https://cloud.digitalocean.com/settings/api/tokens" target="_blank" rel="nofollow noreferrer noopener">Applications & API</a> screen
    image:
      label: Image
    sshUser:
      label: SSH User
      placeholder: 'e.g. root'
    size:
      label: Droplet Size
    region:
      label: Region
    optionsSection: Options
    backups:
      label: Enable Backups
    ipv6:
      label: Enable IPv6
    privateNetworking:
      label: Enable Private Networking
  exoscale:
    accountSection: Account Access
    apiKey:
      label: API Key
      placeholder: Your Exoscale API Key
    secretKey:
      label: Secret Key
      placeholder: Your Exoscale secret key
      provided: Provided
    accountHelp: Paste in your Exoscale key pair here.  We'll use this key to create your new Instances.
    loginAction: "Next: Authenticate & select a Security Group"
    loadingSecurity: Loading security group info from Exoscale...
    securityGroupSection: Security Group
    securityGroup:
      label: Security Group
      defaultExisting: "Standard: Use the existing <code>{groupName}</code> group"
      defaultCreate: "Standard: Automatically create a <code>{groupName}</code> group"
      custom: "Custom: Choose an existing group"
      updating: Updating Security Group...
      creating: Creating Security Group...
    portHelp:
      link: Learn more
      text: about the ports that will be opened.
    needs:
      label: "For {appName} to work correctly your security group will need to allow traffic:"
      item1: From the {appName} server to <code>TCP</code> port <code>22</code> <span class="text-muted">(SSH to install and configure Docker)</span>
      item2: From and To all other hosts on <code>UDP</code> ports <code>500</code> and <code>4500</code> <span class="text-muted">(for IPsec networking)</span></li>
      item3: These rules will <b>not</b> be added automatically.
    selectSecurityGroupAction: "Next: Set Instance options"
    loadingInstance: Fetching available Instance settings...
    instanceSection: Instance
    instanceOptionsSection: Instance Options
    instanceProfile:
      label: Instance Profile
    diskSize:
      label: Root Disk Size
    sshUser:
      label: SSH User
      placeholder: 'usr1'
  packet:
    accountSection: Account Access
    projectId:
      label: Project
      placeholder: Your Packet project ID
    apiKey:
      label: API Key
      placeholder: Your Packet API key
    apiKeyHelp: From the Packet <a href="https://app.packet.net/portal#/api-keys" target="_blank">API Keys</a> screen
    instanceSection: Instance
    instanceOptionsSection: Instance Options
    loginAction: "Next: Authenticate & select an instance"
    authentication: Authenticating
    location: Location
    planDetails:
      label: Instance Details
      cpu: CPUs
      memory: Memory
      drives: Drives
      network: NICs
    image:
      label: Image
    size:
      label: Size
    regionSection: Region
    region:
      label: Region
  rackspace:
    accountSection: Account Access
    username:
      label: Username
      placeholder: Your RackSpace username
    apiKey:
      label: API Key
      placeholder: Your RackSpace API key
    accountHelp: From the Account Settings screen of the RackSpace control panel
    regionSection: Region
    region:
      label: Region
    instanceSection: Instance
    instanceOptionsSection: Instance Options
    flavor:
      label: Flavor
  vmwarevsphere:
    access:
      title: 1. Account Access
      detail: Configure where to find the VCenter or ESXi server
      help: "Note: The free ESXi liecense does not support API access.  Only paid license servers are supported."
    instance:
      title: 2. Instance Options
      detail: Choose the size and OS of the virtual machine
    scheduling:
      title: 3. Scheduling
      detail: Choose what hypervisor the virtual machine will be scheduled to
    vcenter:
      label: vCenter Host
      placeholder: vCenter or ESXi hostname/IP
    vcenterPort:
      label: vCenter Port
    username:
      label: Username
    password:
      label: Password
    instanceSection: Instance
    instanceOptionsSection: Instance Options
    cpuCount:
      label: CPUs
      unit: '{cores, plural, =1 {Core} other {Cores}}'
    memorySize:
      label: Memory
      unit: MB
    diskSize:
      label: Disk
      unit: MB
    boot2dockerUrl:
      label: OS ISO URL
      placeholder: "Default: Latest boot2docker image"
    schedulingSection: Scheduling
    dataCenter:
      label: Data Center
    pool:
      label: Pool
    host:
      label: Host
      placeholder: "Use '/' if using a cluster"
    network:
      label: Network
    dataStore:
      label: Data Store
  azure:
    placement:
      title: Placement
      detail: Select the placement for the instances that will be created by this template.
    access:
      title: Account Access
      detail: API Keys will be used to launch Azure Instances.
    network:
      title: Network
      detail: Configure the network for the instances that will be created by this template.
    instance:
      title: Instance
      detail: Customize the Azure Instance that will be created.
    subscriptionId:
      label: Subscription ID
      placeholder: Your Azure subscription ID
    subscriptionCert:
      label: Subscription Cert
      placeholder: Your Azure subscription certificate
    image:
      label: Image
      placeholder: 'canonical:UbuntuServer:16.04.0-LTS:latest'
    size:
      label: Size
    dockerPort:
      label: Docker Port
      placeholder: '2376'
    publishSettingsFile:
      label: Publish Settings
      placeholder: Your Publish Settings file
    environment:
      label: Environment
      placeholder: 'AzurePublicCloud'
    resourceGroup:
      label: Resource Group
      placeholder: 'docker-machine'
    sshUser:
      label: SSH User
      placeholder: usr1
    storageType:
      label: Storage Type
    vnet:
      label: VNet
      placeholder: '[resourcegroup:]name'
    subnet:
      label: Subnet
      placeholder: example-sub-name
    subnetPrefix:
      label: Subnet Prefix
      placeholder: 128.42.0.0/21
    availabilitySet:
      label: Availability Set
      placeholder: availability-set-name
    openPort:
      label: Open Port
      placeholder: 'Comma-separated, e.g. 80,443'
    privateIpAddress:
      label: Private IP
      placeholder: 127.0.0.1
    usePrivateIp:
      label: Use Private IP To Connect
    staticPublicIp:
      label: Public IP
    noPublicIp:
      label: No Public IP
    clientId:
      label: Client ID
      placeholder: Your Client ID
    clientSecret:
      label: Client Secret
      placeholder: Your Client Secret
    region:
      label: Region
  aliyunecs:
    accountSection: Account Access Section
    accessKey:
      label: Access Key*
      placeholder: Your Aliyun Account Access Key
    accessKeySecret:
      label: Access Key Secret*
      placeholder: Your Key's secret
    apiEndpoint:
      label: Api Endpoint
      placeholder: Private Aliyun Api Server Endpoint
    instanceSection: Instance Section
    instanceOptionsSection: Instance Options Section
    instanceDescription:
      label: Instance Description
      placeholder: Instance Description
    instanceType:
      label: Instance Type
      placeholder: Instance Type
    systemImage:
      label: System image
      placeholder: System image
    instanceTag:
      label: Instance Tag
      placeholder: Your Instance Tag in Aliyun
    internetMaxBandwidth:
      label: Internet Max Bandwidth
      placeholder: 1 to 100
    aliyunSLB:
      label: Aliyun SLB ID
      placeholder: Aliyun SLB ID
    storageSection: Storage Info
    ioOptimized:
      label: Instance Storage I/O Optimized
      placeholder: none or optimized
    systemDiskCategory:
      label: System Disk Category
      placeholder: When Storage is optimized, you can input cloud_efficiency, cloud_ssd or ephemeral_ssd.
    dataDiskCategory:
      label: Data Disk Category
      placeholder: When Storage is optimized, you can input cloud_efficiency, cloud_ssd or ephemeral_ssd.
    dataDiskSize:
      label: Data Disk Size
      placeholder: Disk Size
    region:
      label: Region
      placeholder: Region
    zone:
      label: Available Zone
      placeholder: Blank for auto select
    networkSection: Network Section
    routeCIDR:
      label: Route CIDR
      placeholder: e.g. 192.168.1.0/24
    vpcId:
      label: Aliyun VPC ID
      placeholder: Aliyun VPC ID
    vswitchId:
      label: Aliyun Vswitch ID
      placeholder: Aliyun Vswitch ID
    privateIp:
      label: Private IP
      placeholder: Private IP in Private Network
    privateAddressOnly:
      label: Private Address Only
    securitySection: Security Section
    securityGroup:
      label: Security Group
      placeholder: Security Group
    sshPassword:
      label: SSH Password
      placeholder: Set Instance SSH Password, Blank for Auto set

newConfigMap:
  title:
    new: Add Config Map
    edit: 'Edit Config Map: {name}'
    view: 'Config Map: {name}'
  name:
    placeholder: e.g. map
  description:
    placeholder: e.g. app
  values:
    label: Config Map Values
  addActionLabel: Add Config Map Value

optionallyNamespaced:
  scope:
    label: Scope
    project: Available to all namespaces in this project
    namespace: Available to a single namespace

orchestrationWelcome:
  simple:
    title: Simple
  enhanced:
    title: Enhanced with Kubernetes

pageFooter:
  notARelease: (Not a Release)
  help: 'Help & Docs'
  issues: File an Issue
  forums: Forums
  slack: Slack
  download:
    link: Download CLI
    mac: macOS
    windows: Windows
    linux: Linux
  showSystem: Show System

pagination:
  catalog: |
    {pages, plural,
    =0 {No Catalogs}
    =1 {{count} {count, plural, =1 {Catalog} other {Catalogs}}}
    other {{from} - {to} of {count} Catalogs}}
  certificate: |
    {pages, plural,
    =0 {No Certificates}
    =1 {{count} {count, plural, =1 {Certificate} other {Certificates}}}
    other {{from} - {to} of {count} Certificates}}
  container: |
    {pages, plural,
    =0 {No Clusters}
    =1 {{count} {count, plural, =1 {Cluster} other {Clusters}}}
    other {{from} - {to} of {count} Clusters}}
  cluster: |
    {pages, plural,
    =0 {No Clusters}
    =1 {{count} {count, plural, =1 {Cluster} other {Clusters}}}
    other {{from} - {to} of {count} Clusters}}
  dnsRecord: |
    {pages, plural,
    =0 {No DNS Records}
    =1 {{count} {count, plural, =1 {DNS Record} other {DNS Records}}}
    other {{from} - {to} of {count} DNS Records}}
  driver: |
    {pages, plural,
    =0 {No Drivers}
    =1 {{count} {count, plural, =1 {Driver} other {Drivers}}}
    other {{from} - {to} of {count} Drivers}}
  driverOptions: |
    {pages, plural,
    =0 {No Options}
    =1 {{count} {count, plural, =1 {Driver Option} other {Driver Options}}}
    other {{from} - {to} of {count} Driver Options}}
  entry: |
    {pages, plural,
    =0 {No Entries}
    =1 {{count} {count, plural, =1 {Entry} other {Entries}}}
    other {{from} - {to} of {count} Entries}}
  event: |
    {pages, plural,
    =0 {No Events}
    =1 {{count} {count, plural, =1 {Event} other {Events}}}
    other {{from} - {to} of {count} Events}}
  generic: |
    {pages, plural,
    =0 {No Items}
    =1 {{count} {count, plural, =1 {Item} other {Items}}}
    other {{from} - {to} of {count} Items}}
  image: |
    {pages, plural,
    =0 {No Images}
    =1 {{count} {count, plural, =1 {Image} other {Images}}}
    other {{from} - {to} of {count} Images}}
  link: |
    {pages, plural,
    =0 {No Links}
    =1 {{count} {count, plural, =1 {Link} other {Links}}}
    other {{from} - {to} of {count} Links}}
  loadBalancer: |
    {pages, plural,
    =0 {No Load Balancers}
    =1 {{count} {count, plural, =1 {Load Balancer} other {Load Balancers}}}
    other {{from} - {to} of {count} Load Balancers}}
  ingress: |
    {pages, plural,
    =0 {No Ingresses}
    =1 {{count} {count, plural, =1 {Ingress} other {Ingresses}}}
    other {{from} - {to} of {count} Ingresses}}
  member: |
    {pages, plural,
    =0 {No Members}
    =1 {{count} {count, plural, =1 {Member} other {Members}}}
    other {{from} - {to} of {count} Members}}
  mount: |
    {pages, plural,
    =0 {No Mounts}
    =1 {{count} {count, plural, =1 {Mount} other {Mounts}}}
    other {{from} - {to} of {count} Mounts}}
  namespace: |
    {pages, plural,
    =0 {No Namespaces}
    =1 {{count} {count, plural, =1 {Namespace} other {Namespaces}}}
    other {{from} - {to} of {count} Namespaces}}
  node: |
    {pages, plural,
    =0 {No Nodes}
    =1 {{count} {count, plural, =1 {Node} other {Nodes}}}
    other {{from} - {to} of {count} Nodes}}
  nodePool: |
    {pages, plural,
    =0 {No Node Pools}
    =1 {{count} {count, plural, =1 {Node Pool} other {Node Pools}}}
    other {{from} - {to} of {count} Node Pools}}
  nodeTemplate: |
    {pages, plural,
    =0 {No Node Templates}
    =1 {{count} {count, plural, =1 {Node Template} other {Node Templates}}}
    other {{from} - {to} of {count} Node NodeTemplates}}
  pod: |
    {pages, plural,
    =0 {No Pods}
    =1 {{count} {count, plural, =1 {Pod} other {Pods}}}
    other {{from} - {to} of {count} Pods}}
  podHighlightSubset: "<b>{subset} of {count}</b> Pods"
  podNoSubset: "0 of {count} Pods"
  podLabel: |
    {count, plural,
      =1 {Pod}
      other {Pods}
    }
  port: |
    {pages, plural,
    =0 {No Ports}
    =1 {{count} {count, plural, =1 {Port} other {Ports}}}
    other {{from} - {to} of {count} Ports}}
  project: |
    {pages, plural,
    =0 {No Projects}
    =1 {{count} {count, plural, =1 {Project} other {Projects}}}
    other {{from} - {to} of {count} Projects}}
  rule: |
    {pages, plural,
    =0 {No Rules}
    =1 {{count} {count, plural, =1 {Rule} other {Rules}}}
    other {{from} - {to} of {count} Rules}}
  service: |
    {pages, plural,
    =0 {No Services}
    =1 {{count} {count, plural, =1 {Service} other {Services}}}
    other {{from} - {to} of {count} Services}}
  storageClass: |
    {pages, plural,
    =0 {No Storage Classes}
    =1 {{count} {count, plural, =1 {Storage Class} other {Storage Classes}}}
    other {{from} - {to} of {count} Storage Classes}}
  volume: |
    {pages, plural,
    =0 {No Volumes}
    =1 {{count} {count, plural, =1 {Volume} other {Volumes}}}
    other {{from} - {to} of {count} Volumes}}
  workload: |
    {pages, plural,
    =0 {No Workloads}
    =1 {{count} {count, plural, =1 {Workload} other {Workloads}}}
    other {{from} - {to} of {count} Workloads}}

projectRow:
  none: No description
  orchestration: Orchestration

publicEndpoints:
  endpoint: Endpoint
  bindIpAddress: Bind IP
  publicPort: Public Port
  target: Target
  privatePort: Container Port
  noData: There are no published ports
  noMatch: No ports match the current search

physicalStats:
  title: Physical Attributes
  detail: Physical machine attributes

registryRow:
  address: Address
  username: Username
  created: Created

reservationParameters:
  label: Resource Limit
  memory:
    labelText: 'Memory'
    placeholder: 'Default: Entire host'
    unit: 'MB'
  milliCpu:
    labelText: CPU
    placeholder: 'Default: Entire host'
    unit: 'mCPU'

saveCancel:
  saving: Saving...
  saved: Saved!
  edit: Save
  next: Next
  create: Create
  cancel: Cancel

schema:
  inputBoolean:
    y: "True"
    n: "False"
  inputCertificate:
    prompt: Choose a Certificate...
  inputContainer:
    prompt: Choose a Container...
  inputEnum:
    option: Choose an option...
  inputHost:
    label: Choose a Host...
  inputService:
    prompt: Choose a Workload...
    custom: Custom
  inputDnsRecord:
    prompt: Choose a Service...
  inputSecret:
    prompt: Choose a Secret...

schedulingRuleRow:
  theHost: The host
  must: must
  should: should
  shouldNot: should not
  mustNot: must not
  haveA: have a
  of: of
  hostLabel: host label
  containerLabel: container with label
  serviceName: service with the name
  containerName: container with the name

serverUrl:
  header:
    label: Rancher Server URL
    detail: "What URL should be used for this {appName} installation? All the nodes in your clusters will need to be able to reach this."
  button:
    save: Save URL

siteAccess:
  header: Site Access
  helpText: "Configure who should be allowed to log in and use {appName}."
  unrestricted: "Allow any valid {individuals}"
  restricted: "Allow members of Clusters, Projects, plus Authorized {individuals} and {collection}"
  required: "Restrict access to only Authorized {individuals} and {collection}"
  listHeader: "Authorized {individuals} and {collection}"
  noIdentity: None
  users: Users
  groups: Groups
  organizations: Organizations

systemInfoSection:
  title: System Information
  detail: System and kubernetes information.
  key: Key
  value: Value
  noData: No Data
  arch: Architecture
  dockerVersion: Docker Version
  kernelVersion: Kernel Version
  kubeletVersion: Kubelet Version
  kubeProxyVersion: Kube Proxy Version
  operatingSystem: Operating System Image
  osType: Operating System
  noMatch: No system information match the current search

tableCountSelect:
  header: Table Rows per Page

telemetryOpt:
  header: Statistics
  subtext: |
    Rancher Labs would like to collect anonymous information about the configuration of your installation to help make {appName} better.<br/>Your data will not be shared with anyone else, and no specific resource names or addresses are collected.
  learnMore:
    label: Learn More
  label: Allow collection of anonymous statistics

tooltipLink:
  list: List
  composeYaml: Compose YAML

tooltipWarning:
  notConfigured: Access Control Not Configured
  dismiss: Dismiss

upgradeBtn:
  version:
    current: 'Current'
  status:
    none: 'None'
    loading: 'Checking upgrades...'
    current: 'Up to date'
    available: 'Upgrade available'
    inprogress: 'Upgrade in progress'
    upgraded: 'Upgraded: Finish Upgrade'
    notfound: 'Template version not found'
    error: 'Error checking for upgrade'
    required: 'Upgrade required'

jsonEditor:
  placeholder: "Please input in JSON format"

viewEditDescription:
  form:
    name:
      placeholder: e.g. lab
    description:
      placeholder: e.g. Environment for developer experimentation

volumesPage:
  title: Volume Claims
  addActionLabel: Add Volume Claim
  noData: You do not have any persistent volume claims yet.
  noMatch: No persistent volume claims match the current search
  claimName:
    label: Claim Name
  volume:
    label: Persistent Volume
  storageClass:
    label: Storage Class


vmConsole:
  header: "Console:"
  protip: "ProTip: Hold the {key} key when opening shell access to launch a new window."
  canvas: Canvas not supported.
  footerActions:
    buttonSend: Send Ctrl-Alt-Delete
    buttonCancel: Close

volumeRow:
  mounts:
    readOnly: "(read-only)"

waitOrchestration:
  count: '({sub} of {count})'

waitKubernetes:
  addHost: 'Add at least one host'
  activateHost: 'Waiting for a host to be active'
  createStack: 'Creating Kubernetes system stack'
  startServices: 'Starting services'
  waitApi: 'Waiting for Kubernetes API'

searchableSelect:
  noMatch: No match
  noOptions: No available options

##############################
# Mixins
##############################
containerChoices:
  hostGroup: "Host: {name}"
  hostGroupWithState: "Host: {name} ({state})"
  unknownHost: "Host: ???"
  containerOption: "{name}"

##############################
# Services
##############################
allWorkloads:
  namespace: "Namespace: {name}"

##############################
# Navigation
##############################
nav:
  srToggleDropdown: Toggle Dropdown
  environment:
    cluster: Cluster
    label: Environment
    all: All Environments
    your: Your Environments
    selected: Selected Environment
    edit: 'Edit "{name}"'
  cluster:
    dashboard: Cluster
    members: Members
    nodes: Nodes
    namespaces: Namespaces
    storage:
      tab: Storage
      classes: Storage Classes
      volumes: Persistent Volumes
    projects: Projects
  containers:
    tab: Workloads
    systemTab: System
    ingresses: Load Balancing
    containers: Workloads
    dns: Service Discovery
    volumes: Volumes
    pipelines: Pipelines
    deploy: Deploy
    addContainer: Add Container
    addBalancer: Add Balancer
    addIngress: Add Ingress
    addDns: Add Record
    addVolume: Add Volume
    importCompose: Import from YAML
  group:
    none: Flat List
    node: Group by Node
    workload: Group by Workload
    namespace: Group by Namespace
    namespaceWorkload: Group by Namespace/Workload
  hosts:
    tab: Nodes
    addHost: Add Nodes
  catalog:
    all: All
    library: Library
    community: Community
  apps:
    tab: Catalog Apps
    apps: Catalog Apps
    launch: Launch
  infra:
    tab: Resources
    storagePage: Storage
    certificates: Certificates
    configMaps: Config Maps
    registries: Registries
    secrets: Secrets
    members: Members
  admin:
    tab: Global
    accounts: Users
    clusters: Clusters
    machines: Nodes
    nodeDrivers: Node Drivers
    catalogs: Catalogs
    security:
      tab: Security
      roles: Roles
      members: Members
      podSecurityPolicies: Pod Security Policies
      authentication: Authentication
    settings:
      tab: Settings
      auth: Access Control
      registration: Host Registration
      advanced: Advanced
  user:
    label: "User Menu: {username}"
    logout: Log Out
  userPreferences:
    link: "Preferences"
  nodeTemplates:
    link: "Node Templates"
  api:
    link: "API & Keys"
  settings:
    tab: Settings
    advanced: Advanced
  tools:
    tab: Tools
    alerts: Alerts
    notifiers: Notifiers
    logging: Logging


##############################
# Resource Actions
##############################
action:
  activate: Activate
  addContainer: Deploy Pod
  addSidekick: Add a Sidecar
  clone: Clone
  console: Open Console
  convertToService: Convert to Service
  deactivate: Deactivate
  edit: Edit
  editService: Edit Service
  evacuate: Evacuate
  execute: Execute Shell
  exportConfig: Export Config
  garbageCollect: Cleanup
  logs: View Logs
  makeDefault: Set as default
  nodeConfig: Download Keys
  move: Move
  pause: Pause Operations
  pauseAll: Pause All
  remove: Delete
  replay: Replay
  restart: Restart
  retry: Retry
  resume: Resume
  rollback: Rollback
  setDefault: Set as Login Environment
  start: Start
  startAll: Start All
  stop: Stop
  stopAll: Stop All
  upgrade: Upgrade
  upgradeOrEdit: Upgrade/Edit
  viewConfig: View Config
  viewGraph: View Graph
  viewInApi: View in API
  viewInstance: View Instance
  test: Test
  mute: Mute
  unmute: Unmute

##############################
# Resource Actions
##############################
validation:
  required: '"{key}" is required'
  arrayLength:
    exactly: '"{key}" should contain {count, plural, =1 {# item} other {# items}}'
    between: '"{key}" should contain between {min} and {max} {max, plural, =1 {item} other {items}}'
    min: '"{key}" should contain at least {count} {count, plural, =1 {item} other {items}}'
    max: '"{key}" should contain at most {count} {count, plural, =1 {item} other {items}}'
  stringLength:
    exactly: '"{key}" should be {count, plural, =1 {# character} other {# characters}}'
    between: '"{key}" should be between {min} and {max} {max, plural, =1 {character} other {characters}}'
    min: '"{key}" should be at least {count} {count, plural, =1 {character} other {characters}}'
    max: '"{key}" should be at most {count} {count, plural, =1 {character} other {characters}}'
  number:
    exactly: '"{key}" should be exactly {val}'
    between: '"{key}" should be between {min} and {max}'
    min: '"{key}" should be at least {val}'
    max: '"{key}" should be at most {val}'
  chars: '"{key}" contains {count, plural, =1 {an invalid character} other {# invalid characters}}: {chars}'
  dns:
    doubleHyphen: Cannot contain two consecutive hyphens
    hostname:
      startDot: '"{key}" cannot start with a dot'
      empty: '"{key}" must be at least one character'
      tooLong: '"{key}" cannot be longer than {max} characters'
      startHyphen: '"{key}" must start with a letter or number'
      endHyphen: '"{key}" must end with a letter or number'
      emptyLabel: '"{key}" cannot have two consecutive dots'
      tooLongLabel: '"{key}" cannot have a section longer than {max} characters'
    label:
      startHyphen: '"{key}" must start with a letter or number'
      endHyphen: '"{key}" must end with a letter or number'
      emptyLabel: '"{key}" cannot be empty'
      tooLongLabel: '"{key}" cannot be more than {max} characters'
  k8s:
    identifier:
      startLetter: '"{key}" must start with a letter or number'
      endLetter: '"{key}" must end with a letter or number'
      emptyPrefix: '"{key}" cannot have an empty prefix'
      tooLongPrefix: '"{key}" cannot have a prefix longer than {max} characters'
      emptyLabel: '"{key}" cannot have an empty key'
      tooLongKey: '"{key}" cannot have a key longer than {max} characters'

##############################
# Model Properties
##############################
model:
  account:
    kind:
      registeredAgent: Registered Agent
      agent: Agent
      service: Service
      user: User
      admin: Admin
      project: Environment
  identity:
    displayType:
      user: User
      team: Team
      group: Group
      org: Organization
      localUser: Local User
      unknown: "{type}?"
  machine:
    role:
      worker: Worker
      etcd: etcd
      controlPlane: Control
  openldapconfig:
    server:
      label: Hostname or IP Address
    serviceAccountUsername:
      label: Service Account Username
    serviceAccountPassword:
      label: Service Account Password
    domain:
      label: User Search Base
      placeholder: "e.g. ou=Users,dc=mycompany,dc=com"
      help: "Only users below this base will be used."
  projectMember:
    role:
      member: Member
      owner: Owner
      readonly: Read-Only
      restricted: Restricted
  scaleService:
    min: Minimum Scale
    max: Maximum Scale
    amount: By

growl:
  webSocket:
    connecting:
      title: Error connecting to WebSocket
      warning: Unable to establish a WebSocket connection to the server.  If your server is behind a proxy or SSL-termination device, Browser can not connect to WebSocket. If you run the server behind a proxy, please make sure the proxy supports WebSockets.  Streaming stats, logs, shell/console, and auto-updating of the state of resources may not work until this is resolved.
      safariCertWarning: Another possible cause is that Safari does not allow WebSocket connections using an unrecognized certificate, even if you say to Continue to bypass the warning.  The server must have a certificate signed by a recognized authority Safari automatically trusts.
      disconnectedWarning: "Disconnected from server, attempting to reconnect..."

storageClass:
  aws-ebs:
    title: Amazon EBS Disk
  azure-disk:
    title: Azure Disk
  azure-file:
    title: Azure File
  cinder:
    title: Openstack Cinder Volume
  gce-pd:
    title: Google Persistent Disk
  glusterfs:
    title: Gluster Volume
  local:
    title: Local Node Disk
  longhorn:
    title: Longhorn
  portworx-volume:
    title: Portworx Volume
  quobyte:
    title: Quobyte Volume
  rbd:
    title: Ceph RBD
  scaleio:
    title: ScaleIO Volume
  storageos:
    title: StorageOS
  vsphere-volume:
    title: VMWare vSphere Volume

volumeSource:
  aws-ebs:
    title: Amazon EBS Disk
  azure-disk:
    title: Azure Disk
  azure-file:
    title: Azure Filesystem
  cephfs:
    title: Ceph Filesystem
  config-map:
    title: Config Map Volume
  cinder:
    title: Openstack Cinder Volume
  secret:
    title: Secret Volume
  empty-dir:
    title: Empty Dir Volume
  fc:
    title: Fibre Channel
  flex-volume:
    title: Flex Volume
  flex-volume-longhorn:
    title: Longhorn
  flocker:
    title: Flocker
  gce-pd:
    title: Google Persistent Disk
  glusterfs:
    title: Gluster Volume
  host-path:
    title: Local Node Path
    path:
      label: Path on the Node
      placeholder: e.g. /data
    kind:
      label: The Path on the Node must be
      Any: "Anything: do no check the target path"
      DirectoryOrCreate: A directory, or create if it does not exist
      FileOrCreate: A file, or create if it does not exist
      Directory: An existing directory
      File: An existing file
      Socket: An existing socket
      CharDevice: An existing character device
      BlockDevice: An existing block device
  iscsi:
    title: iSCSI Target
  local:
    title: Local Node Disk
  nfs:
    title: NFS Share
  photon:
    title: Photon Volume
  portworx:
    title: Portworx Volume
  quobyte:
    title: Quobyte Volume
  rbd:
    title: Ceph RBD
  scaleio:
    title: ScaleIO Volume
  storageos:
    title: StorageOS
  vsphere-volume:
    title: VMWare vSphere Volume
