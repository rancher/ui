generic:
  cpu: CPU
  memory: 内存
  hours: 小时
  noData: 没有数据

metrics:
  cluster-cpu-usage: CPU使用率
  cluster-cpu-load: CPU负载
  cluster-memory-usage: 内存使用率
  cluster-fs-usage-percent: 磁盘使用率
  cluster-disk-io: 磁盘I/O
  cluster-network-io: 网络I/O
  cluster-network-packet: 网络数据包
  etcd-db-bytes-sum: 数据库大小
  etcd-grpc-client: GRPC客户端流量
  etcd-peer-traffic: 传输流量
  etcd-raft-proposals: Raft提议
  etcd-rpc-rate: RPC速率
  etcd-stream: 活动流
  etcd-sync-duration: 磁盘同步周期
  apiserver-request-count: API Server请求速率
  apiserver-request-latency: API Server请求延迟
  scheduler-e-2-e-scheduling-latency-seconds-quantile: 调度器e2e调度延迟
  scheduler-pod-unscheduler: 调度失败的Pod
  scheduler-total-preemption-attempts: 调度器尝试调度次数
  controllermanager-queue-depth: 控制器队列深度
  ingresscontroller-nginx-connection: Ingress控制器连接数
  ingresscontroller-request-process-time: Ingress控制器请求处理时长
  node-cpu-load: CPU负载
  node-cpu-usage: CPU使用率
  node-memory-usage: 内存使用率
  node-fs-usage-percent: 磁盘使用率
  node-disk-io: 磁盘I/O
  node-network-io: 网络I/O
  node-network-packet: 网络数据包
  etcd-leader-change: Leader变更
  etcd-disk-operate: 磁盘操作
  fluentd-buffer-queue-length: Fluentd缓存区队列长度
  fluentd-output-errors: Fluentd输出错误速率
  fluentd-output-record-number: Fluentd输出速率
  fluentd-input-record-number: Fluentd输入速率

ingressResponse:
  host: 主机
  path: 路径
  responseTime: 响应时间
  noData: 没有数据
  noMatch: 没有记录匹配当前搜索
  detail: Upstream响应时长（排序前十位）
  title: Ingress Upstream响应时长

etcd:
  hasLeader:
    label: Etcd是否有Leader
  leaderChange:
    label: Leader变更次数
  failedProposals:
    label: 失败提议次数

clusterDashboard:
  title: 仪表盘
  sections:
    cluster: 集群监控
    etcd: Etcd监控
    k8s: Kubernetes组件监控
    rancher: '{appName}日志功能监控'
    node: 节点监控
  noRancherComponents: '{appName}日志功能未启用或者没有足够的数据绘制图表。'
  cpu: CPU
  memory: Memory
  pods: Pods
  value: 值
  more: 更多
  subtitle:
    reserved: "已保留{total}中的{used}"
    used: "已使用{total}中的{used}"
  enableMonitoring: 启用监控并查看实时监控指标
  upgradeAvailable: "升级监控组件到{version}版本"
  monitoringNotReady: 监控API未就绪
  node: Nodes
  etcd: Etcd
  scheduler: Scheduler
  controllerManager: Controller Manager
  alert:
    node: "警告: 节点{node}未激活"
    component: "警告: 组件{component}不健康"
  liveTitle: "已使用{total}中的{used}"
  reserved: 保留值

monitoringPage:
  update: 更新监控配置
  version: 监控组件版本
  upgrade: 升级监控组件到最新版本 {version}
  upgradeAvailable: "(最新版本{version})"
  confirmDisable: "你确定吗？再次点击将会禁用监控。"
  disable: 禁用监控
  enableActionLabel: 启用监控
  systemProject: "如果您想为系统项目中的Pod收集自定义指标，请直接启用集群级别监控。"
  noPermission: "您没有权限配置{level}级别监控。"
  toUpdate:
    cluster: 集群级别监控已启用。
    project: 项目级别监控已启用。
  insufficientSize:
    prometheus:
      cpu: 请确保你至少有一个节点有{cpu} milli CPUs 可用来激活Prometheus工作负载。
      memory: 请确保你至少有一个节点有{memory} MiB 内存可用来激活Prometheus工作负载。
      all: 请确保你至少有一个节点有{cpu} milli CPUs和{memory} MiB 内存可用来激活Prometheus工作负载。
    selectors:
      cpu: 请确保你至少有一个匹配节点选择器的节点有{cpu} milli CPUs 可用来激活Prometheus工作负载。
      memory: 请确保你至少有一个匹配节点选择器的节点有{memory} MiB 内存可用来激活Prometheus工作负载。
      all: 请确保你至少有一个匹配节点选择器的节点有{cpu} milli CPUs和{memory} MiB 内存可用来激活Prometheus工作负载。
    total:
      cpu: 请确保你至少有{cpu} milli CPUs 可用来激活监控。
      memory: 请确保你至少有{memory} MiB 内存可用来激活监控。
      all: 请确保你至少有{cpu} milli CPUs和{memory} MiB 内存可用来激活监控。
  clusterNotEnabled: 集群级别监控未启用。将只采集自定义指标。
  prometheus: 监控尚未启用，点击下面的保存按钮去启用监控。
  resourceLimitsHelp: '启用集群监视时，需要确保工作节点和Prometheus pod具有足够的资源。请访问<a href="https://rancher.com/docs/rancher/v2.x/en/cluster-admin/tools/monitoring/#resource-consumption" target="_blank" rel="nofollow noreferrer">Rancher docs</a>了解建议的资源限制。'
  config:
    types:
      none: 无
      prometheus: Prometheus
    header: Prometheus 配置
    prometheus:
      cpuLimit:
        label: Prometheus CPU限制
        placeholder: '例如: 1000'
        unit: milli CPUs
      cpuRequest:
        label: Prometheus CPU预留
        placeholder: '例如: 1000'
        unit: milli CPUs
      memoryLimit:
        label: Prometheus 内存限制
        placeholder: '例如: 1000'
      memoryRequest:
        label: Prometheus 内存预留
        placeholder: '例如: 1000'
      enablePersistence:
        label: 为Prometheus启用持久化存储
      size:
        label: Prometheus持久化存储大小
        placeholder: '例如: 50Gi'
      storageClass:
        label: Prometheus默认存储类
    grafana:
      enablePersistence:
        label: 为Grafana启用持久化存储
      size:
        label: Grafana持久化存储大小
        placeholder: '例如: 10Gi'
      storageClass:
        label: Grafana默认存储类
    retention:
      label: 数据保存时间
    storageClass:
      label: 存储类
    operator:
      memoryLimit:
        label: Prometheus Operator 内存限制
        placeholder: '例如: 500'
    nodeexporter:
      label: Node Exporter主机端口
      enable: 启用Node Exporter
      cpuLimit:
        label: Node Exporter CPU限制
        placeholder: '例如: 200'
        unit: milli CPUs
      memoryLimit:
        label: Node Exporter 内存限制
        placeholder: '例如: 200'
  nodeSelector:
    addSelectorLabel: 添加选择器
    helpText: 选择部署监控相关的工作负载所运行的节点。
  cluster:
    title: 集群监控配置
    disabled: 当前集群监控尚未启用。
    toDisable: 监控已启用。点击下面的保存按钮来禁用当前集群的监控。
  project:
    title: 项目监控配置
    disabled: 当前项目监控尚未启用。
    toDisable: 监控已启用。点击下面的保存按钮来禁用当前项目的监控。
  errors:
    disableIstioFirst: '在禁用集群监控之前，需要先禁用Istio。'
